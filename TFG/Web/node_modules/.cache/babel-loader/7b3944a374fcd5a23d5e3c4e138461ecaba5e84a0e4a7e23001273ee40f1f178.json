{"ast":null,"code":"/*!\n * Chart.js v3.0.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const vpixels = reset ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y);\n      properties.stop = i > 0 && parsed.x - prevParsed.x > maxGapLength;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (isObject(layout.pos)) {\n    return {\n      same: false,\n      other: false\n    };\n  }\n  if (layout.size) {\n    chartArea[layout.pos] -= layout.size;\n  }\n  layout.size = layout.horizontal ? box.height : box.width;\n  chartArea[layout.pos] += layout.size;\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderColor: (_ctx, options) => options.color,\n    borderWidth: (_ctx, options) => options.lineWidth\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near'\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options;\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right - padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n    if (axisWidth) {\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\n      const lastLineWidth = edgeOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine({\n        x: x1,\n        y: y1\n      }, {\n        x: x2,\n        y: y2\n      }, {\n        width: axisWidth,\n        color: edgeOpts.borderColor\n      });\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initConfig(config) {\n  config = config || {};\n  const data = config.data = config.data || {\n    datasets: [],\n    labels: []\n  };\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = data;\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.0.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, type => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args) {\n    return this._plugins.notify(this, hook, args);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeEvent', args) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    callback(options.onHover, [e, active, me], me);\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element) {\n  const {\n    startAngle,\n    endAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction pathArc(ctx, element) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin,\n    options\n  } = element;\n  const outerRadius = element.outerRadius;\n  const innerRadius = element.innerRadius + pixelMargin;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = distance >= innerRadius && distance <= outerRadius;\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, vm) {\n  ctx.lineCap = vm.borderCapStyle;\n  ctx.setLineDash(vm.borderDash);\n  ctx.lineDashOffset = vm.borderDashOffset;\n  ctx.lineJoin = vm.borderJoinStyle;\n  ctx.lineWidth = vm.borderWidth;\n  ctx.strokeStyle = vm.borderColor;\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params) {\n  params = params || {};\n  const count = points.length;\n  const start = Math.max(params.start || 0, segment.start);\n  const end = Math.min(params.end || count - 1, segment.end);\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  ctx.beginPath();\n  if (line.path(ctx, start, count)) {\n    ctx.closePath();\n  }\n  ctx.stroke();\n}\nconst usePath2D = typeof Path2D === 'function';\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const ilen = segments.length;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n    for (let i = 0; i < ilen; ++i) {\n      loop &= segmentMethod(ctx, me, segments[i], {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    setStyle(ctx, options);\n    strokePath(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {\n    x,\n    y,\n    w,\n    h,\n    radius\n  } = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  const decimated = [];\n  const bucketWidth = (data.length - 2) / (samples - 2);\n  let sampledIndex = 0;\n  let a = 0;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX = data[j].x;\n      avgY = data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[data.length - 1];\n  return decimated;\n}\nfunction minMaxDecimation(data, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const xMin = data[0].x;\n  const xMax = data[data.length - 1].x;\n  const dx = xMax - xMin;\n  for (i = 0; i < data.length; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      if (data.length <= 4 * availableWidth) {\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    chart.data.datasets.forEach(dataset => {\n      if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n          value: data\n        });\n      }\n    });\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(segment => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const subs = _boundSegments(target, bounds);\n    for (let j = 0; j < subs.length; ++j) {\n      const sub = subs[j];\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (let k = 0; k < fillSources.length; k++) {\n        parts.push({\n          source: fillSources[k],\n          target: sub,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  ctx.fillStyle = color;\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\n    const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } = segments[i];\n    ctx.save();\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : 'x';\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const propagate = options.propagate;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, propagate);\n    }\n  },\n  beforeDatasetsDraw(chart) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    let i, meta;\n    for (i = metasets.length - 1; i >= 0; --i) {\n      meta = metasets[i].$filler;\n      if (meta) {\n        meta.line.updateControlPoints(area);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const area = chart.chartArea;\n    const ctx = chart.ctx;\n    const source = args.meta.$filler;\n    if (!source || source.fill === false) {\n      return;\n    }\n    const target = getTarget(source);\n    const {\n      line,\n      scale\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale\n      });\n      unclipArea(ctx);\n    }\n  },\n  defaults: {\n    propagate: true\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {\n        left,\n        top,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = fontColor;\n    ctx.fillStyle = fontColor;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        if (lineWidth !== 0) {\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + fontSize / 2 + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      style: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.fillStyle = options.multiKeyBackground;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.fillStyle = labelColors.backgroundColor;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const me = this;\n    const position = positioners[me.options.position].call(me, active, e);\n    return me.caretX !== position.x || me.caretY !== position.y;\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      style: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      style: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({\n      value: min\n    });\n    if (niceMin < min) {\n      j++;\n    }\n    if (almostWhole(Math.round((niceMin + j * spacing) * factor) / factor / min, spacing / 1000)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined) {\n    if (almostWhole(ticks[ticks.length - 1].value / max, spacing / 1000)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero,\n      stacked\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count\n    };\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? formatter(label, index, ticks) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return me._cache.data = me.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","renderText","V","toFont","W","_toLeftRightCenter","X","_alignStartEnd","Y","overrides","Z","merge","$","_capitalize","a0","descriptors","a1","isFunction","a2","_attachContext","a3","_createResolver","a4","_descriptors","a5","mergeIf","a6","uid","a7","debounce","a8","retinaScale","a9","clearCanvas","aa","_elementsEqual","ab","getAngleFromPoint","ac","_updateBezierControlPoints","ad","_computeSegments","ae","_boundSegments","af","_steppedInterpolation","ag","_bezierInterpolation","ah","_pointInLine","ai","_steppedLineTo","aj","_bezierCurveTo","ak","drawPoint","al","toTRBL","am","toTRBLCorners","an","_boundSegment","ao","_normalizeAngle","ap","getRtlAdapter","aq","overrideTextDirection","ar","_textX","as","restoreTextDirection","at","noop","au","distanceBetweenPoints","av","_addGrace","aw","_setMinAndMaxByKey","ax","niceNum","ay","almostWhole","az","almostEquals","aA","_decimalPlaces","aB","_longestText","aC","_filterBetween","aD","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","itemStacks","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","getMatchingVisibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","animated","spanGaps","maxGapLength","directUpdate","prevParsed","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","same","other","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","initial","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","setContext","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","edgeOpts","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","oldRatio","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasetIndex","oldIndex","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","unbindEvents","toBase64Image","toDataURL","_add","_remove","events","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","pathArc","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","translate","setStyle","vm","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","pathVars","segment","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","usePath2D","strokePath","LineElement","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","interpolated","segmentMethod","capBezierPoints","cubicInterpolationMode","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addRoundedRectPath","rect","addNormalRectPath","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","defineProperty","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","subs","sub","subBounds","fillSources","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","tgt","lineLoop","targetLoop","doFill","above","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDatasetsDraw","beforeDatasetDraw","lineOpts","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","leftForLtr","strokeRect","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","backdropPadding","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","backdropColor","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","showLabelBackdrop","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","time","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/rober/OneDrive - unizar.es/Escritorio/TFG/Presentacion/tfg/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.0.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const vpixels = reset ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y);\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (isObject(layout.pos)) {\n    return {same: false, other: false};\n  }\n  if (layout.size) {\n    chartArea[layout.pos] -= layout.size;\n  }\n  layout.size = layout.horizontal ? box.height : box.width;\n  chartArea[layout.pos] += layout.size;\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderColor: (_ctx, options) => options.color,\n    borderWidth: (_ctx, options) => options.lineWidth\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options;\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right - padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\n      const lastLineWidth = edgeOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: edgeOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initConfig(config) {\n  config = config || {};\n  const data = config.data = config.data || {datasets: [], labels: []};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = data;\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.0.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args) {\n    return this._plugins.notify(this, hook, args);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    if (me.notifyPlugins('beforeEvent', args) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    callback(options.onHover, [e, active, me], me);\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin, options} = element;\n  const outerRadius = element.outerRadius;\n  const innerRadius = element.innerRadius + pixelMargin;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, vm) {\n  ctx.lineCap = vm.borderCapStyle;\n  ctx.setLineDash(vm.borderDash);\n  ctx.lineDashOffset = vm.borderDashOffset;\n  ctx.lineJoin = vm.borderJoinStyle;\n  ctx.lineWidth = vm.borderWidth;\n  ctx.strokeStyle = vm.borderColor;\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params) {\n  params = params || {};\n  const count = points.length;\n  const start = Math.max(params.start || 0, segment.start);\n  const end = Math.min(params.end || count - 1, segment.end);\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  ctx.beginPath();\n  if (line.path(ctx, start, count)) {\n    ctx.closePath();\n  }\n  ctx.stroke();\n}\nconst usePath2D = typeof Path2D === 'function';\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const ilen = segments.length;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (let i = 0; i < ilen; ++i) {\n      loop &= segmentMethod(ctx, me, segments[i], {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    setStyle(ctx, options);\n    strokePath(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  const decimated = [];\n  const bucketWidth = (data.length - 2) / (samples - 2);\n  let sampledIndex = 0;\n  let a = 0;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX = data[j].x;\n      avgY = data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[data.length - 1];\n  return decimated;\n}\nfunction minMaxDecimation(data, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const xMin = data[0].x;\n  const xMax = data[data.length - 1].x;\n  const dx = xMax - xMin;\n  for (i = 0; i < data.length; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      if (data.length <= 4 * availableWidth) {\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    chart.data.datasets.forEach((dataset) => {\n      if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {value: data});\n      }\n    });\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const subs = _boundSegments(target, bounds);\n    for (let j = 0; j < subs.length; ++j) {\n      const sub = subs[j];\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (let k = 0; k < fillSources.length; k++) {\n        parts.push({\n          source: fillSources[k],\n          target: sub,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  ctx.fillStyle = color;\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\n    const {source: src, target: tgt, start, end} = segments[i];\n    ctx.save();\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : 'x';\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const propagate = options.propagate;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, propagate);\n    }\n  },\n  beforeDatasetsDraw(chart) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    let i, meta;\n    for (i = metasets.length - 1; i >= 0; --i) {\n      meta = metasets[i].$filler;\n      if (meta) {\n        meta.line.updateControlPoints(area);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const area = chart.chartArea;\n    const ctx = chart.ctx;\n    const source = args.meta.$filler;\n    if (!source || source.fill === false) {\n      return;\n    }\n    const target = getTarget(source);\n    const {line, scale} = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {above = color, below = color} = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {line, target, above, below, area, scale});\n      unclipArea(ctx);\n    }\n  },\n  defaults: {\n    propagate: true\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = fontColor;\n    ctx.fillStyle = fontColor;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        if (lineWidth !== 0) {\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      style: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.fillStyle = options.multiKeyBackground;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.fillStyle = labelColors.backgroundColor;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const me = this;\n    const position = positioners[me.options.position].call(me, active, e);\n    return me.caretX !== position.x || me.caretY !== position.y;\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      style: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      style: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin < min) {\n      j++;\n    }\n    if (almostWhole(Math.round((niceMin + j * spacing) * factor) / factor / min, spacing / 1000)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostWhole(ticks[ticks.length - 1].value / max, spacing / 1000)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? formatter(label, index, ticks) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,mBAAmB,EAAEC,CAAC,IAAIC,iBAAiB,EAAEC,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,GAAG,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,EAAE,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,qBAAqB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,4BAA4B,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,eAAe,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,MAAM,EAAEC,CAAC,IAAIC,kBAAkB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,UAAU,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,GAAG,EAAEC,EAAE,IAAIC,QAAQ,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,iBAAiB,EAAEC,EAAE,IAAIC,0BAA0B,EAAEC,EAAE,IAAIC,gBAAgB,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,IAAI,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,kBAAkB,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,OAAO,QAAQ,6BAA6B;AACjzD,SAAS/K,CAAC,IAAIC,QAAQ,QAAQ,6BAA6B;AAE3D,MAAM+K,QAAQ,CAAC;EACbC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,SAAS,GAAGC,SAAS;EAC5B;EACAC,OAAOA,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAChC,MAAMC,SAAS,GAAGH,KAAK,CAACI,SAAS,CAACF,IAAI,CAAC;IACvC,MAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAQ;IAC/BH,SAAS,CAACI,OAAO,CAACC,EAAE,IAAIA,EAAE,CAAC;MACzBT,KAAK;MACLM,QAAQ;MACRI,WAAW,EAAEC,IAAI,CAACC,GAAG,CAACV,IAAI,GAAGD,KAAK,CAACY,KAAK,EAAEP,QAAQ;IACpD,CAAC,CAAC,CAAC;EACL;EACAQ,QAAQA,CAAA,EAAG;IACT,MAAMC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACtB,QAAQ,EAAE;MACf;IACF;IACAsB,EAAE,CAACnB,QAAQ,GAAG,IAAI;IAClBmB,EAAE,CAACtB,QAAQ,GAAG7L,gBAAgB,CAACoN,IAAI,CAACC,MAAM,EAAE,MAAM;MAChDF,EAAE,CAACG,OAAO,CAAC,CAAC;MACZH,EAAE,CAACtB,QAAQ,GAAG,IAAI;MAClB,IAAIsB,EAAE,CAACnB,QAAQ,EAAE;QACfmB,EAAE,CAACD,QAAQ,CAAC,CAAC;MACf;IACF,CAAC,CAAC;EACJ;EACAI,OAAOA,CAAChB,IAAI,GAAGiB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;IACzB,MAAML,EAAE,GAAG,IAAI;IACf,IAAIM,SAAS,GAAG,CAAC;IACjBN,EAAE,CAACrB,OAAO,CAACc,OAAO,CAAC,CAACP,KAAK,EAAED,KAAK,KAAK;MACnC,IAAI,CAACC,KAAK,CAACqB,OAAO,IAAI,CAACrB,KAAK,CAACsB,KAAK,CAACC,MAAM,EAAE;QACzC;MACF;MACA,MAAMD,KAAK,GAAGtB,KAAK,CAACsB,KAAK;MACzB,IAAIpN,CAAC,GAAGoN,KAAK,CAACC,MAAM,GAAG,CAAC;MACxB,IAAIC,IAAI,GAAG,KAAK;MAChB,IAAIC,IAAI;MACR,OAAOvN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAClBuN,IAAI,GAAGH,KAAK,CAACpN,CAAC,CAAC;QACf,IAAIuN,IAAI,CAACC,OAAO,EAAE;UAChB,IAAID,IAAI,CAACE,MAAM,GAAG3B,KAAK,CAACM,QAAQ,EAAE;YAChCN,KAAK,CAACM,QAAQ,GAAGmB,IAAI,CAACE,MAAM;UAC9B;UACAF,IAAI,CAACG,IAAI,CAAC3B,IAAI,CAAC;UACfuB,IAAI,GAAG,IAAI;QACb,CAAC,MAAM;UACLF,KAAK,CAACpN,CAAC,CAAC,GAAGoN,KAAK,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;UAClCD,KAAK,CAACO,GAAG,CAAC,CAAC;QACb;MACF;MACA,IAAIL,IAAI,EAAE;QACRzB,KAAK,CAACyB,IAAI,CAAC,CAAC;QACZV,EAAE,CAAChB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;MAC5C;MACA,IAAI,CAACqB,KAAK,CAACC,MAAM,EAAE;QACjBvB,KAAK,CAACqB,OAAO,GAAG,KAAK;QACrBP,EAAE,CAAChB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;MAC5C;MACAmB,SAAS,IAAIE,KAAK,CAACC,MAAM;IAC3B,CAAC,CAAC;IACFT,EAAE,CAAClB,SAAS,GAAGK,IAAI;IACnB,IAAImB,SAAS,KAAK,CAAC,EAAE;MACnBN,EAAE,CAACnB,QAAQ,GAAG,KAAK;IACrB;EACF;EACAmC,SAASA,CAAC/B,KAAK,EAAE;IACf,MAAMgC,MAAM,GAAG,IAAI,CAACtC,OAAO;IAC3B,IAAIO,KAAK,GAAG+B,MAAM,CAACC,GAAG,CAACjC,KAAK,CAAC;IAC7B,IAAI,CAACC,KAAK,EAAE;MACVA,KAAK,GAAG;QACNqB,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,EAAE;QACTlB,SAAS,EAAE;UACT6B,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE;QACZ;MACF,CAAC;MACDH,MAAM,CAACI,GAAG,CAACpC,KAAK,EAAEC,KAAK,CAAC;IAC1B;IACA,OAAOA,KAAK;EACd;EACAoC,MAAMA,CAACrC,KAAK,EAAEsC,KAAK,EAAEC,EAAE,EAAE;IACvB,IAAI,CAACR,SAAS,CAAC/B,KAAK,CAAC,CAACK,SAAS,CAACiC,KAAK,CAAC,CAACE,IAAI,CAACD,EAAE,CAAC;EACjD;EACAE,GAAGA,CAACzC,KAAK,EAAEuB,KAAK,EAAE;IAChB,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE;MAC3B;IACF;IACA,IAAI,CAACO,SAAS,CAAC/B,KAAK,CAAC,CAACuB,KAAK,CAACiB,IAAI,CAAC,GAAGjB,KAAK,CAAC;EAC5C;EACAmB,GAAGA,CAAC1C,KAAK,EAAE;IACT,OAAO,IAAI,CAAC+B,SAAS,CAAC/B,KAAK,CAAC,CAACuB,KAAK,CAACC,MAAM,GAAG,CAAC;EAC/C;EACAX,KAAKA,CAACb,KAAK,EAAE;IACX,MAAMC,KAAK,GAAG,IAAI,CAACP,OAAO,CAACuC,GAAG,CAACjC,KAAK,CAAC;IACrC,IAAI,CAACC,KAAK,EAAE;MACV;IACF;IACAA,KAAK,CAACqB,OAAO,GAAG,IAAI;IACpBrB,KAAK,CAACY,KAAK,GAAGM,IAAI,CAACC,GAAG,CAAC,CAAC;IACxBnB,KAAK,CAACM,QAAQ,GAAGN,KAAK,CAACsB,KAAK,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKlC,IAAI,CAACmC,GAAG,CAACF,GAAG,EAAEC,GAAG,CAACE,SAAS,CAAC,EAAE,CAAC,CAAC;IAClF,IAAI,CAACjC,QAAQ,CAAC,CAAC;EACjB;EACAQ,OAAOA,CAACtB,KAAK,EAAE;IACb,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;MAClB,OAAO,KAAK;IACd;IACA,MAAMK,KAAK,GAAG,IAAI,CAACP,OAAO,CAACuC,GAAG,CAACjC,KAAK,CAAC;IACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACqB,OAAO,IAAI,CAACrB,KAAK,CAACsB,KAAK,CAACC,MAAM,EAAE;MACnD,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EACAwB,IAAIA,CAAChD,KAAK,EAAE;IACV,MAAMC,KAAK,GAAG,IAAI,CAACP,OAAO,CAACuC,GAAG,CAACjC,KAAK,CAAC;IACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACsB,KAAK,CAACC,MAAM,EAAE;MACjC;IACF;IACA,MAAMD,KAAK,GAAGtB,KAAK,CAACsB,KAAK;IACzB,IAAIpN,CAAC,GAAGoN,KAAK,CAACC,MAAM,GAAG,CAAC;IACxB,OAAOrN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAClBoN,KAAK,CAACpN,CAAC,CAAC,CAAC8O,MAAM,CAAC,CAAC;IACnB;IACAhD,KAAK,CAACsB,KAAK,GAAG,EAAE;IAChB,IAAI,CAACxB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEkB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;EACpD;EACA8B,MAAMA,CAAClD,KAAK,EAAE;IACZ,OAAO,IAAI,CAACN,OAAO,CAACyD,MAAM,CAACnD,KAAK,CAAC;EACnC;AACF;AACA,IAAIoD,QAAQ,GAAG,IAAI7D,QAAQ,CAAC,CAAC;AAE7B,MAAM8D,WAAW,GAAG,aAAa;AACjC,MAAMC,aAAa,GAAG;EACpBC,OAAOA,CAACC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACxB,OAAOA,MAAM,GAAG,GAAG,GAAGD,EAAE,GAAGD,IAAI;EACjC,CAAC;EACDtP,KAAKA,CAACsP,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACtB,MAAMC,EAAE,GAAGzP,KAAK,CAACsP,IAAI,IAAIH,WAAW,CAAC;IACrC,MAAMO,EAAE,GAAGD,EAAE,CAACE,KAAK,IAAI3P,KAAK,CAACuP,EAAE,IAAIJ,WAAW,CAAC;IAC/C,OAAOO,EAAE,IAAIA,EAAE,CAACC,KAAK,GACjBD,EAAE,CAACE,GAAG,CAACH,EAAE,EAAED,MAAM,CAAC,CAACK,SAAS,CAAC,CAAC,GAC9BN,EAAE;EACR,CAAC;EACDO,MAAMA,CAACR,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACvB,OAAOF,IAAI,GAAG,CAACC,EAAE,GAAGD,IAAI,IAAIE,MAAM;EACpC;AACF,CAAC;AACD,MAAMO,SAAS,CAAC;EACdzE,WAAWA,CAAC0E,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEX,EAAE,EAAE;IACjC,MAAMY,YAAY,GAAGF,MAAM,CAACC,IAAI,CAAC;IACjCX,EAAE,GAAG3P,OAAO,CAAC,CAACoQ,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;IAClD,MAAMA,IAAI,GAAG1P,OAAO,CAAC,CAACoQ,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;IAClD,IAAI,CAAC9B,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC2C,GAAG,GAAGJ,GAAG,CAACzD,EAAE,IAAI6C,aAAa,CAACY,GAAG,CAAC/D,IAAI,IAAI,OAAOqD,IAAI,CAAC;IAC3D,IAAI,CAACe,OAAO,GAAGvQ,OAAO,CAACkQ,GAAG,CAACM,MAAM,CAAC,IAAIxQ,OAAO,CAACyQ,MAAM;IACpD,IAAI,CAACC,MAAM,GAAG/D,IAAI,CAACgE,KAAK,CAACxD,IAAI,CAACC,GAAG,CAAC,CAAC,IAAI8C,GAAG,CAACU,KAAK,IAAI,CAAC,CAAC,CAAC;IACvD,IAAI,CAAC7B,SAAS,GAAG,IAAI,CAACnB,MAAM,GAAGjB,IAAI,CAACgE,KAAK,CAACT,GAAG,CAAC3D,QAAQ,CAAC;IACvD,IAAI,CAACsE,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;IACvB,IAAI,CAACC,OAAO,GAAGZ,MAAM;IACrB,IAAI,CAACa,KAAK,GAAGZ,IAAI;IACjB,IAAI,CAACa,KAAK,GAAGzB,IAAI;IACjB,IAAI,CAAC0B,GAAG,GAAGzB,EAAE;IACb,IAAI,CAAC0B,SAAS,GAAGrF,SAAS;EAC5B;EACAsF,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACzD,OAAO;EACrB;EACA0D,MAAMA,CAACnB,GAAG,EAAET,EAAE,EAAEvD,IAAI,EAAE;IACpB,MAAMa,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACY,OAAO,EAAE;MACdZ,EAAE,CAAChB,OAAO,CAAC,KAAK,CAAC;MACjB,MAAMsE,YAAY,GAAGtD,EAAE,CAACgE,OAAO,CAAChE,EAAE,CAACiE,KAAK,CAAC;MACzC,MAAMM,OAAO,GAAGpF,IAAI,GAAGa,EAAE,CAAC2D,MAAM;MAChC,MAAMa,MAAM,GAAGxE,EAAE,CAACgC,SAAS,GAAGuC,OAAO;MACrCvE,EAAE,CAAC2D,MAAM,GAAGxE,IAAI;MAChBa,EAAE,CAACgC,SAAS,GAAGpC,IAAI,CAACgE,KAAK,CAAChE,IAAI,CAACmC,GAAG,CAACyC,MAAM,EAAErB,GAAG,CAAC3D,QAAQ,CAAC,CAAC;MACzDQ,EAAE,CAACa,MAAM,IAAI0D,OAAO;MACpBvE,EAAE,CAAC8D,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;MACrB/D,EAAE,CAACmE,GAAG,GAAGpR,OAAO,CAAC,CAACoQ,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;MACtDzC,EAAE,CAACkE,KAAK,GAAGnR,OAAO,CAAC,CAACoQ,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;IAClD;EACF;EACAR,MAAMA,CAAA,EAAG;IACP,MAAMlC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACY,OAAO,EAAE;MACdZ,EAAE,CAACc,IAAI,CAACV,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MACnBL,EAAE,CAACY,OAAO,GAAG,KAAK;MAClBZ,EAAE,CAAChB,OAAO,CAAC,KAAK,CAAC;IACnB;EACF;EACA8B,IAAIA,CAAC3B,IAAI,EAAE;IACT,MAAMa,EAAE,GAAG,IAAI;IACf,MAAMuE,OAAO,GAAGpF,IAAI,GAAGa,EAAE,CAAC2D,MAAM;IAChC,MAAMnE,QAAQ,GAAGQ,EAAE,CAACgC,SAAS;IAC7B,MAAMqB,IAAI,GAAGrD,EAAE,CAACiE,KAAK;IACrB,MAAMxB,IAAI,GAAGzC,EAAE,CAACkE,KAAK;IACrB,MAAMH,IAAI,GAAG/D,EAAE,CAAC8D,KAAK;IACrB,MAAMpB,EAAE,GAAG1C,EAAE,CAACmE,GAAG;IACjB,IAAIxB,MAAM;IACV3C,EAAE,CAACY,OAAO,GAAG6B,IAAI,KAAKC,EAAE,KAAKqB,IAAI,IAAKQ,OAAO,GAAG/E,QAAS,CAAC;IAC1D,IAAI,CAACQ,EAAE,CAACY,OAAO,EAAE;MACfZ,EAAE,CAACgE,OAAO,CAACX,IAAI,CAAC,GAAGX,EAAE;MACrB1C,EAAE,CAAChB,OAAO,CAAC,IAAI,CAAC;MAChB;IACF;IACA,IAAIuF,OAAO,GAAG,CAAC,EAAE;MACfvE,EAAE,CAACgE,OAAO,CAACX,IAAI,CAAC,GAAGZ,IAAI;MACvB;IACF;IACAE,MAAM,GAAI4B,OAAO,GAAG/E,QAAQ,GAAI,CAAC;IACjCmD,MAAM,GAAGoB,IAAI,IAAIpB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAGA,MAAM;IACjDA,MAAM,GAAG3C,EAAE,CAACwD,OAAO,CAAC5D,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEY,MAAM,CAAC,CAAC,CAAC;IACrD3C,EAAE,CAACgE,OAAO,CAACX,IAAI,CAAC,GAAGrD,EAAE,CAACuD,GAAG,CAACd,IAAI,EAAEC,EAAE,EAAEC,MAAM,CAAC;EAC7C;EACA8B,IAAIA,CAAA,EAAG;IACL,MAAMC,QAAQ,GAAG,IAAI,CAACN,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAC;IACxD,OAAO,IAAIO,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC/BH,QAAQ,CAACjD,IAAI,CAAC;QAACmD,GAAG;QAAEC;MAAG,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;EACA7F,OAAOA,CAAC8F,QAAQ,EAAE;IAChB,MAAMC,MAAM,GAAGD,QAAQ,GAAG,KAAK,GAAG,KAAK;IACvC,MAAMJ,QAAQ,GAAG,IAAI,CAACN,SAAS,IAAI,EAAE;IACrC,KAAK,IAAIhR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsR,QAAQ,CAACjE,MAAM,EAAErN,CAAC,EAAE,EAAE;MACxCsR,QAAQ,CAACtR,CAAC,CAAC,CAAC2R,MAAM,CAAC,CAAC,CAAC;IACvB;EACF;AACF;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC;AAC9D,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,iBAAiB,CAAC;AAC1DxR,QAAQ,CAAC4N,GAAG,CAAC,WAAW,EAAE;EACxBwC,KAAK,EAAE9E,SAAS;EAChBS,QAAQ,EAAE,IAAI;EACdiE,MAAM,EAAE,cAAc;EACtB/D,EAAE,EAAEX,SAAS;EACb0D,IAAI,EAAE1D,SAAS;EACfgF,IAAI,EAAEhF,SAAS;EACf2D,EAAE,EAAE3D,SAAS;EACbK,IAAI,EAAEL;AACR,CAAC,CAAC;AACF,MAAMmG,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAAC3R,QAAQ,CAAC4R,SAAS,CAAC;AACxD5R,QAAQ,CAAC6R,QAAQ,CAAC,WAAW,EAAE;EAC7BC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAGC,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;AACpF,CAAC,CAAC;AACFjS,QAAQ,CAAC4N,GAAG,CAAC,YAAY,EAAE;EACzB4D,MAAM,EAAE;IACN7F,IAAI,EAAE,OAAO;IACbuG,UAAU,EAAEV;EACd,CAAC;EACDD,OAAO,EAAE;IACP5F,IAAI,EAAE,QAAQ;IACduG,UAAU,EAAEX;EACd;AACF,CAAC,CAAC;AACFvR,QAAQ,CAAC6R,QAAQ,CAAC,YAAY,EAAE;EAC9BC,SAAS,EAAE;AACb,CAAC,CAAC;AACF9R,QAAQ,CAAC4N,GAAG,CAAC,aAAa,EAAE;EAC1BgD,MAAM,EAAE;IACNgB,SAAS,EAAE;MACT7F,QAAQ,EAAE;IACZ;EACF,CAAC;EACDoG,MAAM,EAAE;IACNP,SAAS,EAAE;MACT7F,QAAQ,EAAE;IACZ;EACF,CAAC;EACDqG,IAAI,EAAE;IACJC,UAAU,EAAE;MACVb,MAAM,EAAE;QACNxC,IAAI,EAAE;MACR,CAAC;MACDsD,OAAO,EAAE;QACP3G,IAAI,EAAE,SAAS;QACfI,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDwG,IAAI,EAAE;IACJF,UAAU,EAAE;MACVb,MAAM,EAAE;QACNvC,EAAE,EAAE;MACN,CAAC;MACDqD,OAAO,EAAE;QACP3G,IAAI,EAAE,SAAS;QACfqE,MAAM,EAAE,QAAQ;QAChB/D,EAAE,EAAEhM,CAAC,IAAIA,CAAC,GAAG;MACf;IACF;EACF;AACF,CAAC,CAAC;AACF,MAAMuS,UAAU,CAAC;EACfxH,WAAWA,CAACQ,KAAK,EAAEiH,MAAM,EAAE;IACzB,IAAI,CAACC,MAAM,GAAGlH,KAAK;IACnB,IAAI,CAACmH,WAAW,GAAG,IAAIxH,GAAG,CAAC,CAAC;IAC5B,IAAI,CAACyH,SAAS,CAACH,MAAM,CAAC;EACxB;EACAG,SAASA,CAACH,MAAM,EAAE;IAChB,IAAI,CAAC7S,QAAQ,CAAC6S,MAAM,CAAC,EAAE;MACrB;IACF;IACA,MAAMI,aAAa,GAAG,IAAI,CAACF,WAAW;IACtCjB,MAAM,CAACoB,mBAAmB,CAACL,MAAM,CAAC,CAACzG,OAAO,CAAC+G,GAAG,IAAI;MAChD,MAAMrD,GAAG,GAAG+C,MAAM,CAACM,GAAG,CAAC;MACvB,IAAI,CAACnT,QAAQ,CAAC8P,GAAG,CAAC,EAAE;QAClB;MACF;MACA,MAAM2B,QAAQ,GAAG,CAAC,CAAC;MACnB,KAAK,MAAM2B,MAAM,IAAIvB,gBAAgB,EAAE;QACrCJ,QAAQ,CAAC2B,MAAM,CAAC,GAAGtD,GAAG,CAACsD,MAAM,CAAC;MAChC;MACA,CAAClT,OAAO,CAAC4P,GAAG,CAACwC,UAAU,CAAC,IAAIxC,GAAG,CAACwC,UAAU,IAAI,CAACa,GAAG,CAAC,EAAE/G,OAAO,CAAE4D,IAAI,IAAK;QACrE,IAAIA,IAAI,KAAKmD,GAAG,IAAI,CAACF,aAAa,CAAC3E,GAAG,CAAC0B,IAAI,CAAC,EAAE;UAC5CiD,aAAa,CAACjF,GAAG,CAACgC,IAAI,EAAEyB,QAAQ,CAAC;QACnC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA4B,eAAeA,CAACtD,MAAM,EAAEuD,MAAM,EAAE;IAC9B,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;IACjC,MAAMA,OAAO,GAAGC,oBAAoB,CAAC1D,MAAM,EAAEwD,UAAU,CAAC;IACxD,IAAI,CAACC,OAAO,EAAE;MACZ,OAAO,EAAE;IACX;IACA,MAAMf,UAAU,GAAG,IAAI,CAACiB,iBAAiB,CAACF,OAAO,EAAED,UAAU,CAAC;IAC9D,IAAIA,UAAU,CAACI,OAAO,EAAE;MACtBC,QAAQ,CAAC7D,MAAM,CAACyD,OAAO,CAACK,WAAW,EAAEN,UAAU,CAAC,CAACO,IAAI,CAAC,MAAM;QAC1D/D,MAAM,CAACyD,OAAO,GAAGD,UAAU;MAC7B,CAAC,EAAE,MAAM,CACT,CAAC,CAAC;IACJ;IACA,OAAOd,UAAU;EACnB;EACAiB,iBAAiBA,CAAC3D,MAAM,EAAEuD,MAAM,EAAE;IAChC,MAAML,aAAa,GAAG,IAAI,CAACF,WAAW;IACtC,MAAMN,UAAU,GAAG,EAAE;IACrB,MAAMvF,OAAO,GAAG6C,MAAM,CAAC8D,WAAW,KAAK9D,MAAM,CAAC8D,WAAW,GAAG,CAAC,CAAC,CAAC;IAC/D,MAAME,KAAK,GAAGjC,MAAM,CAACC,IAAI,CAACuB,MAAM,CAAC;IACjC,MAAMxH,IAAI,GAAGiB,IAAI,CAACC,GAAG,CAAC,CAAC;IACvB,IAAIjN,CAAC;IACL,KAAKA,CAAC,GAAGgU,KAAK,CAAC3G,MAAM,GAAG,CAAC,EAAErN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MACtC,MAAMiQ,IAAI,GAAG+D,KAAK,CAAChU,CAAC,CAAC;MACrB,IAAIiQ,IAAI,CAACgE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC1B;MACF;MACA,IAAIhE,IAAI,KAAK,SAAS,EAAE;QACtByC,UAAU,CAACrE,IAAI,CAAC,GAAG,IAAI,CAACiF,eAAe,CAACtD,MAAM,EAAEuD,MAAM,CAAC,CAAC;QACxD;MACF;MACA,MAAMW,KAAK,GAAGX,MAAM,CAACtD,IAAI,CAAC;MAC1B,IAAIgC,SAAS,GAAG9E,OAAO,CAAC8C,IAAI,CAAC;MAC7B,MAAMF,GAAG,GAAGmD,aAAa,CAACpF,GAAG,CAACmC,IAAI,CAAC;MACnC,IAAIgC,SAAS,EAAE;QACb,IAAIlC,GAAG,IAAIkC,SAAS,CAAChB,MAAM,CAAC,CAAC,EAAE;UAC7BgB,SAAS,CAACf,MAAM,CAACnB,GAAG,EAAEmE,KAAK,EAAEnI,IAAI,CAAC;UAClC;QACF,CAAC,MAAM;UACLkG,SAAS,CAACnD,MAAM,CAAC,CAAC;QACpB;MACF;MACA,IAAI,CAACiB,GAAG,IAAI,CAACA,GAAG,CAAC3D,QAAQ,EAAE;QACzB4D,MAAM,CAACC,IAAI,CAAC,GAAGiE,KAAK;QACpB;MACF;MACA/G,OAAO,CAAC8C,IAAI,CAAC,GAAGgC,SAAS,GAAG,IAAInC,SAAS,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEiE,KAAK,CAAC;MACnExB,UAAU,CAACrE,IAAI,CAAC4D,SAAS,CAAC;IAC5B;IACA,OAAOS,UAAU;EACnB;EACAxB,MAAMA,CAAClB,MAAM,EAAEuD,MAAM,EAAE;IACrB,IAAI,IAAI,CAACP,WAAW,CAACmB,IAAI,KAAK,CAAC,EAAE;MAC/BpC,MAAM,CAACqC,MAAM,CAACpE,MAAM,EAAEuD,MAAM,CAAC;MAC7B;IACF;IACA,MAAMb,UAAU,GAAG,IAAI,CAACiB,iBAAiB,CAAC3D,MAAM,EAAEuD,MAAM,CAAC;IACzD,IAAIb,UAAU,CAACrF,MAAM,EAAE;MACrB4B,QAAQ,CAACX,GAAG,CAAC,IAAI,CAACyE,MAAM,EAAEL,UAAU,CAAC;MACrC,OAAO,IAAI;IACb;EACF;AACF;AACA,SAASmB,QAAQA,CAACnB,UAAU,EAAEH,UAAU,EAAE;EACxC,MAAMpF,OAAO,GAAG,EAAE;EAClB,MAAM6E,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACO,UAAU,CAAC;EACpC,KAAK,IAAIvS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgS,IAAI,CAAC3E,MAAM,EAAErN,CAAC,EAAE,EAAE;IACpC,MAAMqU,IAAI,GAAG3B,UAAU,CAACV,IAAI,CAAChS,CAAC,CAAC,CAAC;IAChC,IAAIqU,IAAI,IAAIA,IAAI,CAACpD,MAAM,CAAC,CAAC,EAAE;MACzB9D,OAAO,CAACkB,IAAI,CAACgG,IAAI,CAAChD,IAAI,CAAC,CAAC,CAAC;IAC3B;EACF;EACA,OAAOE,OAAO,CAAC+C,GAAG,CAACnH,OAAO,CAAC;AAC7B;AACA,SAASuG,oBAAoBA,CAAC1D,MAAM,EAAEwD,UAAU,EAAE;EAChD,IAAI,CAACA,UAAU,EAAE;IACf;EACF;EACA,IAAIC,OAAO,GAAGzD,MAAM,CAACyD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZzD,MAAM,CAACyD,OAAO,GAAGD,UAAU;IAC3B;EACF;EACA,IAAIC,OAAO,CAACG,OAAO,EAAE;IACnB5D,MAAM,CAACyD,OAAO,GAAGA,OAAO,GAAG1B,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEX,OAAO,EAAE;MAACG,OAAO,EAAE,KAAK;MAAEE,WAAW,EAAE,CAAC;IAAC,CAAC,CAAC;EAC1F;EACA,OAAOL,OAAO;AAChB;AAEA,SAASc,SAASA,CAACC,KAAK,EAAEC,eAAe,EAAE;EACzC,MAAMC,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACf,OAAO,IAAI,CAAC,CAAC;EACzC,MAAMkB,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC5B,MAAMlI,GAAG,GAAGiI,IAAI,CAACjI,GAAG,KAAKd,SAAS,GAAG8I,eAAe,GAAG,CAAC;EACxD,MAAM9F,GAAG,GAAG+F,IAAI,CAAC/F,GAAG,KAAKhD,SAAS,GAAG8I,eAAe,GAAG,CAAC;EACxD,OAAO;IACL/H,KAAK,EAAEiI,OAAO,GAAGhG,GAAG,GAAGlC,GAAG;IAC1BmI,GAAG,EAAED,OAAO,GAAGlI,GAAG,GAAGkC;EACvB,CAAC;AACH;AACA,SAASkG,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEN,eAAe,EAAE;EACpD,IAAIA,eAAe,KAAK,KAAK,EAAE;IAC7B,OAAO,KAAK;EACd;EACA,MAAM3R,CAAC,GAAGyR,SAAS,CAACO,MAAM,EAAEL,eAAe,CAAC;EAC5C,MAAMzR,CAAC,GAAGuR,SAAS,CAACQ,MAAM,EAAEN,eAAe,CAAC;EAC5C,OAAO;IACLO,GAAG,EAAEhS,CAAC,CAAC4R,GAAG;IACVK,KAAK,EAAEnS,CAAC,CAAC8R,GAAG;IACZM,MAAM,EAAElS,CAAC,CAAC0J,KAAK;IACfyI,IAAI,EAAErS,CAAC,CAAC4J;EACV,CAAC;AACH;AACA,SAAS0I,MAAMA,CAAClB,KAAK,EAAE;EACrB,IAAItS,CAAC,EAAEpC,CAAC,EAAEU,CAAC,EAAEQ,CAAC;EACd,IAAIT,QAAQ,CAACiU,KAAK,CAAC,EAAE;IACnBtS,CAAC,GAAGsS,KAAK,CAACc,GAAG;IACbxV,CAAC,GAAG0U,KAAK,CAACe,KAAK;IACf/U,CAAC,GAAGgU,KAAK,CAACgB,MAAM;IAChBxU,CAAC,GAAGwT,KAAK,CAACiB,IAAI;EAChB,CAAC,MAAM;IACLvT,CAAC,GAAGpC,CAAC,GAAGU,CAAC,GAAGQ,CAAC,GAAGwT,KAAK;EACvB;EACA,OAAO;IACLc,GAAG,EAAEpT,CAAC;IACNqT,KAAK,EAAEzV,CAAC;IACR0V,MAAM,EAAEhV,CAAC;IACTiV,IAAI,EAAEzU;EACR,CAAC;AACH;AACA,SAAS2U,uBAAuBA,CAACxJ,KAAK,EAAEyJ,aAAa,EAAE;EACrD,MAAMtD,IAAI,GAAG,EAAE;EACf,MAAMuD,QAAQ,GAAG1J,KAAK,CAAC2J,sBAAsB,CAACF,aAAa,CAAC;EAC5D,IAAItV,CAAC,EAAEyV,IAAI;EACX,KAAKzV,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGF,QAAQ,CAAClI,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACjDgS,IAAI,CAAC3D,IAAI,CAACkH,QAAQ,CAACvV,CAAC,CAAC,CAAC0V,KAAK,CAAC;EAC9B;EACA,OAAO1D,IAAI;AACb;AACA,SAAS2D,UAAUA,CAACC,KAAK,EAAE1B,KAAK,EAAE2B,OAAO,EAAEpC,OAAO,EAAE;EAClD,MAAMzB,IAAI,GAAG4D,KAAK,CAAC5D,IAAI;EACvB,MAAM8D,UAAU,GAAGrC,OAAO,CAACsC,IAAI,KAAK,QAAQ;EAC5C,IAAI/V,CAAC,EAAEyV,IAAI,EAAEO,YAAY,EAAEC,UAAU;EACrC,IAAI/B,KAAK,KAAK,IAAI,EAAE;IAClB;EACF;EACA,KAAKlU,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGzD,IAAI,CAAC3E,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAC7CgW,YAAY,GAAG,CAAChE,IAAI,CAAChS,CAAC,CAAC;IACvB,IAAIgW,YAAY,KAAKH,OAAO,EAAE;MAC5B,IAAIpC,OAAO,CAACa,GAAG,EAAE;QACf;MACF;MACA;IACF;IACA2B,UAAU,GAAGL,KAAK,CAACrC,MAAM,CAACyC,YAAY,CAAC;IACvC,IAAIjV,cAAc,CAACkV,UAAU,CAAC,KAAKH,UAAU,IAAK5B,KAAK,KAAK,CAAC,IAAI/S,IAAI,CAAC+S,KAAK,CAAC,KAAK/S,IAAI,CAAC8U,UAAU,CAAE,CAAC,EAAE;MACnG/B,KAAK,IAAI+B,UAAU;IACrB;EACF;EACA,OAAO/B,KAAK;AACd;AACA,SAASgC,wBAAwBA,CAACC,IAAI,EAAE;EACtC,MAAMnE,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACmE,IAAI,CAAC;EAC9B,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACrE,IAAI,CAAC3E,MAAM,CAAC;EACpC,IAAIrN,CAAC,EAAEyV,IAAI,EAAErC,GAAG;EAChB,KAAKpT,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGzD,IAAI,CAAC3E,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAC7CoT,GAAG,GAAGpB,IAAI,CAAChS,CAAC,CAAC;IACboW,KAAK,CAACpW,CAAC,CAAC,GAAG;MACT8C,CAAC,EAAEsQ,GAAG;MACNpQ,CAAC,EAAEmT,IAAI,CAAC/C,GAAG;IACb,CAAC;EACH;EACA,OAAOgD,KAAK;AACd;AACA,SAASE,SAASA,CAAC9B,KAAK,EAAE+B,IAAI,EAAE;EAC9B,MAAMC,OAAO,GAAGhC,KAAK,IAAIA,KAAK,CAACf,OAAO,CAAC+C,OAAO;EAC9C,OAAOA,OAAO,IAAKA,OAAO,KAAK7K,SAAS,IAAI4K,IAAI,CAACX,KAAK,KAAKjK,SAAU;AACvE;AACA,SAAS8K,WAAWA,CAACC,UAAU,EAAEC,UAAU,EAAEJ,IAAI,EAAE;EACjD,OAAOG,UAAU,CAACE,EAAE,GAAG,GAAG,GAAGD,UAAU,CAACC,EAAE,GAAG,GAAG,GAAGL,IAAI,CAACX,KAAK,GAAG,GAAG,GAAGW,IAAI,CAACvK,IAAI;AACjF;AACA,SAAS6K,aAAaA,CAACrC,KAAK,EAAE;EAC5B,MAAM;IAAC/H,GAAG;IAAEkC,GAAG;IAAEmI,UAAU;IAAEC;EAAU,CAAC,GAAGvC,KAAK,CAACqC,aAAa,CAAC,CAAC;EAChE,OAAO;IACLpK,GAAG,EAAEqK,UAAU,GAAGrK,GAAG,GAAGuK,MAAM,CAACC,iBAAiB;IAChDtI,GAAG,EAAEoI,UAAU,GAAGpI,GAAG,GAAGqI,MAAM,CAACE;EACjC,CAAC;AACH;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACtD,MAAMC,QAAQ,GAAGH,MAAM,CAACC,QAAQ,CAAC,KAAKD,MAAM,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D,OAAOE,QAAQ,CAACD,UAAU,CAAC,KAAKC,QAAQ,CAACD,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D;AACA,SAASE,YAAYA,CAACC,UAAU,EAAEC,MAAM,EAAE;EACxC,MAAM;IAAC7L,KAAK;IAAE8L,WAAW,EAAEpB;EAAI,CAAC,GAAGkB,UAAU;EAC7C,MAAML,MAAM,GAAGvL,KAAK,CAAC+L,OAAO,KAAK/L,KAAK,CAAC+L,OAAO,GAAG,CAAC,CAAC,CAAC;EACpD,MAAM;IAACC,MAAM;IAAEC,MAAM;IAAEpC,KAAK,EAAEM;EAAY,CAAC,GAAGO,IAAI;EAClD,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAAI;EACzB,MAAMC,KAAK,GAAGH,MAAM,CAACE,IAAI;EACzB,MAAM5E,GAAG,GAAGqD,WAAW,CAACoB,MAAM,EAAEC,MAAM,EAAEvB,IAAI,CAAC;EAC7C,MAAMd,IAAI,GAAGiC,MAAM,CAACrK,MAAM;EAC1B,IAAIuI,KAAK;EACT,KAAK,IAAI5V,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAC7B,MAAMuN,IAAI,GAAGmK,MAAM,CAAC1X,CAAC,CAAC;IACtB,MAAM;MAAC,CAAC+X,KAAK,GAAGrC,KAAK;MAAE,CAACuC,KAAK,GAAG/D;IAAK,CAAC,GAAG3G,IAAI;IAC7C,MAAM2K,UAAU,GAAG3K,IAAI,CAACqK,OAAO,KAAKrK,IAAI,CAACqK,OAAO,GAAG,CAAC,CAAC,CAAC;IACtDhC,KAAK,GAAGsC,UAAU,CAACD,KAAK,CAAC,GAAGd,gBAAgB,CAACC,MAAM,EAAEhE,GAAG,EAAEsC,KAAK,CAAC;IAChEE,KAAK,CAACI,YAAY,CAAC,GAAG9B,KAAK;EAC7B;AACF;AACA,SAASiE,eAAeA,CAACtM,KAAK,EAAEmM,IAAI,EAAE;EACpC,MAAMI,MAAM,GAAGvM,KAAK,CAACuM,MAAM;EAC3B,OAAOrG,MAAM,CAACC,IAAI,CAACoG,MAAM,CAAC,CAACC,MAAM,CAACjF,GAAG,IAAIgF,MAAM,CAAChF,GAAG,CAAC,CAAC4E,IAAI,KAAKA,IAAI,CAAC,CAACM,KAAK,CAAC,CAAC;AAC7E;AACA,SAASC,oBAAoBA,CAACC,MAAM,EAAE9C,KAAK,EAAE;EAC3C,OAAO3D,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EACxC;IACEvH,MAAM,EAAE,KAAK;IACbyH,OAAO,EAAE/M,SAAS;IAClBqK,YAAY,EAAEN,KAAK;IACnBA,KAAK;IACLK,IAAI,EAAE,SAAS;IACf/J,IAAI,EAAE;EACR,CACF,CAAC;AACH;AACA,SAAS2M,iBAAiBA,CAACH,MAAM,EAAE9C,KAAK,EAAEkD,OAAO,EAAE;EACjD,OAAO7G,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CvH,MAAM,EAAE,KAAK;IACb4H,SAAS,EAAEnD,KAAK;IAChBgC,MAAM,EAAE/L,SAAS;IACjBmN,GAAG,EAAEnN,SAAS;IACdiN,OAAO;IACPlD,KAAK;IACLK,IAAI,EAAE,SAAS;IACf/J,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAAS+M,WAAWA,CAACxC,IAAI,EAAEnJ,KAAK,EAAE;EAChCA,KAAK,GAAGA,KAAK,IAAImJ,IAAI,CAACyC,OAAO;EAC7B,KAAK,MAAMtB,MAAM,IAAItK,KAAK,EAAE;IAC1B,MAAMgK,MAAM,GAAGM,MAAM,CAACE,OAAO;IAC7B,IAAI,CAACR,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACuB,MAAM,CAAClB,EAAE,CAAC,KAAKjL,SAAS,IAAIyL,MAAM,CAACb,IAAI,CAACuB,MAAM,CAAClB,EAAE,CAAC,CAACL,IAAI,CAACb,KAAK,CAAC,KAAK/J,SAAS,EAAE;MACvG;IACF;IACA,OAAOyL,MAAM,CAACb,IAAI,CAACuB,MAAM,CAAClB,EAAE,CAAC,CAACL,IAAI,CAACb,KAAK,CAAC;EAC3C;AACF;AACA,MAAMuD,kBAAkB,GAAIlD,IAAI,IAAKA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,MAAM;AACxE,MAAMmD,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAKA,MAAM,GAAGD,MAAM,GAAGpH,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE+E,MAAM,CAAC;AACxF,MAAME,iBAAiB,CAAC;EACtBhO,WAAWA,CAACQ,KAAK,EAAEmK,YAAY,EAAE;IAC/B,IAAI,CAACnK,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACyN,IAAI,GAAGzN,KAAK,CAAC0N,GAAG;IACrB,IAAI,CAAC7D,KAAK,GAAGM,YAAY;IACzB,IAAI,CAACwD,eAAe,GAAG,CAAC,CAAC;IACzB,IAAI,CAAC7B,WAAW,GAAG,IAAI,CAAC8B,OAAO,CAAC,CAAC;IACjC,IAAI,CAACC,KAAK,GAAG,IAAI,CAAC/B,WAAW,CAAC3L,IAAI;IAClC,IAAI,CAACyH,OAAO,GAAG9H,SAAS;IACxB,IAAI,CAACgO,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,KAAK,GAAGjO,SAAS;IACtB,IAAI,CAACkO,WAAW,GAAGlO,SAAS;IAC5B,IAAI,CAACmO,cAAc,GAAGnO,SAAS;IAC/B,IAAI,CAACoO,UAAU,GAAGpO,SAAS;IAC3B,IAAI,CAACqO,UAAU,GAAGrO,SAAS;IAC3B,IAAI,CAACsO,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,QAAQ,GAAGvO,SAAS;IACzB,IAAI,CAACwO,UAAU,CAAC,CAAC;EACnB;EACAA,UAAUA,CAAA,EAAG;IACX,MAAMvN,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B/K,EAAE,CAACqG,SAAS,CAAC,CAAC;IACdrG,EAAE,CAACwN,UAAU,CAAC,CAAC;IACf7D,IAAI,CAAC8D,QAAQ,GAAG/D,SAAS,CAACC,IAAI,CAACuB,MAAM,EAAEvB,IAAI,CAAC;IAC5C3J,EAAE,CAAC0N,WAAW,CAAC,CAAC;EAClB;EACAC,WAAWA,CAACvE,YAAY,EAAE;IACxB,IAAI,CAACN,KAAK,GAAGM,YAAY;EAC3B;EACAoE,UAAUA,CAAA,EAAG;IACX,MAAMxN,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMe,OAAO,GAAG9L,EAAE,CAAC4N,UAAU,CAAC,CAAC;IAC/B,MAAMC,QAAQ,GAAGA,CAACzC,IAAI,EAAElV,CAAC,EAAEE,CAAC,EAAExD,CAAC,KAAKwY,IAAI,KAAK,GAAG,GAAGlV,CAAC,GAAGkV,IAAI,KAAK,GAAG,GAAGxY,CAAC,GAAGwD,CAAC;IAC3E,MAAM0X,GAAG,GAAGnE,IAAI,CAACoE,OAAO,GAAGpa,cAAc,CAACmY,OAAO,CAACiC,OAAO,EAAExC,eAAe,CAACtM,KAAK,EAAE,GAAG,CAAC,CAAC;IACvF,MAAM+O,GAAG,GAAGrE,IAAI,CAACsE,OAAO,GAAGta,cAAc,CAACmY,OAAO,CAACmC,OAAO,EAAE1C,eAAe,CAACtM,KAAK,EAAE,GAAG,CAAC,CAAC;IACvF,MAAMiP,GAAG,GAAGvE,IAAI,CAACwE,OAAO,GAAGxa,cAAc,CAACmY,OAAO,CAACqC,OAAO,EAAE5C,eAAe,CAACtM,KAAK,EAAE,GAAG,CAAC,CAAC;IACvF,MAAMmP,SAAS,GAAGzE,IAAI,CAACyE,SAAS;IAChC,MAAMC,GAAG,GAAG1E,IAAI,CAAC2E,OAAO,GAAGT,QAAQ,CAACO,SAAS,EAAEN,GAAG,EAAEE,GAAG,EAAEE,GAAG,CAAC;IAC7D,MAAMK,GAAG,GAAG5E,IAAI,CAAC6E,OAAO,GAAGX,QAAQ,CAACO,SAAS,EAAEJ,GAAG,EAAEF,GAAG,EAAEI,GAAG,CAAC;IAC7DvE,IAAI,CAACzB,MAAM,GAAGlI,EAAE,CAACyO,aAAa,CAACX,GAAG,CAAC;IACnCnE,IAAI,CAACxB,MAAM,GAAGnI,EAAE,CAACyO,aAAa,CAACT,GAAG,CAAC;IACnCrE,IAAI,CAAC+E,MAAM,GAAG1O,EAAE,CAACyO,aAAa,CAACP,GAAG,CAAC;IACnCvE,IAAI,CAACsB,MAAM,GAAGjL,EAAE,CAACyO,aAAa,CAACJ,GAAG,CAAC;IACnC1E,IAAI,CAACuB,MAAM,GAAGlL,EAAE,CAACyO,aAAa,CAACF,GAAG,CAAC;EACrC;EACAX,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAAC3O,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAAC,IAAI,CAAC7F,KAAK,CAAC;EAC7C;EACA+D,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC5N,KAAK,CAAC2P,cAAc,CAAC,IAAI,CAAC9F,KAAK,CAAC;EAC9C;EACA2F,aAAaA,CAACI,OAAO,EAAE;IACrB,OAAO,IAAI,CAAC5P,KAAK,CAACuM,MAAM,CAACqD,OAAO,CAAC;EACnC;EACAC,cAAcA,CAAClH,KAAK,EAAE;IACpB,MAAM+B,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,OAAOnD,KAAK,KAAK+B,IAAI,CAACsB,MAAM,GACxBtB,IAAI,CAACuB,MAAM,GACXvB,IAAI,CAACsB,MAAM;EACjB;EACA8D,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC5O,OAAO,CAAC,OAAO,CAAC;EACvB;EACA6O,QAAQA,CAAA,EAAG;IACT,MAAMrF,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,IAAI,IAAI,CAACiC,KAAK,EAAE;MACdnZ,mBAAmB,CAAC,IAAI,CAACmZ,KAAK,EAAE,IAAI,CAAC;IACvC;IACA,IAAIrD,IAAI,CAAC8D,QAAQ,EAAE;MACjBtB,WAAW,CAACxC,IAAI,CAAC;IACnB;EACF;EACAsF,UAAUA,CAAA,EAAG;IACX,MAAMjP,EAAE,GAAG,IAAI;IACf,MAAM8L,OAAO,GAAG9L,EAAE,CAAC4N,UAAU,CAAC,CAAC;IAC/B,MAAMrE,IAAI,GAAGuC,OAAO,CAACvC,IAAI,KAAKuC,OAAO,CAACvC,IAAI,GAAG,EAAE,CAAC;IAChD,IAAIlW,QAAQ,CAACkW,IAAI,CAAC,EAAE;MAClBvJ,EAAE,CAACgN,KAAK,GAAG1D,wBAAwB,CAACC,IAAI,CAAC;IAC3C,CAAC,MAAM,IAAIvJ,EAAE,CAACgN,KAAK,KAAKzD,IAAI,EAAE;MAC5B,IAAIvJ,EAAE,CAACgN,KAAK,EAAE;QACZnZ,mBAAmB,CAACmM,EAAE,CAACgN,KAAK,EAAEhN,EAAE,CAAC;QACjCmM,WAAW,CAACnM,EAAE,CAAC+K,WAAW,CAAC;MAC7B;MACA,IAAIxB,IAAI,IAAIpE,MAAM,CAAC+J,YAAY,CAAC3F,IAAI,CAAC,EAAE;QACrCxV,iBAAiB,CAACwV,IAAI,EAAEvJ,EAAE,CAAC;MAC7B;MACAA,EAAE,CAACgN,KAAK,GAAGzD,IAAI;IACjB;EACF;EACAmE,WAAWA,CAAA,EAAG;IACZ,MAAM1N,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B/K,EAAE,CAACiP,UAAU,CAAC,CAAC;IACf,IAAIjP,EAAE,CAACmP,kBAAkB,EAAE;MACzBxF,IAAI,CAACmC,OAAO,GAAG,IAAI9L,EAAE,CAACmP,kBAAkB,CAAC,CAAC;IAC5C;EACF;EACAC,qBAAqBA,CAACC,gBAAgB,EAAE;IACtC,MAAMrP,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMe,OAAO,GAAG9L,EAAE,CAAC4N,UAAU,CAAC,CAAC;IAC/B,IAAI0B,YAAY,GAAG,KAAK;IACxBtP,EAAE,CAACiP,UAAU,CAAC,CAAC;IACftF,IAAI,CAAC8D,QAAQ,GAAG/D,SAAS,CAACC,IAAI,CAACuB,MAAM,EAAEvB,IAAI,CAAC;IAC5C,IAAIA,IAAI,CAACX,KAAK,KAAK8C,OAAO,CAAC9C,KAAK,EAAE;MAChCsG,YAAY,GAAG,IAAI;MACnBnD,WAAW,CAACxC,IAAI,CAAC;MACjBA,IAAI,CAACX,KAAK,GAAG8C,OAAO,CAAC9C,KAAK;IAC5B;IACAhJ,EAAE,CAACuP,eAAe,CAACF,gBAAgB,CAAC;IACpC,IAAIC,YAAY,EAAE;MAChB1E,YAAY,CAAC5K,EAAE,EAAE2J,IAAI,CAACyC,OAAO,CAAC;IAChC;EACF;EACA/F,SAASA,CAAA,EAAG;IACV,MAAMrG,EAAE,GAAG,IAAI;IACf,MAAMkG,MAAM,GAAGlG,EAAE,CAACf,KAAK,CAACiH,MAAM;IAC9B,MAAMsJ,SAAS,GAAGtJ,MAAM,CAACuJ,gBAAgB,CAACzP,EAAE,CAAC8M,KAAK,CAAC;IACnD,MAAM4C,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC3P,EAAE,CAAC4N,UAAU,CAAC,CAAC,EAAE4B,SAAS,EAAE,IAAI,CAAC;IACvExP,EAAE,CAAC6G,OAAO,GAAGX,MAAM,CAAC0J,cAAc,CAACF,MAAM,EAAE1P,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC;IAC3D7P,EAAE,CAAC+M,QAAQ,GAAG/M,EAAE,CAAC6G,OAAO,CAACiJ,OAAO;EAClC;EACAC,KAAKA,CAACjQ,KAAK,EAAEkQ,KAAK,EAAE;IAClB,MAAMhQ,EAAE,GAAG,IAAI;IACf,MAAM;MAAC+K,WAAW,EAAEpB,IAAI;MAAEqD,KAAK,EAAEzD;IAAI,CAAC,GAAGvJ,EAAE;IAC3C,MAAM;MAACiL,MAAM;MAAEwC;IAAQ,CAAC,GAAG9D,IAAI;IAC/B,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAAI;IACzB,IAAI6E,MAAM,GAAGnQ,KAAK,KAAK,CAAC,IAAIkQ,KAAK,KAAKzG,IAAI,CAAC9I,MAAM,GAAG,IAAI,GAAGkJ,IAAI,CAACuG,OAAO;IACvE,IAAIC,IAAI,GAAGrQ,KAAK,GAAG,CAAC,IAAI6J,IAAI,CAACyC,OAAO,CAACtM,KAAK,GAAG,CAAC,CAAC;IAC/C,IAAI1M,CAAC,EAAE0O,GAAG,EAAEgJ,MAAM;IAClB,IAAI9K,EAAE,CAAC+M,QAAQ,KAAK,KAAK,EAAE;MACzBpD,IAAI,CAACyC,OAAO,GAAG7C,IAAI;MACnBI,IAAI,CAACuG,OAAO,GAAG,IAAI;IACrB,CAAC,MAAM;MACL,IAAI3c,OAAO,CAACgW,IAAI,CAACzJ,KAAK,CAAC,CAAC,EAAE;QACxBgL,MAAM,GAAG9K,EAAE,CAACoQ,cAAc,CAACzG,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,CAAC;MACtD,CAAC,MAAM,IAAI3c,QAAQ,CAACkW,IAAI,CAACzJ,KAAK,CAAC,CAAC,EAAE;QAChCgL,MAAM,GAAG9K,EAAE,CAACqQ,eAAe,CAAC1G,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,CAAC;MACvD,CAAC,MAAM;QACLlF,MAAM,GAAG9K,EAAE,CAACsQ,kBAAkB,CAAC3G,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,CAAC;MAC1D;MACA,MAAMO,0BAA0B,GAAGA,CAAA,KAAMzO,GAAG,CAACqJ,KAAK,CAAC,KAAK,IAAI,IAAKgF,IAAI,IAAIrO,GAAG,CAACqJ,KAAK,CAAC,GAAGgF,IAAI,CAAChF,KAAK,CAAE;MAClG,KAAK/X,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4c,KAAK,EAAE,EAAE5c,CAAC,EAAE;QAC1BuW,IAAI,CAACyC,OAAO,CAAChZ,CAAC,GAAG0M,KAAK,CAAC,GAAGgC,GAAG,GAAGgJ,MAAM,CAAC1X,CAAC,CAAC;QACzC,IAAI6c,MAAM,EAAE;UACV,IAAIM,0BAA0B,CAAC,CAAC,EAAE;YAChCN,MAAM,GAAG,KAAK;UAChB;UACAE,IAAI,GAAGrO,GAAG;QACZ;MACF;MACA6H,IAAI,CAACuG,OAAO,GAAGD,MAAM;IACvB;IACA,IAAIxC,QAAQ,EAAE;MACZ7C,YAAY,CAAC5K,EAAE,EAAE8K,MAAM,CAAC;IAC1B;EACF;EACAwF,kBAAkBA,CAAC3G,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;IAC3C,MAAM;MAAC/E,MAAM;MAAEC;IAAM,CAAC,GAAGvB,IAAI;IAC7B,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAAI;IACzB,MAAMC,KAAK,GAAGH,MAAM,CAACE,IAAI;IACzB,MAAMoF,MAAM,GAAGvF,MAAM,CAACwF,SAAS,CAAC,CAAC;IACjC,MAAMC,WAAW,GAAGzF,MAAM,KAAKC,MAAM;IACrC,MAAMJ,MAAM,GAAG,IAAIrB,KAAK,CAACuG,KAAK,CAAC;IAC/B,IAAI5c,CAAC,EAAEyV,IAAI,EAAEC,KAAK;IAClB,KAAK1V,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGmH,KAAK,EAAE5c,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACvC0V,KAAK,GAAG1V,CAAC,GAAG0M,KAAK;MACjBgL,MAAM,CAAC1X,CAAC,CAAC,GAAG;QACV,CAAC+X,KAAK,GAAGuF,WAAW,IAAIzF,MAAM,CAAC8E,KAAK,CAACS,MAAM,CAAC1H,KAAK,CAAC,EAAEA,KAAK,CAAC;QAC1D,CAACuC,KAAK,GAAGH,MAAM,CAAC6E,KAAK,CAACxG,IAAI,CAACT,KAAK,CAAC,EAAEA,KAAK;MAC1C,CAAC;IACH;IACA,OAAOgC,MAAM;EACf;EACAsF,cAAcA,CAACzG,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;IACvC,MAAM;MAAC9H,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAMmB,MAAM,GAAG,IAAIrB,KAAK,CAACuG,KAAK,CAAC;IAC/B,IAAI5c,CAAC,EAAEyV,IAAI,EAAEC,KAAK,EAAEnI,IAAI;IACxB,KAAKvN,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGmH,KAAK,EAAE5c,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACvC0V,KAAK,GAAG1V,CAAC,GAAG0M,KAAK;MACjBa,IAAI,GAAG4I,IAAI,CAACT,KAAK,CAAC;MAClBgC,MAAM,CAAC1X,CAAC,CAAC,GAAG;QACV8C,CAAC,EAAEgS,MAAM,CAAC6H,KAAK,CAACpP,IAAI,CAAC,CAAC,CAAC,EAAEmI,KAAK,CAAC;QAC/B1S,CAAC,EAAE+R,MAAM,CAAC4H,KAAK,CAACpP,IAAI,CAAC,CAAC,CAAC,EAAEmI,KAAK;MAChC,CAAC;IACH;IACA,OAAOgC,MAAM;EACf;EACAuF,eAAeA,CAAC1G,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;IACxC,MAAM;MAAC9H,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAM;MAACgH,QAAQ,GAAG,GAAG;MAAEC,QAAQ,GAAG;IAAG,CAAC,GAAG,IAAI,CAAC7D,QAAQ;IACtD,MAAMjC,MAAM,GAAG,IAAIrB,KAAK,CAACuG,KAAK,CAAC;IAC/B,IAAI5c,CAAC,EAAEyV,IAAI,EAAEC,KAAK,EAAEnI,IAAI;IACxB,KAAKvN,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGmH,KAAK,EAAE5c,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACvC0V,KAAK,GAAG1V,CAAC,GAAG0M,KAAK;MACjBa,IAAI,GAAG4I,IAAI,CAACT,KAAK,CAAC;MAClBgC,MAAM,CAAC1X,CAAC,CAAC,GAAG;QACV8C,CAAC,EAAEgS,MAAM,CAAC6H,KAAK,CAAC9b,gBAAgB,CAAC0M,IAAI,EAAEgQ,QAAQ,CAAC,EAAE7H,KAAK,CAAC;QACxD1S,CAAC,EAAE+R,MAAM,CAAC4H,KAAK,CAAC9b,gBAAgB,CAAC0M,IAAI,EAAEiQ,QAAQ,CAAC,EAAE9H,KAAK;MACzD,CAAC;IACH;IACA,OAAOgC,MAAM;EACf;EACA+F,SAASA,CAAC/H,KAAK,EAAE;IACf,OAAO,IAAI,CAACiC,WAAW,CAACqB,OAAO,CAACtD,KAAK,CAAC;EACxC;EACAgI,cAAcA,CAAChI,KAAK,EAAE;IACpB,OAAO,IAAI,CAACiC,WAAW,CAACxB,IAAI,CAACT,KAAK,CAAC;EACrC;EACAC,UAAUA,CAACnB,KAAK,EAAEkD,MAAM,EAAE3B,IAAI,EAAE;IAC9B,MAAMlK,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAM0K,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,MAAMzD,KAAK,GAAGwD,MAAM,CAAClD,KAAK,CAACwD,IAAI,CAAC;IAChC,MAAMpC,KAAK,GAAG;MACZ5D,IAAI,EAAEqD,uBAAuB,CAACxJ,KAAK,EAAE,IAAI,CAAC;MAC1C0H,MAAM,EAAEmE,MAAM,CAACE,OAAO,CAACpD,KAAK,CAACwD,IAAI;IACnC,CAAC;IACD,OAAOrC,UAAU,CAACC,KAAK,EAAE1B,KAAK,EAAEqC,IAAI,CAACb,KAAK,EAAE;MAACK;IAAI,CAAC,CAAC;EACrD;EACA4H,qBAAqBA,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,EAAE;IACjD,MAAMiI,WAAW,GAAGnG,MAAM,CAAClD,KAAK,CAACwD,IAAI,CAAC;IACtC,IAAI9D,KAAK,GAAG2J,WAAW,KAAK,IAAI,GAAGC,GAAG,GAAGD,WAAW;IACpD,MAAMtK,MAAM,GAAGqC,KAAK,IAAI8B,MAAM,CAACE,OAAO,CAACpD,KAAK,CAACwD,IAAI,CAAC;IAClD,IAAIpC,KAAK,IAAIrC,MAAM,EAAE;MACnBqC,KAAK,CAACrC,MAAM,GAAGA,MAAM;MACrBqK,KAAK,CAACnR,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACmR,KAAK,CAACnR,GAAG,EAAEyH,KAAK,CAAC;MACtC0J,KAAK,CAACjP,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACiP,KAAK,CAACjP,GAAG,EAAEuF,KAAK,CAAC;MACtCA,KAAK,GAAGyB,UAAU,CAACC,KAAK,EAAEiI,WAAW,EAAE,IAAI,CAAClG,WAAW,CAACjC,KAAK,EAAE;QAACpB,GAAG,EAAE;MAAI,CAAC,CAAC;IAC7E;IACAsJ,KAAK,CAACnR,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACmR,KAAK,CAACnR,GAAG,EAAEyH,KAAK,CAAC;IACtC0J,KAAK,CAACjP,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACiP,KAAK,CAACjP,GAAG,EAAEuF,KAAK,CAAC;EACxC;EACA6J,SAASA,CAACvJ,KAAK,EAAEwJ,QAAQ,EAAE;IACzB,MAAMpR,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMqB,OAAO,GAAGzC,IAAI,CAACyC,OAAO;IAC5B,MAAM6D,MAAM,GAAGtG,IAAI,CAACuG,OAAO,IAAItI,KAAK,KAAK+B,IAAI,CAACsB,MAAM;IACpD,MAAMpC,IAAI,GAAGuD,OAAO,CAAC3L,MAAM;IAC3B,MAAM4Q,UAAU,GAAGrR,EAAE,CAAC8O,cAAc,CAAClH,KAAK,CAAC;IAC3C,MAAMoB,KAAK,GAAGoI,QAAQ,IAAIzH,IAAI,CAAC8D,QAAQ,IAAI;MAACrI,IAAI,EAAEqD,uBAAuB,CAACzI,EAAE,CAACf,KAAK,EAAE,IAAI,CAAC;MAAE0H,MAAM,EAAE;IAAI,CAAC;IACxG,MAAMqK,KAAK,GAAG;MAACnR,GAAG,EAAEuK,MAAM,CAACE,iBAAiB;MAAEvI,GAAG,EAAEqI,MAAM,CAACC;IAAiB,CAAC;IAC5E,MAAM;MAACxK,GAAG,EAAEyR,QAAQ;MAAEvP,GAAG,EAAEwP;IAAQ,CAAC,GAAGtH,aAAa,CAACoH,UAAU,CAAC;IAChE,IAAIje,CAAC,EAAEkU,KAAK,EAAEwD,MAAM,EAAEzB,UAAU;IAChC,SAASmI,KAAKA,CAAA,EAAG;MACf1G,MAAM,GAAGsB,OAAO,CAAChZ,CAAC,CAAC;MACnBkU,KAAK,GAAGwD,MAAM,CAAClD,KAAK,CAACwD,IAAI,CAAC;MAC1B/B,UAAU,GAAGyB,MAAM,CAACuG,UAAU,CAACjG,IAAI,CAAC;MACpC,OAAO,CAACjX,cAAc,CAACmT,KAAK,CAAC,IAAIgK,QAAQ,GAAGjI,UAAU,IAAIkI,QAAQ,GAAGlI,UAAU;IACjF;IACA,KAAKjW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACzB,IAAIoe,KAAK,CAAC,CAAC,EAAE;QACX;MACF;MACAxR,EAAE,CAAC+Q,qBAAqB,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,CAAC;MACrD,IAAIiH,MAAM,EAAE;QACV;MACF;IACF;IACA,IAAIA,MAAM,EAAE;MACV,KAAK7c,CAAC,GAAGyV,IAAI,GAAG,CAAC,EAAEzV,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC9B,IAAIoe,KAAK,CAAC,CAAC,EAAE;UACX;QACF;QACAxR,EAAE,CAAC+Q,qBAAqB,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,CAAC;QACrD;MACF;IACF;IACA,OAAOgI,KAAK;EACd;EACAS,kBAAkBA,CAAC7J,KAAK,EAAE;IACxB,MAAMkD,MAAM,GAAG,IAAI,CAACC,WAAW,CAACqB,OAAO;IACvC,MAAMzF,MAAM,GAAG,EAAE;IACjB,IAAIvT,CAAC,EAAEyV,IAAI,EAAEvB,KAAK;IAClB,KAAKlU,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGiC,MAAM,CAACrK,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC/CkU,KAAK,GAAGwD,MAAM,CAAC1X,CAAC,CAAC,CAACwU,KAAK,CAACwD,IAAI,CAAC;MAC7B,IAAIjX,cAAc,CAACmT,KAAK,CAAC,EAAE;QACzBX,MAAM,CAAClF,IAAI,CAAC6F,KAAK,CAAC;MACpB;IACF;IACA,OAAOX,MAAM;EACf;EACA+K,cAAcA,CAAA,EAAG;IACf,OAAO,KAAK;EACd;EACAC,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAAM;IAC1B,MAAMC,MAAM,GAAGvB,IAAI,CAACuB,MAAM;IAC1B,MAAMJ,MAAM,GAAG9K,EAAE,CAAC6Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,OAAO;MACL8I,KAAK,EAAE3G,MAAM,GAAG,EAAE,GAAGA,MAAM,CAAC4G,gBAAgB,CAAC/G,MAAM,CAACG,MAAM,CAACG,IAAI,CAAC,CAAC,GAAG,EAAE;MACtE9D,KAAK,EAAE4D,MAAM,GAAG,EAAE,GAAGA,MAAM,CAAC2G,gBAAgB,CAAC/G,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC,CAAC,GAAG;IACtE,CAAC;EACH;EACAjL,OAAOA,CAACgJ,IAAI,EAAE;IACZ,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B/K,EAAE,CAACqG,SAAS,CAAC,CAAC;IACdrG,EAAE,CAAC4M,eAAe,GAAG,CAAC,CAAC;IACvB5M,EAAE,CAACsE,MAAM,CAAC6E,IAAI,IAAI,SAAS,CAAC;IAC5BQ,IAAI,CAACmI,KAAK,GAAGtJ,MAAM,CAAC7U,cAAc,CAACqM,EAAE,CAAC6G,OAAO,CAACkL,IAAI,EAAE9J,WAAW,CAAC0B,IAAI,CAACzB,MAAM,EAAEyB,IAAI,CAACxB,MAAM,EAAEnI,EAAE,CAAC0R,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAClH;EACApN,MAAMA,CAAC6E,IAAI,EAAE,CAAC;EACdzI,IAAIA,CAAA,EAAG;IACL,MAAMV,EAAE,GAAG,IAAI;IACf,MAAM2M,GAAG,GAAG3M,EAAE,CAAC0M,IAAI;IACnB,MAAMzN,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMiH,QAAQ,GAAGrI,IAAI,CAACJ,IAAI,IAAI,EAAE;IAChC,MAAM0I,IAAI,GAAGhT,KAAK,CAACiT,SAAS;IAC5B,MAAM7N,MAAM,GAAG,EAAE;IACjB,MAAMvE,KAAK,GAAGE,EAAE,CAACmN,UAAU,IAAI,CAAC;IAChC,MAAM6C,KAAK,GAAGhQ,EAAE,CAACoN,UAAU,IAAK4E,QAAQ,CAACvR,MAAM,GAAGX,KAAM;IACxD,IAAI1M,CAAC;IACL,IAAIuW,IAAI,CAACmC,OAAO,EAAE;MAChBnC,IAAI,CAACmC,OAAO,CAACpL,IAAI,CAACiM,GAAG,EAAEsF,IAAI,EAAEnS,KAAK,EAAEkQ,KAAK,CAAC;IAC5C;IACA,KAAK5c,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAK,EAAE,EAAE5c,CAAC,EAAE;MACtC,MAAM4Y,OAAO,GAAGgG,QAAQ,CAAC5e,CAAC,CAAC;MAC3B,IAAI4Y,OAAO,CAAC3H,MAAM,EAAE;QAClBA,MAAM,CAAC5C,IAAI,CAACuK,OAAO,CAAC;MACtB,CAAC,MAAM;QACLA,OAAO,CAACtL,IAAI,CAACiM,GAAG,EAAEsF,IAAI,CAAC;MACzB;IACF;IACA,KAAK7e,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiR,MAAM,CAAC5D,MAAM,EAAE,EAAErN,CAAC,EAAE;MAClCiR,MAAM,CAACjR,CAAC,CAAC,CAACsN,IAAI,CAACiM,GAAG,EAAEsF,IAAI,CAAC;IAC3B;EACF;EACAE,QAAQA,CAACrJ,KAAK,EAAEzE,MAAM,EAAE;IACtB,MAAM8E,IAAI,GAAG9E,MAAM,GAAG,QAAQ,GAAG,SAAS;IAC1C,OAAOyE,KAAK,KAAK/J,SAAS,IAAI,IAAI,CAACgM,WAAW,CAACe,OAAO,GAClD,IAAI,CAACsG,4BAA4B,CAACjJ,IAAI,CAAC,GACvC,IAAI,CAACkJ,yBAAyB,CAACvJ,KAAK,IAAI,CAAC,EAAEK,IAAI,CAAC;EACtD;EACA0G,UAAUA,CAAC/G,KAAK,EAAEzE,MAAM,EAAE8E,IAAI,EAAE;IAC9B,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM8L,OAAO,GAAG9L,EAAE,CAAC4N,UAAU,CAAC,CAAC;IAC/B,IAAI0E,OAAO;IACX,IAAIxJ,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG9I,EAAE,CAAC+K,WAAW,CAACxB,IAAI,CAAC9I,MAAM,EAAE;MACpD,MAAMuL,OAAO,GAAGhM,EAAE,CAAC+K,WAAW,CAACxB,IAAI,CAACT,KAAK,CAAC;MAC1CwJ,OAAO,GAAGtG,OAAO,CAACsB,QAAQ,KACvBtB,OAAO,CAACsB,QAAQ,GAAGvB,iBAAiB,CAAC/L,EAAE,CAAC6P,UAAU,CAAC,CAAC,EAAE/G,KAAK,EAAEkD,OAAO,CAAC,CAAC;MACzEsG,OAAO,CAACxH,MAAM,GAAG9K,EAAE,CAAC6Q,SAAS,CAAC/H,KAAK,CAAC;MACpCwJ,OAAO,CAACpG,GAAG,GAAGJ,OAAO,CAACvC,IAAI,CAACT,KAAK,CAAC;IACnC,CAAC,MAAM;MACLwJ,OAAO,GAAGtS,EAAE,CAACsN,QAAQ,KAClBtN,EAAE,CAACsN,QAAQ,GAAG3B,oBAAoB,CAAC3L,EAAE,CAACf,KAAK,CAAC4Q,UAAU,CAAC,CAAC,EAAE7P,EAAE,CAAC8I,KAAK,CAAC,CAAC;MACvEwJ,OAAO,CAACxG,OAAO,GAAGA,OAAO;IAC3B;IACAwG,OAAO,CAACjO,MAAM,GAAG,CAAC,CAACA,MAAM;IACzBiO,OAAO,CAACnJ,IAAI,GAAGA,IAAI;IACnB,OAAOmJ,OAAO;EAChB;EACAF,4BAA4BA,CAACjJ,IAAI,EAAE;IACjC,OAAO,IAAI,CAACoJ,sBAAsB,CAAC,IAAI,CAACpD,kBAAkB,CAACnF,EAAE,EAAEb,IAAI,CAAC;EACtE;EACAkJ,yBAAyBA,CAACvJ,KAAK,EAAEK,IAAI,EAAE;IACrC,OAAO,IAAI,CAACoJ,sBAAsB,CAAC,IAAI,CAACC,eAAe,CAACxI,EAAE,EAAEb,IAAI,EAAEL,KAAK,CAAC;EAC1E;EACAyJ,sBAAsBA,CAACE,WAAW,EAAEtJ,IAAI,GAAG,SAAS,EAAEL,KAAK,EAAE;IAC3D,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAMqE,MAAM,GAAG8E,IAAI,KAAK,QAAQ;IAChC,MAAMuJ,KAAK,GAAG1S,EAAE,CAAC4M,eAAe;IAChC,MAAM+F,QAAQ,GAAGF,WAAW,GAAG,GAAG,GAAGtJ,IAAI;IACzC,MAAMoD,MAAM,GAAGmG,KAAK,CAACC,QAAQ,CAAC;IAC9B,MAAMC,OAAO,GAAG5S,EAAE,CAACqN,mBAAmB,IAAIhZ,OAAO,CAACyU,KAAK,CAAC;IACxD,IAAIyD,MAAM,EAAE;MACV,OAAOD,gBAAgB,CAACC,MAAM,EAAEqG,OAAO,CAAC;IAC1C;IACA,MAAM1M,MAAM,GAAGlG,EAAE,CAACf,KAAK,CAACiH,MAAM;IAC9B,MAAMsJ,SAAS,GAAGtJ,MAAM,CAAC2M,uBAAuB,CAAC7S,EAAE,CAAC8M,KAAK,EAAE2F,WAAW,CAAC;IACvE,MAAMK,QAAQ,GAAGzO,MAAM,GAAG,CAAC,GAAGoO,WAAW,OAAO,EAAE,OAAO,EAAEA,WAAW,EAAE,EAAE,CAAC,GAAG,CAACA,WAAW,EAAE,EAAE,CAAC;IAC/F,MAAM/C,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC3P,EAAE,CAAC4N,UAAU,CAAC,CAAC,EAAE4B,SAAS,CAAC;IACjE,MAAMuD,KAAK,GAAG5N,MAAM,CAACC,IAAI,CAAC3R,QAAQ,CAACue,QAAQ,CAACS,WAAW,CAAC,CAAC;IACzD,MAAMH,OAAO,GAAGA,CAAA,KAAMtS,EAAE,CAAC6P,UAAU,CAAC/G,KAAK,EAAEzE,MAAM,CAAC;IAClD,MAAMsC,MAAM,GAAGT,MAAM,CAAC8M,mBAAmB,CAACtD,MAAM,EAAEqD,KAAK,EAAET,OAAO,EAAEQ,QAAQ,CAAC;IAC3E,IAAInM,MAAM,CAACK,OAAO,EAAE;MAClBL,MAAM,CAACK,OAAO,GAAG4L,OAAO;MACxBF,KAAK,CAACC,QAAQ,CAAC,GAAGxN,MAAM,CAAC8N,MAAM,CAAC3G,gBAAgB,CAAC3F,MAAM,EAAEiM,OAAO,CAAC,CAAC;IACpE;IACA,OAAOjM,MAAM;EACf;EACAuM,kBAAkBA,CAACpK,KAAK,EAAEqK,UAAU,EAAE9O,MAAM,EAAE;IAC5C,MAAMrE,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMyT,KAAK,GAAG1S,EAAE,CAAC4M,eAAe;IAChC,MAAM+F,QAAQ,GAAG,aAAaQ,UAAU,EAAE;IAC1C,MAAM5G,MAAM,GAAGmG,KAAK,CAACC,QAAQ,CAAC;IAC9B,IAAIpG,MAAM,EAAE;MACV,OAAOA,MAAM;IACf;IACA,IAAI1F,OAAO;IACX,IAAI5H,KAAK,CAAC4H,OAAO,CAACxB,SAAS,KAAK,KAAK,EAAE;MACrC,MAAMa,MAAM,GAAGlG,EAAE,CAACf,KAAK,CAACiH,MAAM;MAC9B,MAAMsJ,SAAS,GAAGtJ,MAAM,CAACkN,yBAAyB,CAACpT,EAAE,CAAC8M,KAAK,EAAEqG,UAAU,CAAC;MACxE,MAAMzD,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC3P,EAAE,CAAC4N,UAAU,CAAC,CAAC,EAAE4B,SAAS,CAAC;MACjE3I,OAAO,GAAGX,MAAM,CAAC0J,cAAc,CAACF,MAAM,EAAE1P,EAAE,CAAC6P,UAAU,CAAC/G,KAAK,EAAEzE,MAAM,EAAE8O,UAAU,CAAC,CAAC;IACnF;IACA,MAAMrN,UAAU,GAAG,IAAIG,UAAU,CAAChH,KAAK,EAAE4H,OAAO,IAAIA,OAAO,CAACf,UAAU,CAAC;IACvE,IAAIe,OAAO,IAAIA,OAAO,CAACwM,UAAU,EAAE;MACjCX,KAAK,CAACC,QAAQ,CAAC,GAAGxN,MAAM,CAAC8N,MAAM,CAACnN,UAAU,CAAC;IAC7C;IACA,OAAOA,UAAU;EACnB;EACAwN,gBAAgBA,CAACzM,OAAO,EAAE;IACxB,IAAI,CAACA,OAAO,CAACG,OAAO,EAAE;MACpB;IACF;IACA,OAAO,IAAI,CAACkG,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG/H,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEX,OAAO,CAAC,CAAC;EAClF;EACA0M,cAAcA,CAACpK,IAAI,EAAEqK,aAAa,EAAE;IAClC,OAAO,CAACA,aAAa,IAAInH,kBAAkB,CAAClD,IAAI,CAAC,IAAI,IAAI,CAAClK,KAAK,CAACwU,mBAAmB;EACrF;EACAC,aAAaA,CAAC1H,OAAO,EAAElD,KAAK,EAAEnD,UAAU,EAAEwD,IAAI,EAAE;IAC9C,IAAIkD,kBAAkB,CAAClD,IAAI,CAAC,EAAE;MAC5BhE,MAAM,CAACqC,MAAM,CAACwE,OAAO,EAAErG,UAAU,CAAC;IACpC,CAAC,MAAM;MACL,IAAI,CAACuN,kBAAkB,CAACpK,KAAK,EAAEK,IAAI,CAAC,CAAC7E,MAAM,CAAC0H,OAAO,EAAErG,UAAU,CAAC;IAClE;EACF;EACAgO,mBAAmBA,CAACH,aAAa,EAAErK,IAAI,EAAEvC,UAAU,EAAE;IACnD,IAAI4M,aAAa,IAAI,CAACnH,kBAAkB,CAAClD,IAAI,CAAC,EAAE;MAC9C,IAAI,CAAC+J,kBAAkB,CAACnU,SAAS,EAAEoK,IAAI,CAAC,CAAC7E,MAAM,CAACkP,aAAa,EAAE5M,UAAU,CAAC;IAC5E;EACF;EACAgN,SAASA,CAAC5H,OAAO,EAAElD,KAAK,EAAEK,IAAI,EAAE9E,MAAM,EAAE;IACtC2H,OAAO,CAAC3H,MAAM,GAAGA,MAAM;IACvB,MAAMwC,OAAO,GAAG,IAAI,CAACsL,QAAQ,CAACrJ,KAAK,EAAEzE,MAAM,CAAC;IAC5C,IAAI,CAAC6O,kBAAkB,CAACpK,KAAK,EAAEK,IAAI,EAAE9E,MAAM,CAAC,CAACC,MAAM,CAAC0H,OAAO,EAAE;MAC3DnF,OAAO,EAAG,CAACxC,MAAM,IAAI,IAAI,CAACiP,gBAAgB,CAACzM,OAAO,CAAC,IAAKA;IAC1D,CAAC,CAAC;EACJ;EACAgN,gBAAgBA,CAAC7H,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC7C,IAAI,CAAC8K,SAAS,CAAC5H,OAAO,EAAElD,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;EACjD;EACAgL,aAAaA,CAAC9H,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC1C,IAAI,CAAC8K,SAAS,CAAC5H,OAAO,EAAElD,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;EAChD;EACAiL,wBAAwBA,CAAA,EAAG;IACzB,MAAM/H,OAAO,GAAG,IAAI,CAACjB,WAAW,CAACe,OAAO;IACxC,IAAIE,OAAO,EAAE;MACX,IAAI,CAAC4H,SAAS,CAAC5H,OAAO,EAAEjN,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC;IACrD;EACF;EACAiV,qBAAqBA,CAAA,EAAG;IACtB,MAAMhI,OAAO,GAAG,IAAI,CAACjB,WAAW,CAACe,OAAO;IACxC,IAAIE,OAAO,EAAE;MACX,IAAI,CAAC4H,SAAS,CAAC5H,OAAO,EAAEjN,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;IACpD;EACF;EACAwQ,eAAeA,CAACF,gBAAgB,EAAE;IAChC,MAAMrP,EAAE,GAAG,IAAI;IACf,MAAMiU,OAAO,GAAGjU,EAAE,CAAC+K,WAAW,CAACxB,IAAI,CAAC9I,MAAM;IAC1C,MAAMyT,OAAO,GAAGlU,EAAE,CAACgN,KAAK,CAACvM,MAAM;IAC/B,IAAIyT,OAAO,GAAGD,OAAO,EAAE;MACrBjU,EAAE,CAACmU,eAAe,CAACF,OAAO,EAAEC,OAAO,GAAGD,OAAO,EAAE5E,gBAAgB,CAAC;IAClE,CAAC,MAAM,IAAI6E,OAAO,GAAGD,OAAO,EAAE;MAC5BjU,EAAE,CAACoU,eAAe,CAACF,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;IAChD;IACA,MAAMlE,KAAK,GAAGpQ,IAAI,CAACC,GAAG,CAACqU,OAAO,EAAED,OAAO,CAAC;IACxC,IAAIjE,KAAK,EAAE;MACThQ,EAAE,CAAC+P,KAAK,CAAC,CAAC,EAAEC,KAAK,CAAC;IACpB;EACF;EACAmE,eAAeA,CAACrU,KAAK,EAAEkQ,KAAK,EAAEX,gBAAgB,GAAG,IAAI,EAAE;IACrD,MAAMrP,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMxB,IAAI,GAAGI,IAAI,CAACJ,IAAI;IACtB,MAAMvB,GAAG,GAAGlI,KAAK,GAAGkQ,KAAK;IACzB,IAAI5c,CAAC;IACL,MAAMihB,IAAI,GAAIC,GAAG,IAAK;MACpBA,GAAG,CAAC7T,MAAM,IAAIuP,KAAK;MACnB,KAAK5c,CAAC,GAAGkhB,GAAG,CAAC7T,MAAM,GAAG,CAAC,EAAErN,CAAC,IAAI4U,GAAG,EAAE5U,CAAC,EAAE,EAAE;QACtCkhB,GAAG,CAAClhB,CAAC,CAAC,GAAGkhB,GAAG,CAAClhB,CAAC,GAAG4c,KAAK,CAAC;MACzB;IACF,CAAC;IACDqE,IAAI,CAAC9K,IAAI,CAAC;IACV,KAAKnW,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG4U,GAAG,EAAE,EAAE5U,CAAC,EAAE;MAC5BmW,IAAI,CAACnW,CAAC,CAAC,GAAG,IAAI4M,EAAE,CAACwS,eAAe,CAAC,CAAC;IACpC;IACA,IAAIxS,EAAE,CAAC+M,QAAQ,EAAE;MACfsH,IAAI,CAAC1K,IAAI,CAACyC,OAAO,CAAC;IACpB;IACApM,EAAE,CAAC+P,KAAK,CAACjQ,KAAK,EAAEkQ,KAAK,CAAC;IACtB,IAAIX,gBAAgB,EAAE;MACpBrP,EAAE,CAACuU,cAAc,CAAChL,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE,OAAO,CAAC;IAChD;EACF;EACAuE,cAAcA,CAACvI,OAAO,EAAElM,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,EAAE,CAAC;EAC7CiL,eAAeA,CAACtU,KAAK,EAAEkQ,KAAK,EAAE;IAC5B,MAAMhQ,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,IAAI/K,EAAE,CAAC+M,QAAQ,EAAE;MACf,MAAMyH,OAAO,GAAG7K,IAAI,CAACyC,OAAO,CAACqI,MAAM,CAAC3U,KAAK,EAAEkQ,KAAK,CAAC;MACjD,IAAIrG,IAAI,CAAC8D,QAAQ,EAAE;QACjBtB,WAAW,CAACxC,IAAI,EAAE6K,OAAO,CAAC;MAC5B;IACF;IACA7K,IAAI,CAACJ,IAAI,CAACkL,MAAM,CAAC3U,KAAK,EAAEkQ,KAAK,CAAC;EAChC;EACA0E,WAAWA,CAAA,EAAG;IACZ,MAAM1E,KAAK,GAAG2E,SAAS,CAAClU,MAAM;IAC9B,IAAI,CAAC0T,eAAe,CAAC,IAAI,CAACvG,UAAU,CAAC,CAAC,CAACrE,IAAI,CAAC9I,MAAM,GAAGuP,KAAK,EAAEA,KAAK,CAAC;EACpE;EACA4E,UAAUA,CAAA,EAAG;IACX,IAAI,CAACR,eAAe,CAAC,IAAI,CAACrJ,WAAW,CAACxB,IAAI,CAAC9I,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;EAC3D;EACAoU,YAAYA,CAAA,EAAG;IACb,IAAI,CAACT,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EACAU,aAAaA,CAAChV,KAAK,EAAEkQ,KAAK,EAAE;IAC1B,IAAI,CAACoE,eAAe,CAACtU,KAAK,EAAEkQ,KAAK,CAAC;IAClC,IAAI,CAACmE,eAAe,CAACrU,KAAK,EAAE6U,SAAS,CAAClU,MAAM,GAAG,CAAC,CAAC;EACnD;EACAsU,cAAcA,CAAA,EAAG;IACf,IAAI,CAACZ,eAAe,CAAC,CAAC,EAAEQ,SAAS,CAAClU,MAAM,CAAC;EAC3C;AACF;AACAgM,iBAAiB,CAAChZ,QAAQ,GAAG,CAAC,CAAC;AAC/BgZ,iBAAiB,CAACuI,SAAS,CAAC7F,kBAAkB,GAAG,IAAI;AACrD1C,iBAAiB,CAACuI,SAAS,CAACxC,eAAe,GAAG,IAAI;AAElD,SAASyC,iBAAiBA,CAACrN,KAAK,EAAE;EAChC,IAAI,CAACA,KAAK,CAACsN,MAAM,CAACC,IAAI,EAAE;IACtB,MAAMC,KAAK,GAAGxN,KAAK,CAACyN,uBAAuB,CAAC,KAAK,CAAC;IAClD,IAAI1O,MAAM,GAAG,EAAE;IACf,KAAK,IAAIvT,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGuM,KAAK,CAAC3U,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;MAClDuT,MAAM,GAAGA,MAAM,CAAC2O,MAAM,CAACF,KAAK,CAAChiB,CAAC,CAAC,CAACyX,UAAU,CAAC4G,kBAAkB,CAAC7J,KAAK,CAAC,CAAC;IACvE;IACAA,KAAK,CAACsN,MAAM,CAACC,IAAI,GAAGpgB,YAAY,CAAC4R,MAAM,CAAC4O,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,GAAGQ,CAAC,CAAC,CAAC;EAChE;EACA,OAAOsU,KAAK,CAACsN,MAAM,CAACC,IAAI;AAC1B;AACA,SAASK,oBAAoBA,CAAC5N,KAAK,EAAE;EACnC,MAAMjB,MAAM,GAAGsO,iBAAiB,CAACrN,KAAK,CAAC;EACvC,IAAI/H,GAAG,GAAG+H,KAAK,CAAC6N,OAAO;EACvB,IAAIriB,CAAC,EAAEyV,IAAI,EAAE6M,IAAI,EAAEvF,IAAI;EACvB,MAAMwF,gBAAgB,GAAGA,CAAA,KAAM;IAC7B9V,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEzM,CAAC,IAAIwM,IAAI,CAACgW,GAAG,CAACF,IAAI,GAAGvF,IAAI,CAAC,IAAItQ,GAAG,CAAC;IACtDsQ,IAAI,GAAGuF,IAAI;EACb,CAAC;EACD,KAAKtiB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGlC,MAAM,CAAClG,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAC/CsiB,IAAI,GAAG9N,KAAK,CAACiO,gBAAgB,CAAClP,MAAM,CAACvT,CAAC,CAAC,CAAC;IACxCuiB,gBAAgB,CAAC,CAAC;EACpB;EACA,KAAKviB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGjB,KAAK,CAACkO,KAAK,CAACrV,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACpDsiB,IAAI,GAAG9N,KAAK,CAACmO,eAAe,CAAC3iB,CAAC,CAAC;IAC/BuiB,gBAAgB,CAAC,CAAC;EACpB;EACA,OAAO9V,GAAG;AACZ;AACA,SAASmW,wBAAwBA,CAAClN,KAAK,EAAEmN,KAAK,EAAEpP,OAAO,EAAEqP,UAAU,EAAE;EACnE,MAAMC,SAAS,GAAGtP,OAAO,CAACuP,YAAY;EACtC,IAAI7O,IAAI,EAAE8O,KAAK;EACf,IAAI5hB,aAAa,CAAC0hB,SAAS,CAAC,EAAE;IAC5B5O,IAAI,GAAG0O,KAAK,CAACpW,GAAG,GAAGgH,OAAO,CAACyP,kBAAkB;IAC7CD,KAAK,GAAGxP,OAAO,CAAC0P,aAAa;EAC/B,CAAC,MAAM;IACLhP,IAAI,GAAG4O,SAAS,GAAGD,UAAU;IAC7BG,KAAK,GAAG,CAAC;EACX;EACA,OAAO;IACLG,KAAK,EAAEjP,IAAI,GAAG2O,UAAU;IACxBG,KAAK;IACLvW,KAAK,EAAEmW,KAAK,CAACQ,MAAM,CAAC3N,KAAK,CAAC,GAAIvB,IAAI,GAAG;EACvC,CAAC;AACH;AACA,SAASmP,yBAAyBA,CAAC5N,KAAK,EAAEmN,KAAK,EAAEpP,OAAO,EAAEqP,UAAU,EAAE;EACpE,MAAMO,MAAM,GAAGR,KAAK,CAACQ,MAAM;EAC3B,MAAMf,IAAI,GAAGe,MAAM,CAAC3N,KAAK,CAAC;EAC1B,IAAIqH,IAAI,GAAGrH,KAAK,GAAG,CAAC,GAAG2N,MAAM,CAAC3N,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/C,IAAI6N,IAAI,GAAG7N,KAAK,GAAG2N,MAAM,CAAChW,MAAM,GAAG,CAAC,GAAGgW,MAAM,CAAC3N,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/D,MAAM8N,OAAO,GAAG/P,OAAO,CAACyP,kBAAkB;EAC1C,IAAInG,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGuF,IAAI,IAAIiB,IAAI,KAAK,IAAI,GAAGV,KAAK,CAACjO,GAAG,GAAGiO,KAAK,CAACnW,KAAK,GAAG6W,IAAI,GAAGjB,IAAI,CAAC;EACvE;EACA,IAAIiB,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGjB,IAAI,GAAGA,IAAI,GAAGvF,IAAI;EAC3B;EACA,MAAMrQ,KAAK,GAAG4V,IAAI,GAAG,CAACA,IAAI,GAAG9V,IAAI,CAACC,GAAG,CAACsQ,IAAI,EAAEwG,IAAI,CAAC,IAAI,CAAC,GAAGC,OAAO;EAChE,MAAMrP,IAAI,GAAG3H,IAAI,CAACgW,GAAG,CAACe,IAAI,GAAGxG,IAAI,CAAC,GAAG,CAAC,GAAGyG,OAAO;EAChD,OAAO;IACLJ,KAAK,EAAEjP,IAAI,GAAG2O,UAAU;IACxBG,KAAK,EAAExP,OAAO,CAAC0P,aAAa;IAC5BzW;EACF,CAAC;AACH;AACA,SAAS+W,aAAaA,CAACC,KAAK,EAAEnW,IAAI,EAAEuK,MAAM,EAAE9X,CAAC,EAAE;EAC7C,MAAM2jB,UAAU,GAAG7L,MAAM,CAAC6E,KAAK,CAAC+G,KAAK,CAAC,CAAC,CAAC,EAAE1jB,CAAC,CAAC;EAC5C,MAAM4jB,QAAQ,GAAG9L,MAAM,CAAC6E,KAAK,CAAC+G,KAAK,CAAC,CAAC,CAAC,EAAE1jB,CAAC,CAAC;EAC1C,MAAMyM,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACkX,UAAU,EAAEC,QAAQ,CAAC;EAC1C,MAAMjV,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACgV,UAAU,EAAEC,QAAQ,CAAC;EAC1C,IAAIC,QAAQ,GAAGpX,GAAG;EAClB,IAAIqX,MAAM,GAAGnV,GAAG;EAChB,IAAInC,IAAI,CAACgW,GAAG,CAAC/V,GAAG,CAAC,GAAGD,IAAI,CAACgW,GAAG,CAAC7T,GAAG,CAAC,EAAE;IACjCkV,QAAQ,GAAGlV,GAAG;IACdmV,MAAM,GAAGrX,GAAG;EACd;EACAc,IAAI,CAACuK,MAAM,CAACE,IAAI,CAAC,GAAG8L,MAAM;EAC1BvW,IAAI,CAACwW,OAAO,GAAG;IACbF,QAAQ;IACRC,MAAM;IACNpX,KAAK,EAAEiX,UAAU;IACjB/O,GAAG,EAAEgP,QAAQ;IACbnX,GAAG;IACHkC;EACF,CAAC;AACH;AACA,SAASqV,UAAUA,CAACN,KAAK,EAAEnW,IAAI,EAAEuK,MAAM,EAAE9X,CAAC,EAAE;EAC1C,IAAIG,OAAO,CAACujB,KAAK,CAAC,EAAE;IAClBD,aAAa,CAACC,KAAK,EAAEnW,IAAI,EAAEuK,MAAM,EAAE9X,CAAC,CAAC;EACvC,CAAC,MAAM;IACLuN,IAAI,CAACuK,MAAM,CAACE,IAAI,CAAC,GAAGF,MAAM,CAAC6E,KAAK,CAAC+G,KAAK,EAAE1jB,CAAC,CAAC;EAC5C;EACA,OAAOuN,IAAI;AACb;AACA,SAAS0W,qBAAqBA,CAAC1N,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;EACvD,MAAM/E,MAAM,GAAGtB,IAAI,CAACsB,MAAM;EAC1B,MAAMC,MAAM,GAAGvB,IAAI,CAACuB,MAAM;EAC1B,MAAMsF,MAAM,GAAGvF,MAAM,CAACwF,SAAS,CAAC,CAAC;EACjC,MAAMC,WAAW,GAAGzF,MAAM,KAAKC,MAAM;EACrC,MAAMJ,MAAM,GAAG,EAAE;EACjB,IAAI1X,CAAC,EAAEyV,IAAI,EAAElI,IAAI,EAAEmW,KAAK;EACxB,KAAK1jB,CAAC,GAAG0M,KAAK,EAAE+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACnD0jB,KAAK,GAAGvN,IAAI,CAACnW,CAAC,CAAC;IACfuN,IAAI,GAAG,CAAC,CAAC;IACTA,IAAI,CAACsK,MAAM,CAACG,IAAI,CAAC,GAAGsF,WAAW,IAAIzF,MAAM,CAAC8E,KAAK,CAACS,MAAM,CAACpd,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC7D0X,MAAM,CAACrJ,IAAI,CAAC2V,UAAU,CAACN,KAAK,EAAEnW,IAAI,EAAEuK,MAAM,EAAE9X,CAAC,CAAC,CAAC;EACjD;EACA,OAAO0X,MAAM;AACf;AACA,SAASwM,UAAUA,CAACC,MAAM,EAAE;EAC1B,OAAOA,MAAM,IAAIA,MAAM,CAACN,QAAQ,KAAKlY,SAAS,IAAIwY,MAAM,CAACL,MAAM,KAAKnY,SAAS;AAC/E;AACA,MAAMyY,aAAa,SAAS/K,iBAAiB,CAAC;EAC5C6D,kBAAkBA,CAAC3G,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;IAC3C,OAAOqH,qBAAqB,CAAC1N,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,CAAC;EACxD;EACAI,cAAcA,CAACzG,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;IACvC,OAAOqH,qBAAqB,CAAC1N,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,CAAC;EACxD;EACAK,eAAeA,CAAC1G,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;IACxC,MAAM;MAAC/E,MAAM;MAAEC;IAAM,CAAC,GAAGvB,IAAI;IAC7B,MAAM;MAACgH,QAAQ,GAAG,GAAG;MAAEC,QAAQ,GAAG;IAAG,CAAC,GAAG,IAAI,CAAC7D,QAAQ;IACtD,MAAM0K,QAAQ,GAAGxM,MAAM,CAACG,IAAI,KAAK,GAAG,GAAGuF,QAAQ,GAAGC,QAAQ;IAC1D,MAAM8G,QAAQ,GAAGxM,MAAM,CAACE,IAAI,KAAK,GAAG,GAAGuF,QAAQ,GAAGC,QAAQ;IAC1D,MAAM9F,MAAM,GAAG,EAAE;IACjB,IAAI1X,CAAC,EAAEyV,IAAI,EAAElI,IAAI,EAAEgX,GAAG;IACtB,KAAKvkB,CAAC,GAAG0M,KAAK,EAAE+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACnDukB,GAAG,GAAGpO,IAAI,CAACnW,CAAC,CAAC;MACbuN,IAAI,GAAG,CAAC,CAAC;MACTA,IAAI,CAACsK,MAAM,CAACG,IAAI,CAAC,GAAGH,MAAM,CAAC8E,KAAK,CAAC9b,gBAAgB,CAAC0jB,GAAG,EAAEF,QAAQ,CAAC,EAAErkB,CAAC,CAAC;MACpE0X,MAAM,CAACrJ,IAAI,CAAC2V,UAAU,CAACnjB,gBAAgB,CAAC0jB,GAAG,EAAED,QAAQ,CAAC,EAAE/W,IAAI,EAAEuK,MAAM,EAAE9X,CAAC,CAAC,CAAC;IAC3E;IACA,OAAO0X,MAAM;EACf;EACAiG,qBAAqBA,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,EAAE;IACjD,KAAK,CAAC+H,qBAAqB,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,CAAC;IACxD,MAAMuO,MAAM,GAAGzM,MAAM,CAACqM,OAAO;IAC7B,IAAII,MAAM,IAAI3P,KAAK,KAAK,IAAI,CAACmD,WAAW,CAACG,MAAM,EAAE;MAC/C8F,KAAK,CAACnR,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACmR,KAAK,CAACnR,GAAG,EAAE0X,MAAM,CAAC1X,GAAG,CAAC;MAC3CmR,KAAK,CAACjP,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACiP,KAAK,CAACjP,GAAG,EAAEwV,MAAM,CAACxV,GAAG,CAAC;IAC7C;EACF;EACA4P,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAM;MAACE,MAAM;MAAEC;IAAM,CAAC,GAAGvB,IAAI;IAC7B,MAAMmB,MAAM,GAAG9K,EAAE,CAAC6Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,MAAMyO,MAAM,GAAGzM,MAAM,CAACqM,OAAO;IAC7B,MAAM7P,KAAK,GAAGgQ,UAAU,CAACC,MAAM,CAAC,GAC5B,GAAG,GAAGA,MAAM,CAACzX,KAAK,GAAG,IAAI,GAAGyX,MAAM,CAACvP,GAAG,GAAG,GAAG,GAC5C,EAAE,GAAGkD,MAAM,CAAC2G,gBAAgB,CAAC/G,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC,CAAC;IACrD,OAAO;MACLwG,KAAK,EAAE,EAAE,GAAG3G,MAAM,CAAC4G,gBAAgB,CAAC/G,MAAM,CAACG,MAAM,CAACG,IAAI,CAAC,CAAC;MACxD9D;IACF,CAAC;EACH;EACAiG,UAAUA,CAAA,EAAG;IACX,MAAMvN,EAAE,GAAG,IAAI;IACfA,EAAE,CAACqN,mBAAmB,GAAG,IAAI;IAC7B,KAAK,CAACE,UAAU,CAAC,CAAC;IAClB,MAAM5D,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3BpB,IAAI,CAACX,KAAK,GAAGhJ,EAAE,CAAC4N,UAAU,CAAC,CAAC,CAAC5E,KAAK;EACpC;EACA1E,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B/K,EAAE,CAACuU,cAAc,CAAC5K,IAAI,CAACJ,IAAI,EAAE,CAAC,EAAEI,IAAI,CAACJ,IAAI,CAAC9I,MAAM,EAAE0I,IAAI,CAAC;EACzD;EACAoL,cAAcA,CAACqD,IAAI,EAAE9X,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,EAAE;IACvC,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAM+B,MAAM,GAAGlL,EAAE,CAAC+K,WAAW,CAACG,MAAM;IACpC,MAAM2M,IAAI,GAAG3M,MAAM,CAAC4M,YAAY,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAG7M,MAAM,CAAC8M,YAAY,CAAC,CAAC;IACxC,MAAM/B,KAAK,GAAGjW,EAAE,CAACiY,SAAS,CAAC,CAAC;IAC5B,MAAMC,SAAS,GAAGlY,EAAE,CAACqS,yBAAyB,CAACvS,KAAK,EAAEqJ,IAAI,CAAC;IAC3D,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAgB,CAAC4E,SAAS,CAAC;IACpD,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAc,CAACpK,IAAI,EAAEqK,aAAa,CAAC;IAC7DxT,EAAE,CAAC2T,mBAAmB,CAACH,aAAa,EAAErK,IAAI,EAAE+O,SAAS,CAAC;IACtD,KAAK,IAAI9kB,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,EAAE,EAAE;MAC1C,MAAM+kB,OAAO,GAAGpJ,KAAK,GAAG;QAAC8I,IAAI;QAAEO,IAAI,EAAEP;MAAI,CAAC,GAAG7X,EAAE,CAACqY,wBAAwB,CAACjlB,CAAC,CAAC;MAC3E,MAAMklB,OAAO,GAAGtY,EAAE,CAACuY,wBAAwB,CAACnlB,CAAC,EAAE6iB,KAAK,CAAC;MACrD,MAAMtQ,UAAU,GAAG;QACjBoS,UAAU;QACVF,IAAI,EAAEM,OAAO,CAACN,IAAI;QAClB3hB,CAAC,EAAE6hB,UAAU,GAAGI,OAAO,CAACC,IAAI,GAAGE,OAAO,CAACE,MAAM;QAC7CpiB,CAAC,EAAE2hB,UAAU,GAAGO,OAAO,CAACE,MAAM,GAAGL,OAAO,CAACC,IAAI;QAC7CK,MAAM,EAAEV,UAAU,GAAGO,OAAO,CAAC/Q,IAAI,GAAGxI,SAAS;QAC7C2Z,KAAK,EAAEX,UAAU,GAAGhZ,SAAS,GAAGuZ,OAAO,CAAC/Q;MAC1C,CAAC;MACD,IAAIgM,cAAc,EAAE;QAClB5N,UAAU,CAACkB,OAAO,GAAG2M,aAAa,IAAIxT,EAAE,CAACqS,yBAAyB,CAACjf,CAAC,EAAE+V,IAAI,CAAC;MAC7E;MACAnJ,EAAE,CAAC0T,aAAa,CAACkE,IAAI,CAACxkB,CAAC,CAAC,EAAEA,CAAC,EAAEuS,UAAU,EAAEwD,IAAI,CAAC;IAChD;EACF;EACAwP,UAAUA,CAACC,IAAI,EAAE3M,SAAS,EAAE;IAC1B,MAAMjM,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAAM;IAC1B,MAAMtC,QAAQ,GAAGsC,MAAM,CAACoK,uBAAuB,CAACrV,EAAE,CAAC8M,KAAK,CAAC;IACzD,MAAMlD,OAAO,GAAGqB,MAAM,CAACpE,OAAO,CAAC+C,OAAO;IACtC,MAAMf,IAAI,GAAGF,QAAQ,CAAClI,MAAM;IAC5B,MAAM+J,MAAM,GAAG,EAAE;IACjB,IAAIpX,CAAC,EAAEuN,IAAI;IACX,KAAKvN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACzBuN,IAAI,GAAGgI,QAAQ,CAACvV,CAAC,CAAC;MAClB,IAAI,OAAO6Y,SAAS,KAAK,WAAW,EAAE;QACpC,MAAM4M,GAAG,GAAGlY,IAAI,CAACkK,UAAU,CAACgG,SAAS,CAAC5E,SAAS,CAAC,CAC9CtL,IAAI,CAACkK,UAAU,CAACE,WAAW,CAACG,MAAM,CAACE,IAAI,CACxC;QACD,IAAI3W,aAAa,CAACokB,GAAG,CAAC,IAAIC,KAAK,CAACD,GAAG,CAAC,EAAE;UACpC;QACF;MACF;MACA,IAAIjP,OAAO,KAAK,KAAK,IAAIY,MAAM,CAACuO,OAAO,CAACpY,IAAI,CAACqI,KAAK,CAAC,KAAK,CAAC,CAAC,IAC3DY,OAAO,KAAK7K,SAAS,IAAI4B,IAAI,CAACqI,KAAK,KAAKjK,SAAU,EAAE;QACjDyL,MAAM,CAAC/I,IAAI,CAACd,IAAI,CAACqI,KAAK,CAAC;MACzB;MACA,IAAIrI,IAAI,CAACmI,KAAK,KAAK8P,IAAI,EAAE;QACvB;MACF;IACF;IACA,IAAI,CAACpO,MAAM,CAAC/J,MAAM,EAAE;MAClB+J,MAAM,CAAC/I,IAAI,CAAC1C,SAAS,CAAC;IACxB;IACA,OAAOyL,MAAM;EACf;EACAwO,cAAcA,CAAClQ,KAAK,EAAE;IACpB,OAAO,IAAI,CAAC6P,UAAU,CAAC5Z,SAAS,EAAE+J,KAAK,CAAC,CAACrI,MAAM;EACjD;EACAwY,cAAcA,CAAC7P,YAAY,EAAE1D,IAAI,EAAE;IACjC,MAAM8E,MAAM,GAAG,IAAI,CAACmO,UAAU,CAACvP,YAAY,CAAC;IAC5C,MAAMN,KAAK,GAAIpD,IAAI,KAAK3G,SAAS,GAC7ByL,MAAM,CAACuO,OAAO,CAACrT,IAAI,CAAC,GACpB,CAAC,CAAC;IACN,OAAQoD,KAAK,KAAK,CAAC,CAAC,GAChB0B,MAAM,CAAC/J,MAAM,GAAG,CAAC,GACjBqI,KAAK;EACX;EACAmP,SAASA,CAAA,EAAG;IACV,MAAMjY,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAM8C,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAAM;IAC1B,MAAMwL,MAAM,GAAG,EAAE;IACjB,IAAIrjB,CAAC,EAAEyV,IAAI;IACX,KAAKzV,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGc,IAAI,CAACJ,IAAI,CAAC9I,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAClDqjB,MAAM,CAAChV,IAAI,CAACwJ,MAAM,CAAC4K,gBAAgB,CAAC7V,EAAE,CAAC6Q,SAAS,CAACzd,CAAC,CAAC,CAAC6X,MAAM,CAACG,IAAI,CAAC,EAAEhY,CAAC,CAAC,CAAC;IACvE;IACA,MAAMgjB,YAAY,GAAGtO,IAAI,CAACsO,YAAY;IACtC,MAAMvW,GAAG,GAAGuW,YAAY,IAAIZ,oBAAoB,CAACvK,MAAM,CAAC;IACxD,OAAO;MACLpL,GAAG;MACH4W,MAAM;MACN3W,KAAK,EAAEmL,MAAM,CAACiO,WAAW;MACzBlR,GAAG,EAAEiD,MAAM,CAACkO,SAAS;MACrBjD,UAAU,EAAElW,EAAE,CAACgZ,cAAc,CAAC,CAAC;MAC/BpR,KAAK,EAAEqD,MAAM;MACbmO,OAAO,EAAEtR,IAAI,CAACsR,OAAO;MACrB/C,KAAK,EAAED,YAAY,GAAG,CAAC,GAAGtO,IAAI,CAACwO,kBAAkB,GAAGxO,IAAI,CAACyO;IAC3D,CAAC;EACH;EACA8B,wBAAwBA,CAACvP,KAAK,EAAE;IAC9B,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM;MAACkL,MAAM;MAAEuC;IAAQ,CAAC,GAAGzN,EAAE,CAAC+K,WAAW;IACzC,MAAM;MAAC8M,IAAI,EAAEwB,SAAS;MAAEC;IAAY,CAAC,GAAGtZ,EAAE,CAAC6G,OAAO;IAClD,MAAMiE,MAAM,GAAG9K,EAAE,CAAC6Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,MAAMyO,MAAM,GAAGzM,MAAM,CAACqM,OAAO;IAC7B,MAAMoC,QAAQ,GAAGjC,UAAU,CAACC,MAAM,CAAC;IACnC,IAAIjQ,KAAK,GAAGwD,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC;IAC/B,IAAItL,KAAK,GAAG,CAAC;IACb,IAAIW,MAAM,GAAGgN,QAAQ,GAAGzN,EAAE,CAAC+I,UAAU,CAACmC,MAAM,EAAEJ,MAAM,EAAE2C,QAAQ,CAAC,GAAGnG,KAAK;IACvE,IAAI8Q,IAAI,EAAE7Q,IAAI;IACd,IAAI9G,MAAM,KAAK6G,KAAK,EAAE;MACpBxH,KAAK,GAAGW,MAAM,GAAG6G,KAAK;MACtB7G,MAAM,GAAG6G,KAAK;IAChB;IACA,IAAIiS,QAAQ,EAAE;MACZjS,KAAK,GAAGiQ,MAAM,CAACN,QAAQ;MACvBxW,MAAM,GAAG8W,MAAM,CAACL,MAAM,GAAGK,MAAM,CAACN,QAAQ;MACxC,IAAI3P,KAAK,KAAK,CAAC,IAAI/S,IAAI,CAAC+S,KAAK,CAAC,KAAK/S,IAAI,CAACgjB,MAAM,CAACL,MAAM,CAAC,EAAE;QACtDpX,KAAK,GAAG,CAAC;MACX;MACAA,KAAK,IAAIwH,KAAK;IAChB;IACA,MAAMyP,UAAU,GAAG,CAACtiB,aAAa,CAAC4kB,SAAS,CAAC,IAAI,CAACE,QAAQ,GAAGF,SAAS,GAAGvZ,KAAK;IAC7E,IAAI+X,IAAI,GAAG3M,MAAM,CAAC2K,gBAAgB,CAACkB,UAAU,CAAC;IAC9C,IAAI,IAAI,CAAC9X,KAAK,CAACua,iBAAiB,CAAC1Q,KAAK,CAAC,EAAE;MACvCsP,IAAI,GAAGlN,MAAM,CAAC2K,gBAAgB,CAAC/V,KAAK,GAAGW,MAAM,CAAC;IAChD,CAAC,MAAM;MACL2X,IAAI,GAAGP,IAAI;IACb;IACAtQ,IAAI,GAAG6Q,IAAI,GAAGP,IAAI;IAClB,IAAIyB,YAAY,KAAKva,SAAS,IAAIa,IAAI,CAACgW,GAAG,CAACrO,IAAI,CAAC,GAAG+R,YAAY,EAAE;MAC/D/R,IAAI,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC+R,YAAY,GAAGA,YAAY;MAC9C,IAAIhS,KAAK,KAAK,CAAC,EAAE;QACfuQ,IAAI,IAAItQ,IAAI,GAAG,CAAC;MAClB;MACA6Q,IAAI,GAAGP,IAAI,GAAGtQ,IAAI;IACpB;IACA,MAAMkS,UAAU,GAAGJ,SAAS,IAAI,CAAC;IACjC,IAAIxB,IAAI,KAAK3M,MAAM,CAAC2K,gBAAgB,CAAC4D,UAAU,CAAC,EAAE;MAChD,MAAMC,QAAQ,GAAGxO,MAAM,CAACyO,oBAAoB,CAACF,UAAU,CAAC,GAAG,CAAC;MAC5D,IAAIlS,IAAI,GAAG,CAAC,EAAE;QACZsQ,IAAI,IAAI6B,QAAQ;QAChBnS,IAAI,IAAImS,QAAQ;MAClB,CAAC,MAAM,IAAInS,IAAI,GAAG,CAAC,EAAE;QACnBsQ,IAAI,IAAI6B,QAAQ;QAChBnS,IAAI,IAAImS,QAAQ;MAClB;IACF;IACA,OAAO;MACLnS,IAAI;MACJsQ,IAAI;MACJO,IAAI;MACJI,MAAM,EAAEJ,IAAI,GAAG7Q,IAAI,GAAG;IACxB,CAAC;EACH;EACAgR,wBAAwBA,CAACzP,KAAK,EAAEmN,KAAK,EAAE;IACrC,MAAMjW,EAAE,GAAG,IAAI;IACf,MAAM4H,KAAK,GAAGqO,KAAK,CAACrO,KAAK;IACzB,MAAMf,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAM+S,eAAe,GAAGjmB,cAAc,CAACkT,OAAO,CAAC+S,eAAe,EAAEC,QAAQ,CAAC;IACzE,IAAIrB,MAAM,EAAEjR,IAAI;IAChB,IAAI0O,KAAK,CAACmD,OAAO,EAAE;MACjB,MAAMlD,UAAU,GAAGrP,OAAO,CAACiT,QAAQ,GAAG9Z,EAAE,CAACgZ,cAAc,CAAClQ,KAAK,CAAC,GAAGmN,KAAK,CAACC,UAAU;MACjF,MAAMlF,KAAK,GAAGnK,OAAO,CAACuP,YAAY,KAAK,MAAM,GACzCM,yBAAyB,CAAC5N,KAAK,EAAEmN,KAAK,EAAEpP,OAAO,EAAEqP,UAAU,CAAC,GAC5DF,wBAAwB,CAAClN,KAAK,EAAEmN,KAAK,EAAEpP,OAAO,EAAEqP,UAAU,CAAC;MAC/D,MAAM6D,UAAU,GAAG/Z,EAAE,CAACiZ,cAAc,CAACjZ,EAAE,CAAC8I,KAAK,EAAE9I,EAAE,CAAC+K,WAAW,CAAC/B,KAAK,CAAC;MACpEwP,MAAM,GAAGxH,KAAK,CAAClR,KAAK,GAAIkR,KAAK,CAACwF,KAAK,GAAGuD,UAAW,GAAI/I,KAAK,CAACwF,KAAK,GAAG,CAAE;MACrEjP,IAAI,GAAG3H,IAAI,CAACC,GAAG,CAAC+Z,eAAe,EAAE5I,KAAK,CAACwF,KAAK,GAAGxF,KAAK,CAACqF,KAAK,CAAC;IAC7D,CAAC,MAAM;MACLmC,MAAM,GAAG5Q,KAAK,CAACiO,gBAAgB,CAAC7V,EAAE,CAAC6Q,SAAS,CAAC/H,KAAK,CAAC,CAAClB,KAAK,CAACwD,IAAI,CAAC,EAAEtC,KAAK,CAAC;MACvEvB,IAAI,GAAG3H,IAAI,CAACC,GAAG,CAAC+Z,eAAe,EAAE3D,KAAK,CAACpW,GAAG,GAAGoW,KAAK,CAACI,KAAK,CAAC;IAC3D;IACA,OAAO;MACLwB,IAAI,EAAEW,MAAM,GAAGjR,IAAI,GAAG,CAAC;MACvB6Q,IAAI,EAAEI,MAAM,GAAGjR,IAAI,GAAG,CAAC;MACvBiR,MAAM;MACNjR;IACF,CAAC;EACH;EACA7G,IAAIA,CAAA,EAAG;IACL,MAAMV,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMG,MAAM,GAAGvB,IAAI,CAACuB,MAAM;IAC1B,MAAM8O,KAAK,GAAGrQ,IAAI,CAACJ,IAAI;IACvB,MAAMV,IAAI,GAAGmR,KAAK,CAACvZ,MAAM;IACzB,IAAIrN,CAAC,GAAG,CAAC;IACTuB,QAAQ,CAACsK,KAAK,CAAC0N,GAAG,EAAE1N,KAAK,CAACiT,SAAS,CAAC;IACpC,OAAO9e,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACpB,IAAI4M,EAAE,CAAC6Q,SAAS,CAACzd,CAAC,CAAC,CAAC8X,MAAM,CAACE,IAAI,CAAC,KAAK,IAAI,EAAE;QACzC4O,KAAK,CAAC5mB,CAAC,CAAC,CAACsN,IAAI,CAACV,EAAE,CAAC0M,IAAI,CAAC;MACxB;IACF;IACA7X,UAAU,CAACoK,KAAK,CAAC0N,GAAG,CAAC;EACvB;AACF;AACA6K,aAAa,CAACxN,EAAE,GAAG,KAAK;AACxBwN,aAAa,CAAC/jB,QAAQ,GAAG;EACvB0b,kBAAkB,EAAE,KAAK;EACzBqD,eAAe,EAAE,KAAK;EACtB8D,kBAAkB,EAAE,GAAG;EACvBC,aAAa,EAAE,GAAG;EAClB6C,OAAO,EAAE,IAAI;EACbtT,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QAAQ;MACduG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;IAClD;EACF;AACF,CAAC;AACD6R,aAAa,CAACre,SAAS,GAAG;EACxB8gB,WAAW,EAAE;IACX9Q,IAAI,EAAE;EACR,CAAC;EACDqC,MAAM,EAAE;IACN0O,OAAO,EAAE;MACP9a,IAAI,EAAE,UAAU;MAChB+a,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE;QACJD,MAAM,EAAE;MACV;IACF,CAAC;IACDE,OAAO,EAAE;MACPjb,IAAI,EAAE,QAAQ;MACdkb,WAAW,EAAE;IACf;EACF;AACF,CAAC;AAED,MAAMC,gBAAgB,SAAS9N,iBAAiB,CAAC;EAC/Cc,UAAUA,CAAA,EAAG;IACX,IAAI,CAACF,mBAAmB,GAAG,IAAI;IAC/B,KAAK,CAACE,UAAU,CAAC,CAAC;EACpB;EACA8C,eAAeA,CAAC1G,IAAI,EAAEJ,IAAI,EAAEzJ,KAAK,EAAEkQ,KAAK,EAAE;IACxC,MAAM;MAAC9H,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAM;MAACgH,QAAQ,GAAG,GAAG;MAAEC,QAAQ,GAAG;IAAG,CAAC,GAAG,IAAI,CAAC7D,QAAQ;IACtD,MAAMjC,MAAM,GAAG,EAAE;IACjB,IAAI1X,CAAC,EAAEyV,IAAI,EAAElI,IAAI;IACjB,KAAKvN,CAAC,GAAG0M,KAAK,EAAE+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACnDuN,IAAI,GAAG4I,IAAI,CAACnW,CAAC,CAAC;MACd0X,MAAM,CAACrJ,IAAI,CAAC;QACVvL,CAAC,EAAEgS,MAAM,CAAC6H,KAAK,CAAC9b,gBAAgB,CAAC0M,IAAI,EAAEgQ,QAAQ,CAAC,EAAEvd,CAAC,CAAC;QACpDgD,CAAC,EAAE+R,MAAM,CAAC4H,KAAK,CAAC9b,gBAAgB,CAAC0M,IAAI,EAAEiQ,QAAQ,CAAC,EAAExd,CAAC,CAAC;QACpD+jB,OAAO,EAAExW,IAAI,IAAIA,IAAI,CAAC/N,CAAC,IAAI,CAAC+N,IAAI,CAAC/N;MACnC,CAAC,CAAC;IACJ;IACA,OAAOkY,MAAM;EACf;EACA4G,cAAcA,CAAA,EAAG;IACf,MAAM;MAACnI,IAAI;MAAE6C;IAAO,CAAC,GAAG,IAAI,CAACrB,WAAW;IACxC,IAAIhJ,GAAG,GAAG,CAAC;IACX,KAAK,IAAI3O,CAAC,GAAGmW,IAAI,CAAC9I,MAAM,GAAG,CAAC,EAAErN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MACzC2O,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACA,GAAG,EAAEwH,IAAI,CAACnW,CAAC,CAAC,CAACmU,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE6E,OAAO,CAAChZ,CAAC,CAAC,CAAC+jB,OAAO,CAAC;IAC7D;IACA,OAAOpV,GAAG,GAAG,CAAC,IAAIA,GAAG;EACvB;EACA4P,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAM;MAAC7C,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAMmB,MAAM,GAAG9K,EAAE,CAAC6Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,MAAM5S,CAAC,GAAGgS,MAAM,CAAC2J,gBAAgB,CAAC/G,MAAM,CAAC5U,CAAC,CAAC;IAC3C,MAAME,CAAC,GAAG+R,MAAM,CAAC0J,gBAAgB,CAAC/G,MAAM,CAAC1U,CAAC,CAAC;IAC3C,MAAMxD,CAAC,GAAGkY,MAAM,CAACqM,OAAO;IACxB,OAAO;MACLvF,KAAK,EAAEjI,IAAI,CAACiI,KAAK;MACjBtK,KAAK,EAAE,GAAG,GAAGpR,CAAC,GAAG,IAAI,GAAGE,CAAC,IAAIxD,CAAC,GAAG,IAAI,GAAGA,CAAC,GAAG,EAAE,CAAC,GAAG;IACpD,CAAC;EACH;EACA0R,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAMwa,MAAM,GAAGxa,EAAE,CAAC+K,WAAW,CAACxB,IAAI;IAClCvJ,EAAE,CAACuU,cAAc,CAACiG,MAAM,EAAE,CAAC,EAAEA,MAAM,CAAC/Z,MAAM,EAAE0I,IAAI,CAAC;EACnD;EACAoL,cAAcA,CAACiG,MAAM,EAAE1a,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,EAAE;IACzC,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAM;MAACjB,MAAM;MAAEC;IAAM,CAAC,GAAGnI,EAAE,CAAC+K,WAAW;IACvC,MAAMmN,SAAS,GAAGlY,EAAE,CAACqS,yBAAyB,CAACvS,KAAK,EAAEqJ,IAAI,CAAC;IAC3D,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAgB,CAAC4E,SAAS,CAAC;IACpD,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAc,CAACpK,IAAI,EAAEqK,aAAa,CAAC;IAC7D,KAAK,IAAIpgB,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,EAAE,EAAE;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAC,CAAC;MACvB,MAAM0X,MAAM,GAAG,CAACiE,KAAK,IAAI/O,EAAE,CAAC6Q,SAAS,CAACzd,CAAC,CAAC;MACxC,MAAM8C,CAAC,GAAG6Y,KAAK,GAAG7G,MAAM,CAACwS,kBAAkB,CAAC,GAAG,CAAC,GAAGxS,MAAM,CAAC2N,gBAAgB,CAAC/K,MAAM,CAAC5U,CAAC,CAAC;MACpF,MAAME,CAAC,GAAG2Y,KAAK,GAAG5G,MAAM,CAAC2P,YAAY,CAAC,CAAC,GAAG3P,MAAM,CAAC0N,gBAAgB,CAAC/K,MAAM,CAAC1U,CAAC,CAAC;MAC3E,MAAMuP,UAAU,GAAG;QACjBzP,CAAC;QACDE,CAAC;QACDukB,IAAI,EAAE7B,KAAK,CAAC5iB,CAAC,CAAC,IAAI4iB,KAAK,CAAC1iB,CAAC;MAC3B,CAAC;MACD,IAAImd,cAAc,EAAE;QAClB5N,UAAU,CAACkB,OAAO,GAAG7G,EAAE,CAACqS,yBAAyB,CAACjf,CAAC,EAAE+V,IAAI,CAAC;QAC1D,IAAI4F,KAAK,EAAE;UACTpJ,UAAU,CAACkB,OAAO,CAAC+T,MAAM,GAAG,CAAC;QAC/B;MACF;MACA5a,EAAE,CAAC0T,aAAa,CAAC+G,KAAK,EAAErnB,CAAC,EAAEuS,UAAU,EAAEwD,IAAI,CAAC;IAC9C;IACAnJ,EAAE,CAAC2T,mBAAmB,CAACH,aAAa,EAAErK,IAAI,EAAE+O,SAAS,CAAC;EACxD;EACA7F,yBAAyBA,CAACvJ,KAAK,EAAEK,IAAI,EAAE;IACrC,MAAM2B,MAAM,GAAG,IAAI,CAAC+F,SAAS,CAAC/H,KAAK,CAAC;IACpC,IAAInC,MAAM,GAAG,KAAK,CAAC0L,yBAAyB,CAACvJ,KAAK,EAAEK,IAAI,CAAC;IACzD,IAAIxC,MAAM,CAACK,OAAO,EAAE;MAClBL,MAAM,GAAGxB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEb,MAAM,EAAE;QAACK,OAAO,EAAE;MAAK,CAAC,CAAC;IACtD;IACA,MAAM4T,MAAM,GAAGjU,MAAM,CAACiU,MAAM;IAC5B,IAAIzR,IAAI,KAAK,QAAQ,EAAE;MACrBxC,MAAM,CAACiU,MAAM,GAAG,CAAC;IACnB;IACAjU,MAAM,CAACiU,MAAM,IAAIjnB,cAAc,CAACmX,MAAM,IAAIA,MAAM,CAACqM,OAAO,EAAEyD,MAAM,CAAC;IACjE,OAAOjU,MAAM;EACf;AACF;AACA4T,gBAAgB,CAACvQ,EAAE,GAAG,QAAQ;AAC9BuQ,gBAAgB,CAAC9mB,QAAQ,GAAG;EAC1B0b,kBAAkB,EAAE,KAAK;EACzBqD,eAAe,EAAE,OAAO;EACxB1M,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QAAQ;MACduG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ;IAChD;EACF;AACF,CAAC;AACD4U,gBAAgB,CAACphB,SAAS,GAAG;EAC3BqS,MAAM,EAAE;IACNtV,CAAC,EAAE;MACDkJ,IAAI,EAAE;IACR,CAAC;IACDhJ,CAAC,EAAE;MACDgJ,IAAI,EAAE;IACR;EACF,CAAC;EACDyb,OAAO,EAAE;IACPC,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX;MACF;IACF;EACF;AACF,CAAC;AAED,SAASC,iBAAiBA,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAE;EAC1D,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIL,aAAa,GAAG3lB,GAAG,EAAE;IACvB,MAAMimB,UAAU,GAAGP,QAAQ;IAC3B,MAAMQ,QAAQ,GAAGD,UAAU,GAAGN,aAAa;IAC3C,MAAMQ,MAAM,GAAG9b,IAAI,CAAC+b,GAAG,CAACH,UAAU,CAAC;IACnC,MAAMI,MAAM,GAAGhc,IAAI,CAACic,GAAG,CAACL,UAAU,CAAC;IACnC,MAAMM,IAAI,GAAGlc,IAAI,CAAC+b,GAAG,CAACF,QAAQ,CAAC;IAC/B,MAAMM,IAAI,GAAGnc,IAAI,CAACic,GAAG,CAACJ,QAAQ,CAAC;IAC/B,MAAMO,OAAO,GAAGA,CAACC,KAAK,EAAEnpB,CAAC,EAAEQ,CAAC,KAAKqC,aAAa,CAACsmB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC,GAAG,CAAC,GAAG7b,IAAI,CAACmC,GAAG,CAACjP,CAAC,EAAEA,CAAC,GAAGqoB,MAAM,EAAE7nB,CAAC,EAAEA,CAAC,GAAG6nB,MAAM,CAAC;IACxH,MAAMe,OAAO,GAAGA,CAACD,KAAK,EAAEnpB,CAAC,EAAEQ,CAAC,KAAKqC,aAAa,CAACsmB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG7b,IAAI,CAACC,GAAG,CAAC/M,CAAC,EAAEA,CAAC,GAAGqoB,MAAM,EAAE7nB,CAAC,EAAEA,CAAC,GAAG6nB,MAAM,CAAC;IACzH,MAAMgB,IAAI,GAAGH,OAAO,CAAC,CAAC,EAAEN,MAAM,EAAEI,IAAI,CAAC;IACrC,MAAMM,IAAI,GAAGJ,OAAO,CAACnmB,OAAO,EAAE+lB,MAAM,EAAEG,IAAI,CAAC;IAC3C,MAAMM,IAAI,GAAGH,OAAO,CAACnmB,EAAE,EAAE2lB,MAAM,EAAEI,IAAI,CAAC;IACtC,MAAMQ,IAAI,GAAGJ,OAAO,CAACnmB,EAAE,GAAGF,OAAO,EAAE+lB,MAAM,EAAEG,IAAI,CAAC;IAChDX,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;IAC5Bd,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;EAC9B;EACA,OAAO;IAAClB,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAO,CAAC;AAC3C;AACA,MAAMgB,kBAAkB,SAAS9P,iBAAiB,CAAC;EACjDhO,WAAWA,CAACQ,KAAK,EAAEmK,YAAY,EAAE;IAC/B,KAAK,CAACnK,KAAK,EAAEmK,YAAY,CAAC;IAC1B,IAAI,CAACiE,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACmP,WAAW,GAAGzd,SAAS;IAC5B,IAAI,CAAC0d,WAAW,GAAG1d,SAAS;IAC5B,IAAI,CAACuc,OAAO,GAAGvc,SAAS;IACxB,IAAI,CAACwc,OAAO,GAAGxc,SAAS;EAC1B;EACAyO,UAAUA,CAAA,EAAG,CAAC;EACduC,KAAKA,CAACjQ,KAAK,EAAEkQ,KAAK,EAAE;IAClB,MAAMzG,IAAI,GAAG,IAAI,CAACqE,UAAU,CAAC,CAAC,CAACrE,IAAI;IACnC,MAAMI,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,IAAI3X,CAAC,EAAEyV,IAAI;IACX,KAAKzV,CAAC,GAAG0M,KAAK,EAAE+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACnDuW,IAAI,CAACyC,OAAO,CAAChZ,CAAC,CAAC,GAAG,CAACmW,IAAI,CAACnW,CAAC,CAAC;IAC5B;EACF;EACAspB,YAAYA,CAAA,EAAG;IACb,OAAOznB,SAAS,CAAC,IAAI,CAAC4R,OAAO,CAACoU,QAAQ,GAAG,EAAE,CAAC;EAC9C;EACA0B,iBAAiBA,CAAA,EAAG;IAClB,OAAO1nB,SAAS,CAAC,IAAI,CAAC4R,OAAO,CAACqU,aAAa,CAAC;EAC9C;EACA0B,mBAAmBA,CAAA,EAAG;IACpB,IAAI/c,GAAG,GAAGtK,GAAG;IACb,IAAIwM,GAAG,GAAG,CAACxM,GAAG;IACd,MAAMyK,EAAE,GAAG,IAAI;IACf,KAAK,IAAI5M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4M,EAAE,CAACf,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAAClO,MAAM,EAAE,EAAErN,CAAC,EAAE;MACtD,IAAI4M,EAAE,CAACf,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC,EAAE;QAChC,MAAMyX,UAAU,GAAG7K,EAAE,CAACf,KAAK,CAAC2P,cAAc,CAACxb,CAAC,CAAC,CAACyX,UAAU;QACxD,MAAMoQ,QAAQ,GAAGpQ,UAAU,CAAC6R,YAAY,CAAC,CAAC;QAC1C,MAAMxB,aAAa,GAAGrQ,UAAU,CAAC8R,iBAAiB,CAAC,CAAC;QACpD9c,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEob,QAAQ,CAAC;QAC7BlZ,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACA,GAAG,EAAEkZ,QAAQ,GAAGC,aAAa,CAAC;MAC/C;IACF;IACA,OAAO;MACLD,QAAQ,EAAEpb,GAAG;MACbqb,aAAa,EAAEnZ,GAAG,GAAGlC;IACvB,CAAC;EACH;EACAyE,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM;MAACiT;IAAS,CAAC,GAAGjT,KAAK;IACzB,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAM+R,IAAI,GAAGnT,IAAI,CAACJ,IAAI;IACtB,MAAMwT,OAAO,GAAG/c,EAAE,CAACgd,iBAAiB,CAAC,CAAC,GAAGhd,EAAE,CAACid,YAAY,CAACH,IAAI,CAAC;IAC9D,MAAMI,OAAO,GAAGtd,IAAI,CAACmC,GAAG,CAAC,CAACnC,IAAI,CAACC,GAAG,CAACqS,SAAS,CAACwG,KAAK,EAAExG,SAAS,CAACuG,MAAM,CAAC,GAAGsE,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACxF,MAAM5B,MAAM,GAAGvb,IAAI,CAACC,GAAG,CAAC1K,YAAY,CAAC6K,EAAE,CAAC6G,OAAO,CAACsU,MAAM,EAAE+B,OAAO,CAAC,EAAE,CAAC,CAAC;IACpE,MAAMC,WAAW,GAAGnd,EAAE,CAACod,cAAc,CAACpd,EAAE,CAAC8I,KAAK,CAAC;IAC/C,MAAM;MAACoS,aAAa;MAAED;IAAQ,CAAC,GAAGjb,EAAE,CAAC4c,mBAAmB,CAAC,CAAC;IAC1D,MAAM;MAACxB,MAAM;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAGP,iBAAiB,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,CAAC;IAC7F,MAAMkC,QAAQ,GAAG,CAACnL,SAAS,CAACwG,KAAK,GAAGqE,OAAO,IAAI3B,MAAM;IACrD,MAAMkC,SAAS,GAAG,CAACpL,SAAS,CAACuG,MAAM,GAAGsE,OAAO,IAAI1B,MAAM;IACvD,MAAMkC,SAAS,GAAG3d,IAAI,CAACmC,GAAG,CAACnC,IAAI,CAACC,GAAG,CAACwd,QAAQ,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChE,MAAMb,WAAW,GAAGpnB,WAAW,CAAC2K,EAAE,CAAC6G,OAAO,CAAC+T,MAAM,EAAE2C,SAAS,CAAC;IAC7D,MAAMf,WAAW,GAAG5c,IAAI,CAACmC,GAAG,CAAC0a,WAAW,GAAGtB,MAAM,EAAE,CAAC,CAAC;IACrD,MAAMqC,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAW,IAAIxc,EAAE,CAACyd,6BAA6B,CAAC,CAAC;IACrFzd,EAAE,CAACsb,OAAO,GAAGA,OAAO,GAAGmB,WAAW;IAClCzc,EAAE,CAACub,OAAO,GAAGA,OAAO,GAAGkB,WAAW;IAClC9S,IAAI,CAAC+T,KAAK,GAAG1d,EAAE,CAAC2d,cAAc,CAAC,CAAC;IAChC3d,EAAE,CAACyc,WAAW,GAAGA,WAAW,GAAGe,YAAY,GAAGxd,EAAE,CAAC4d,oBAAoB,CAAC5d,EAAE,CAAC8I,KAAK,CAAC;IAC/E9I,EAAE,CAACwc,WAAW,GAAG5c,IAAI,CAACmC,GAAG,CAAC/B,EAAE,CAACyc,WAAW,GAAGe,YAAY,GAAGL,WAAW,EAAE,CAAC,CAAC;IACzEnd,EAAE,CAACuU,cAAc,CAACuI,IAAI,EAAE,CAAC,EAAEA,IAAI,CAACrc,MAAM,EAAE0I,IAAI,CAAC;EAC/C;EACA0U,cAAcA,CAACzqB,CAAC,EAAE2b,KAAK,EAAE;IACvB,MAAM/O,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAM8C,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMmQ,aAAa,GAAGlb,EAAE,CAAC2c,iBAAiB,CAAC,CAAC;IAC5C,IAAK5N,KAAK,IAAIjH,IAAI,CAACzC,SAAS,CAACyY,aAAa,IAAK,CAAC,IAAI,CAAC7e,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC,IAAIuW,IAAI,CAACyC,OAAO,CAAChZ,CAAC,CAAC,KAAK,IAAI,EAAE;MAC3G,OAAO,CAAC;IACV;IACA,OAAO4M,EAAE,CAAC+d,sBAAsB,CAACpU,IAAI,CAACyC,OAAO,CAAChZ,CAAC,CAAC,GAAG8nB,aAAa,GAAG3lB,GAAG,CAAC;EACzE;EACAgf,cAAcA,CAACuI,IAAI,EAAEhd,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,EAAE;IACvC,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAMlK,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMiT,SAAS,GAAGjT,KAAK,CAACiT,SAAS;IACjC,MAAMpK,IAAI,GAAG7I,KAAK,CAAC4H,OAAO;IAC1B,MAAMmX,aAAa,GAAGlW,IAAI,CAACzC,SAAS;IACpC,MAAM4Y,OAAO,GAAG,CAAC/L,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAC7J,KAAK,IAAI,CAAC;IACtD,MAAM6V,OAAO,GAAG,CAAChM,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC5J,MAAM,IAAI,CAAC;IACtD,MAAM6V,YAAY,GAAGpP,KAAK,IAAIiP,aAAa,CAACG,YAAY;IACxD,MAAM3B,WAAW,GAAG2B,YAAY,GAAG,CAAC,GAAGne,EAAE,CAACwc,WAAW;IACrD,MAAMC,WAAW,GAAG0B,YAAY,GAAG,CAAC,GAAGne,EAAE,CAACyc,WAAW;IACrD,MAAMvE,SAAS,GAAGlY,EAAE,CAACqS,yBAAyB,CAACvS,KAAK,EAAEqJ,IAAI,CAAC;IAC3D,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAgB,CAAC4E,SAAS,CAAC;IACpD,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAc,CAACpK,IAAI,EAAEqK,aAAa,CAAC;IAC7D,IAAIgI,UAAU,GAAGxb,EAAE,CAAC0c,YAAY,CAAC,CAAC;IAClC,IAAItpB,CAAC;IACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,KAAK,EAAE,EAAE1M,CAAC,EAAE;MAC1BooB,UAAU,IAAIxb,EAAE,CAAC6d,cAAc,CAACzqB,CAAC,EAAE2b,KAAK,CAAC;IAC3C;IACA,KAAK3b,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAK,EAAE,EAAE5c,CAAC,EAAE;MACtC,MAAM8nB,aAAa,GAAGlb,EAAE,CAAC6d,cAAc,CAACzqB,CAAC,EAAE2b,KAAK,CAAC;MACjD,MAAMqP,GAAG,GAAGtB,IAAI,CAAC1pB,CAAC,CAAC;MACnB,MAAMuS,UAAU,GAAG;QACjBzP,CAAC,EAAE+nB,OAAO,GAAGje,EAAE,CAACsb,OAAO;QACvBllB,CAAC,EAAE8nB,OAAO,GAAGle,EAAE,CAACub,OAAO;QACvBC,UAAU;QACVC,QAAQ,EAAED,UAAU,GAAGN,aAAa;QACpCA,aAAa;QACbuB,WAAW;QACXD;MACF,CAAC;MACD,IAAIjJ,cAAc,EAAE;QAClB5N,UAAU,CAACkB,OAAO,GAAG2M,aAAa,IAAIxT,EAAE,CAACqS,yBAAyB,CAACjf,CAAC,EAAE+V,IAAI,CAAC;MAC7E;MACAqS,UAAU,IAAIN,aAAa;MAC3Blb,EAAE,CAAC0T,aAAa,CAAC0K,GAAG,EAAEhrB,CAAC,EAAEuS,UAAU,EAAEwD,IAAI,CAAC;IAC5C;IACAnJ,EAAE,CAAC2T,mBAAmB,CAACH,aAAa,EAAErK,IAAI,EAAE+O,SAAS,CAAC;EACxD;EACAyF,cAAcA,CAAA,EAAG;IACf,MAAMhU,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,MAAMsT,QAAQ,GAAG1U,IAAI,CAACJ,IAAI;IAC1B,IAAImU,KAAK,GAAG,CAAC;IACb,IAAItqB,CAAC;IACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGirB,QAAQ,CAAC5d,MAAM,EAAErN,CAAC,EAAE,EAAE;MACpC,MAAMkU,KAAK,GAAGqC,IAAI,CAACyC,OAAO,CAAChZ,CAAC,CAAC;MAC7B,IAAIkU,KAAK,KAAK,IAAI,IAAI,CAACwR,KAAK,CAACxR,KAAK,CAAC,IAAI,IAAI,CAACrI,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC,EAAE;QACtEsqB,KAAK,IAAI9d,IAAI,CAACgW,GAAG,CAACtO,KAAK,CAAC;MAC1B;IACF;IACA,OAAOoW,KAAK;EACd;EACAK,sBAAsBA,CAACzW,KAAK,EAAE;IAC5B,MAAMoW,KAAK,GAAG,IAAI,CAAC3S,WAAW,CAAC2S,KAAK;IACpC,IAAIA,KAAK,GAAG,CAAC,IAAI,CAAC5E,KAAK,CAACxR,KAAK,CAAC,EAAE;MAC9B,OAAO/R,GAAG,IAAIqK,IAAI,CAACgW,GAAG,CAACtO,KAAK,CAAC,GAAGoW,KAAK,CAAC;IACxC;IACA,OAAO,CAAC;EACV;EACA/L,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAM9L,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMuR,MAAM,GAAGvR,KAAK,CAACsK,IAAI,CAACiH,MAAM,IAAI,EAAE;IACtC,MAAMlJ,KAAK,GAAG7R,YAAY,CAACkU,IAAI,CAACyC,OAAO,CAACtD,KAAK,CAAC,EAAE7J,KAAK,CAAC4H,OAAO,CAACyX,MAAM,CAAC;IACrE,OAAO;MACL1M,KAAK,EAAEpB,MAAM,CAAC1H,KAAK,CAAC,IAAI,EAAE;MAC1BxB;IACF,CAAC;EACH;EACA0V,iBAAiBA,CAACF,IAAI,EAAE;IACtB,MAAM9c,EAAE,GAAG,IAAI;IACf,IAAI+B,GAAG,GAAG,CAAC;IACX,MAAM9C,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,IAAI7L,CAAC,EAAEyV,IAAI,EAAEc,IAAI,EAAEkB,UAAU,EAAEhE,OAAO;IACtC,IAAI,CAACiW,IAAI,EAAE;MACT,KAAK1pB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG5J,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAAClO,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;QAC5D,IAAI6L,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC,EAAE;UAC7BuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAc,CAACxb,CAAC,CAAC;UAC9B0pB,IAAI,GAAGnT,IAAI,CAACJ,IAAI;UAChBsB,UAAU,GAAGlB,IAAI,CAACkB,UAAU;UAC5B,IAAIA,UAAU,KAAK7K,EAAE,EAAE;YACrB6K,UAAU,CAACxE,SAAS,CAAC,CAAC;UACxB;UACA;QACF;MACF;IACF;IACA,IAAI,CAACyW,IAAI,EAAE;MACT,OAAO,CAAC;IACV;IACA,KAAK1pB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGiU,IAAI,CAACrc,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC7CyT,OAAO,GAAGgE,UAAU,CAACwH,yBAAyB,CAACjf,CAAC,CAAC;MACjD,IAAIyT,OAAO,CAAC0X,WAAW,KAAK,OAAO,EAAE;QACnCxc,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACA,GAAG,EAAE8E,OAAO,CAAC2X,WAAW,IAAI,CAAC,EAAE3X,OAAO,CAAC4X,gBAAgB,IAAI,CAAC,CAAC;MAC9E;IACF;IACA,OAAO1c,GAAG;EACZ;EACAkb,YAAYA,CAACH,IAAI,EAAE;IACjB,IAAI/a,GAAG,GAAG,CAAC;IACX,KAAK,IAAI3O,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGiU,IAAI,CAACrc,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACjD,MAAMyT,OAAO,GAAG,IAAI,CAACwL,yBAAyB,CAACjf,CAAC,CAAC;MACjD2O,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACA,GAAG,EAAE8E,OAAO,CAACsT,MAAM,IAAI,CAAC,EAAEtT,OAAO,CAAC6X,WAAW,IAAI,CAAC,CAAC;IACpE;IACA,OAAO3c,GAAG;EACZ;EACA6b,oBAAoBA,CAACxU,YAAY,EAAE;IACjC,IAAIuV,gBAAgB,GAAG,CAAC;IACxB,KAAK,IAAIvrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgW,YAAY,EAAE,EAAEhW,CAAC,EAAE;MACrC,IAAI,IAAI,CAAC6L,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC,EAAE;QAClCurB,gBAAgB,IAAI,IAAI,CAACvB,cAAc,CAAChqB,CAAC,CAAC;MAC5C;IACF;IACA,OAAOurB,gBAAgB;EACzB;EACAvB,cAAcA,CAAChU,YAAY,EAAE;IAC3B,OAAOxJ,IAAI,CAACmC,GAAG,CAACpO,cAAc,CAAC,IAAI,CAACsL,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC,CAACwV,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACtF;EACAnB,6BAA6BA,CAAA,EAAG;IAC9B,OAAO,IAAI,CAACG,oBAAoB,CAAC,IAAI,CAAC3e,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAAClO,MAAM,CAAC,IAAI,CAAC;EACxE;AACF;AACA8b,kBAAkB,CAACvS,EAAE,GAAG,UAAU;AAClCuS,kBAAkB,CAAC9oB,QAAQ,GAAG;EAC5B0b,kBAAkB,EAAE,KAAK;EACzBqD,eAAe,EAAE,KAAK;EACtBnN,SAAS,EAAE;IACTyY,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDrY,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QAAQ;MACduG,UAAU,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa;IACzH;EACF,CAAC;EACDwV,MAAM,EAAE,KAAK;EACbF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE,MAAM;EACdxM,SAAS,EAAE;AACb,CAAC;AACDmO,kBAAkB,CAACpjB,SAAS,GAAG;EAC7B0lB,WAAW,EAAE,CAAC;EACdhE,OAAO,EAAE;IACPiE,MAAM,EAAE;MACNtO,MAAM,EAAE;QACNuO,cAAcA,CAAC9f,KAAK,EAAE;UACpB,MAAMsK,IAAI,GAAGtK,KAAK,CAACsK,IAAI;UACvB,IAAIA,IAAI,CAACiH,MAAM,CAAC/P,MAAM,IAAI8I,IAAI,CAACoF,QAAQ,CAAClO,MAAM,EAAE;YAC9C,OAAO8I,IAAI,CAACiH,MAAM,CAACwO,GAAG,CAAC,CAACpN,KAAK,EAAExe,CAAC,KAAK;cACnC,MAAMuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAc,CAAC,CAAC,CAAC;cACpC,MAAMqQ,KAAK,GAAGtV,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAAC/e,CAAC,CAAC;cACzC,OAAO;gBACL8rB,IAAI,EAAEtN,KAAK;gBACXuN,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACT,WAAW;gBAC5BgB,MAAM,EAAE,CAACvgB,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC;gBACnC0V,KAAK,EAAE1V;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDqsB,OAAOA,CAACzsB,CAAC,EAAE0sB,UAAU,EAAEZ,MAAM,EAAE;QAC7BA,MAAM,CAAC7f,KAAK,CAAC0gB,oBAAoB,CAACD,UAAU,CAAC5W,KAAK,CAAC;QACnDgW,MAAM,CAAC7f,KAAK,CAACqF,MAAM,CAAC,CAAC;MACvB;IACF,CAAC;IACDwW,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACDnJ,KAAKA,CAACgO,WAAW,EAAE;UACjB,IAAIC,SAAS,GAAGD,WAAW,CAAChO,KAAK;UACjC,MAAMtK,KAAK,GAAG,IAAI,GAAGsY,WAAW,CAACE,cAAc;UAC/C,IAAIvsB,OAAO,CAACssB,SAAS,CAAC,EAAE;YACtBA,SAAS,GAAGA,SAAS,CAACE,KAAK,CAAC,CAAC;YAC7BF,SAAS,CAAC,CAAC,CAAC,IAAIvY,KAAK;UACvB,CAAC,MAAM;YACLuY,SAAS,IAAIvY,KAAK;UACpB;UACA,OAAOuY,SAAS;QAClB;MACF;IACF;EACF;AACF,CAAC;AAED,MAAMG,cAAc,SAASvT,iBAAiB,CAAC;EAC7Cc,UAAUA,CAAA,EAAG;IACX,IAAI,CAACF,mBAAmB,GAAG,IAAI;IAC/B,KAAK,CAACE,UAAU,CAAC,CAAC;EACpB;EACAjJ,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAM;MAACe,OAAO,EAAEmU,IAAI;MAAE1W,IAAI,EAAEiR,MAAM,GAAG,EAAE;MAAE0F;IAAQ,CAAC,GAAGvW,IAAI;IACzD,MAAMwW,kBAAkB,GAAGngB,EAAE,CAACf,KAAK,CAACwU,mBAAmB;IACvD,IAAI;MAAC3T,KAAK;MAAEkQ;IAAK,CAAC,GAAGoQ,+BAA+B,CAACzW,IAAI,EAAE6Q,MAAM,EAAE2F,kBAAkB,CAAC;IACtFngB,EAAE,CAACmN,UAAU,GAAGrN,KAAK;IACrBE,EAAE,CAACoN,UAAU,GAAG4C,KAAK;IACrB,IAAIqQ,kBAAkB,CAAC1W,IAAI,CAAC,EAAE;MAC5B7J,KAAK,GAAG,CAAC;MACTkQ,KAAK,GAAGwK,MAAM,CAAC/Z,MAAM;IACvB;IACAwf,IAAI,CAACK,UAAU,GAAG,CAAC,CAACJ,QAAQ,CAACI,UAAU;IACvCL,IAAI,CAACzF,MAAM,GAAGA,MAAM;IACpB,IAAIrR,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMtC,OAAO,GAAG7G,EAAE,CAACoS,4BAA4B,CAACjJ,IAAI,CAAC;MACrD,IAAI,CAACnJ,EAAE,CAAC6G,OAAO,CAAC0Z,QAAQ,EAAE;QACxB1Z,OAAO,CAAC2X,WAAW,GAAG,CAAC;MACzB;MACAxe,EAAE,CAAC0T,aAAa,CAACuM,IAAI,EAAElhB,SAAS,EAAE;QAChCyhB,QAAQ,EAAE,CAACL,kBAAkB;QAC7BtZ;MACF,CAAC,EAAEsC,IAAI,CAAC;IACV;IACAnJ,EAAE,CAACuU,cAAc,CAACiG,MAAM,EAAE1a,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,CAAC;EAC/C;EACAoL,cAAcA,CAACiG,MAAM,EAAE1a,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,EAAE;IACzC,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAM;MAACjB,MAAM;MAAEC,MAAM;MAAEsF;IAAQ,CAAC,GAAGzN,EAAE,CAAC+K,WAAW;IACjD,MAAMmN,SAAS,GAAGlY,EAAE,CAACqS,yBAAyB,CAACvS,KAAK,EAAEqJ,IAAI,CAAC;IAC3D,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAgB,CAAC4E,SAAS,CAAC;IACpD,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAc,CAACpK,IAAI,EAAEqK,aAAa,CAAC;IAC7D,MAAMiN,QAAQ,GAAGzgB,EAAE,CAAC6G,OAAO,CAAC4Z,QAAQ;IACpC,MAAMC,YAAY,GAAGzqB,QAAQ,CAACwqB,QAAQ,CAAC,GAAGA,QAAQ,GAAGrW,MAAM,CAACE,iBAAiB;IAC7E,MAAMqW,YAAY,GAAG3gB,EAAE,CAACf,KAAK,CAACwU,mBAAmB,IAAI1E,KAAK,IAAI5F,IAAI,KAAK,MAAM;IAC7E,IAAIyX,UAAU,GAAG9gB,KAAK,GAAG,CAAC,IAAIE,EAAE,CAAC6Q,SAAS,CAAC/Q,KAAK,GAAG,CAAC,CAAC;IACrD,KAAK,IAAI1M,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAK,EAAE,EAAE5c,CAAC,EAAE;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAC,CAAC;MACvB,MAAM0X,MAAM,GAAG9K,EAAE,CAAC6Q,SAAS,CAACzd,CAAC,CAAC;MAC9B,MAAMuS,UAAU,GAAGgb,YAAY,GAAGlG,KAAK,GAAG,CAAC,CAAC;MAC5C,MAAMvkB,CAAC,GAAGyP,UAAU,CAACzP,CAAC,GAAGgS,MAAM,CAAC2N,gBAAgB,CAAC/K,MAAM,CAAC5U,CAAC,EAAE9C,CAAC,CAAC;MAC7D,MAAMgD,CAAC,GAAGuP,UAAU,CAACvP,CAAC,GAAG2Y,KAAK,GAAG5G,MAAM,CAAC2P,YAAY,CAAC,CAAC,GAAG3P,MAAM,CAAC0N,gBAAgB,CAACpI,QAAQ,GAAGzN,EAAE,CAAC+I,UAAU,CAACZ,MAAM,EAAE2C,MAAM,EAAE2C,QAAQ,CAAC,GAAG3C,MAAM,CAAC1U,CAAC,EAAEhD,CAAC,CAAC;MAClJuS,UAAU,CAACgV,IAAI,GAAG7B,KAAK,CAAC5iB,CAAC,CAAC,IAAI4iB,KAAK,CAAC1iB,CAAC,CAAC;MACtCuP,UAAU,CAAC1D,IAAI,GAAG7O,CAAC,GAAG,CAAC,IAAK0X,MAAM,CAAC5U,CAAC,GAAG0qB,UAAU,CAAC1qB,CAAC,GAAIwqB,YAAY;MACnE,IAAInN,cAAc,EAAE;QAClB5N,UAAU,CAACkB,OAAO,GAAG2M,aAAa,IAAIxT,EAAE,CAACqS,yBAAyB,CAACjf,CAAC,EAAE+V,IAAI,CAAC;MAC7E;MACA,IAAI,CAACwX,YAAY,EAAE;QACjB3gB,EAAE,CAAC0T,aAAa,CAAC+G,KAAK,EAAErnB,CAAC,EAAEuS,UAAU,EAAEwD,IAAI,CAAC;MAC9C;MACAyX,UAAU,GAAG9V,MAAM;IACrB;IACA9K,EAAE,CAAC2T,mBAAmB,CAACH,aAAa,EAAErK,IAAI,EAAE+O,SAAS,CAAC;EACxD;EACAxG,cAAcA,CAAA,EAAG;IACf,MAAM1R,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMe,OAAO,GAAGnC,IAAI,CAACmC,OAAO;IAC5B,MAAM+U,MAAM,GAAG/U,OAAO,CAACjF,OAAO,IAAIiF,OAAO,CAACjF,OAAO,CAAC2X,WAAW,IAAI,CAAC;IAClE,MAAMjV,IAAI,GAAGI,IAAI,CAACJ,IAAI,IAAI,EAAE;IAC5B,IAAI,CAACA,IAAI,CAAC9I,MAAM,EAAE;MAChB,OAAOogB,MAAM;IACf;IACA,MAAMC,UAAU,GAAGvX,IAAI,CAAC,CAAC,CAAC,CAAChC,IAAI,CAACvH,EAAE,CAACqS,yBAAyB,CAAC,CAAC,CAAC,CAAC;IAChE,MAAM0O,SAAS,GAAGxX,IAAI,CAACA,IAAI,CAAC9I,MAAM,GAAG,CAAC,CAAC,CAAC8G,IAAI,CAACvH,EAAE,CAACqS,yBAAyB,CAAC9I,IAAI,CAAC9I,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3F,OAAOb,IAAI,CAACmC,GAAG,CAAC8e,MAAM,EAAEC,UAAU,EAAEC,SAAS,CAAC,GAAG,CAAC;EACpD;EACArgB,IAAIA,CAAA,EAAG;IACL,IAAI,CAACqK,WAAW,CAACe,OAAO,CAACkV,mBAAmB,CAAC,IAAI,CAAC/hB,KAAK,CAACiT,SAAS,CAAC;IAClE,KAAK,CAACxR,IAAI,CAAC,CAAC;EACd;AACF;AACAsf,cAAc,CAAChW,EAAE,GAAG,MAAM;AAC1BgW,cAAc,CAACvsB,QAAQ,GAAG;EACxB0b,kBAAkB,EAAE,MAAM;EAC1BqD,eAAe,EAAE,OAAO;EACxB+N,QAAQ,EAAE,IAAI;EACdE,QAAQ,EAAE;AACZ,CAAC;AACDT,cAAc,CAAC7mB,SAAS,GAAG;EACzBqS,MAAM,EAAE;IACN0O,OAAO,EAAE;MACP9a,IAAI,EAAE;IACR,CAAC;IACDib,OAAO,EAAE;MACPjb,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACD,SAASghB,+BAA+BA,CAACzW,IAAI,EAAE6Q,MAAM,EAAE2F,kBAAkB,EAAE;EACzE,MAAMc,UAAU,GAAGzG,MAAM,CAAC/Z,MAAM;EAChC,IAAIX,KAAK,GAAG,CAAC;EACb,IAAIkQ,KAAK,GAAGiR,UAAU;EACtB,IAAItX,IAAI,CAACuG,OAAO,EAAE;IAChB,MAAM;MAACjF,MAAM;MAAEmB;IAAO,CAAC,GAAGzC,IAAI;IAC9B,MAAMyB,IAAI,GAAGH,MAAM,CAACG,IAAI;IACxB,MAAM;MAACvL,GAAG;MAAEkC,GAAG;MAAEmI,UAAU;MAAEC;IAAU,CAAC,GAAGc,MAAM,CAAChB,aAAa,CAAC,CAAC;IACjE,IAAIC,UAAU,EAAE;MACdpK,KAAK,GAAG3J,WAAW,CAACyJ,IAAI,CAACC,GAAG,CAC1BxJ,YAAY,CAAC+V,OAAO,EAAEnB,MAAM,CAACG,IAAI,EAAEvL,GAAG,CAAC,CAACqhB,EAAE,EAC1Cf,kBAAkB,GAAGc,UAAU,GAAG5qB,YAAY,CAACmkB,MAAM,EAAEpP,IAAI,EAAEH,MAAM,CAAC4K,gBAAgB,CAAChW,GAAG,CAAC,CAAC,CAACqhB,EAAE,CAAC,EAChG,CAAC,EAAED,UAAU,GAAG,CAAC,CAAC;IACpB;IACA,IAAI9W,UAAU,EAAE;MACd6F,KAAK,GAAG7Z,WAAW,CAACyJ,IAAI,CAACmC,GAAG,CAC1B1L,YAAY,CAAC+V,OAAO,EAAEnB,MAAM,CAACG,IAAI,EAAErJ,GAAG,CAAC,CAACof,EAAE,GAAG,CAAC,EAC9ChB,kBAAkB,GAAG,CAAC,GAAG9pB,YAAY,CAACmkB,MAAM,EAAEpP,IAAI,EAAEH,MAAM,CAAC4K,gBAAgB,CAAC9T,GAAG,CAAC,CAAC,CAACof,EAAE,GAAG,CAAC,CAAC,EAC3FrhB,KAAK,EAAEmhB,UAAU,CAAC,GAAGnhB,KAAK;IAC5B,CAAC,MAAM;MACLkQ,KAAK,GAAGiR,UAAU,GAAGnhB,KAAK;IAC5B;EACF;EACA,OAAO;IAACA,KAAK;IAAEkQ;EAAK,CAAC;AACvB;AACA,SAASqQ,kBAAkBA,CAAC1W,IAAI,EAAE;EAChC,MAAM;IAACzB,MAAM;IAAEC,MAAM;IAAEiZ;EAAY,CAAC,GAAGzX,IAAI;EAC3C,MAAM0X,SAAS,GAAG;IAChBC,IAAI,EAAEpZ,MAAM,CAACrI,GAAG;IAChB0hB,IAAI,EAAErZ,MAAM,CAACnG,GAAG;IAChByf,IAAI,EAAErZ,MAAM,CAACtI,GAAG;IAChB4hB,IAAI,EAAEtZ,MAAM,CAACpG;EACf,CAAC;EACD,IAAI,CAACqf,YAAY,EAAE;IACjBzX,IAAI,CAACyX,YAAY,GAAGC,SAAS;IAC7B,OAAO,IAAI;EACb;EACA,MAAMK,OAAO,GAAGN,YAAY,CAACE,IAAI,KAAKpZ,MAAM,CAACrI,GAAG,IAC7CuhB,YAAY,CAACG,IAAI,KAAKrZ,MAAM,CAACnG,GAAG,IAChCqf,YAAY,CAACI,IAAI,KAAKrZ,MAAM,CAACtI,GAAG,IAChCuhB,YAAY,CAACK,IAAI,KAAKtZ,MAAM,CAACpG,GAAG;EACnCoD,MAAM,CAACqC,MAAM,CAAC4Z,YAAY,EAAEC,SAAS,CAAC;EACtC,OAAOK,OAAO;AAChB;AAEA,MAAMC,mBAAmB,SAASlV,iBAAiB,CAAC;EAClDhO,WAAWA,CAACQ,KAAK,EAAEmK,YAAY,EAAE;IAC/B,KAAK,CAACnK,KAAK,EAAEmK,YAAY,CAAC;IAC1B,IAAI,CAACoT,WAAW,GAAGzd,SAAS;IAC5B,IAAI,CAAC0d,WAAW,GAAG1d,SAAS;EAC9B;EACAuF,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAM2T,IAAI,GAAG,IAAI,CAAC/R,WAAW,CAACxB,IAAI;IAClC,IAAI,CAACqY,aAAa,CAAC,CAAC;IACpB,IAAI,CAACrN,cAAc,CAACuI,IAAI,EAAE,CAAC,EAAEA,IAAI,CAACrc,MAAM,EAAE0I,IAAI,CAAC;EACjD;EACAyY,aAAaA,CAAA,EAAG;IACd,MAAM5hB,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMiT,SAAS,GAAGjT,KAAK,CAACiT,SAAS;IACjC,MAAMpK,IAAI,GAAG7I,KAAK,CAAC4H,OAAO;IAC1B,MAAMgb,OAAO,GAAGjiB,IAAI,CAACC,GAAG,CAACqS,SAAS,CAAC7J,KAAK,GAAG6J,SAAS,CAAC3J,IAAI,EAAE2J,SAAS,CAAC5J,MAAM,GAAG4J,SAAS,CAAC9J,GAAG,CAAC;IAC5F,MAAMqU,WAAW,GAAG7c,IAAI,CAACmC,GAAG,CAAC8f,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5C,MAAMrF,WAAW,GAAG5c,IAAI,CAACmC,GAAG,CAAC+F,IAAI,CAACga,gBAAgB,GAAIrF,WAAW,GAAG,GAAG,GAAK3U,IAAI,CAACga,gBAAiB,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1G,MAAMtE,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAW,IAAIvd,KAAK,CAAC8iB,sBAAsB,CAAC,CAAC;IACjF/hB,EAAE,CAACyc,WAAW,GAAGA,WAAW,GAAIe,YAAY,GAAGxd,EAAE,CAAC8I,KAAM;IACxD9I,EAAE,CAACwc,WAAW,GAAGxc,EAAE,CAACyc,WAAW,GAAGe,YAAY;EAChD;EACAjJ,cAAcA,CAACuI,IAAI,EAAEhd,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,EAAE;IACvC,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAMlK,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM6M,OAAO,GAAG9L,EAAE,CAAC4N,UAAU,CAAC,CAAC;IAC/B,MAAM9F,IAAI,GAAG7I,KAAK,CAAC4H,OAAO;IAC1B,MAAMmX,aAAa,GAAGlW,IAAI,CAACzC,SAAS;IACpC,MAAMuC,KAAK,GAAG5H,EAAE,CAAC+K,WAAW,CAAC2D,MAAM;IACnC,MAAMuP,OAAO,GAAGrW,KAAK,CAACoa,OAAO;IAC7B,MAAM9D,OAAO,GAAGtW,KAAK,CAACqa,OAAO;IAC7B,MAAMC,iBAAiB,GAAGta,KAAK,CAACua,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGpsB,EAAE;IAC3D,IAAIkmB,KAAK,GAAGiG,iBAAiB;IAC7B,IAAI9uB,CAAC;IACL,MAAMgvB,YAAY,GAAG,GAAG,GAAGpiB,EAAE,CAACqiB,oBAAoB,CAAC,CAAC;IACpD,KAAKjvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,KAAK,EAAE,EAAE1M,CAAC,EAAE;MAC1B6oB,KAAK,IAAIjc,EAAE,CAACsiB,aAAa,CAAClvB,CAAC,EAAE+V,IAAI,EAAEiZ,YAAY,CAAC;IAClD;IACA,KAAKhvB,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,EAAE,EAAE;MACtC,MAAMgrB,GAAG,GAAGtB,IAAI,CAAC1pB,CAAC,CAAC;MACnB,IAAIooB,UAAU,GAAGS,KAAK;MACtB,IAAIR,QAAQ,GAAGQ,KAAK,GAAGjc,EAAE,CAACsiB,aAAa,CAAClvB,CAAC,EAAE+V,IAAI,EAAEiZ,YAAY,CAAC;MAC9D,IAAI3F,WAAW,GAAGxd,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC,GAAGwU,KAAK,CAAC2a,6BAA6B,CAACzW,OAAO,CAACvC,IAAI,CAACnW,CAAC,CAAC,CAAC,GAAG,CAAC;MACvG6oB,KAAK,GAAGR,QAAQ;MAChB,IAAI1M,KAAK,EAAE;QACT,IAAIiP,aAAa,CAACG,YAAY,EAAE;UAC9B1B,WAAW,GAAG,CAAC;QACjB;QACA,IAAIuB,aAAa,CAACF,aAAa,EAAE;UAC/BtC,UAAU,GAAGC,QAAQ,GAAGyG,iBAAiB;QAC3C;MACF;MACA,MAAMvc,UAAU,GAAG;QACjBzP,CAAC,EAAE+nB,OAAO;QACV7nB,CAAC,EAAE8nB,OAAO;QACV1B,WAAW,EAAE,CAAC;QACdC,WAAW;QACXjB,UAAU;QACVC,QAAQ;QACR5U,OAAO,EAAE7G,EAAE,CAACqS,yBAAyB,CAACjf,CAAC,EAAE+V,IAAI;MAC/C,CAAC;MACDnJ,EAAE,CAAC0T,aAAa,CAAC0K,GAAG,EAAEhrB,CAAC,EAAEuS,UAAU,EAAEwD,IAAI,CAAC;IAC5C;EACF;EACAkZ,oBAAoBA,CAAA,EAAG;IACrB,MAAMvW,OAAO,GAAG,IAAI,CAAC8B,UAAU,CAAC,CAAC;IACjC,MAAMjE,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,IAAIiF,KAAK,GAAG,CAAC;IACbrG,IAAI,CAACJ,IAAI,CAAC9J,OAAO,CAAC,CAACuM,OAAO,EAAElD,KAAK,KAAK;MACpC,IAAI,CAACgQ,KAAK,CAAChN,OAAO,CAACvC,IAAI,CAACT,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC7J,KAAK,CAACua,iBAAiB,CAAC1Q,KAAK,CAAC,EAAE;QACtEkH,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IACF,OAAOA,KAAK;EACd;EACAsS,aAAaA,CAACxZ,KAAK,EAAEK,IAAI,EAAEiZ,YAAY,EAAE;IACvC,OAAO,IAAI,CAACnjB,KAAK,CAACua,iBAAiB,CAAC1Q,KAAK,CAAC,GACtC7T,SAAS,CAAC,IAAI,CAACod,yBAAyB,CAACvJ,KAAK,EAAEK,IAAI,CAAC,CAAC8S,KAAK,IAAImG,YAAY,CAAC,GAC5E,CAAC;EACP;AACF;AACAT,mBAAmB,CAAC3X,EAAE,GAAG,WAAW;AACpC2X,mBAAmB,CAACluB,QAAQ,GAAG;EAC7B+e,eAAe,EAAE,KAAK;EACtBnN,SAAS,EAAE;IACTyY,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDrY,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QAAQ;MACduG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa;IAC/E;EACF,CAAC;EACDyI,SAAS,EAAE,GAAG;EACdoN,UAAU,EAAE;AACd,CAAC;AACDmG,mBAAmB,CAACxoB,SAAS,GAAG;EAC9B0lB,WAAW,EAAE,CAAC;EACdhE,OAAO,EAAE;IACPiE,MAAM,EAAE;MACNtO,MAAM,EAAE;QACNuO,cAAcA,CAAC9f,KAAK,EAAE;UACpB,MAAMsK,IAAI,GAAGtK,KAAK,CAACsK,IAAI;UACvB,IAAIA,IAAI,CAACiH,MAAM,CAAC/P,MAAM,IAAI8I,IAAI,CAACoF,QAAQ,CAAClO,MAAM,EAAE;YAC9C,OAAO8I,IAAI,CAACiH,MAAM,CAACwO,GAAG,CAAC,CAACpN,KAAK,EAAExe,CAAC,KAAK;cACnC,MAAMuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAc,CAAC,CAAC,CAAC;cACpC,MAAMqQ,KAAK,GAAGtV,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAAC/e,CAAC,CAAC;cACzC,OAAO;gBACL8rB,IAAI,EAAEtN,KAAK;gBACXuN,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACT,WAAW;gBAC5BgB,MAAM,EAAE,CAACvgB,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC;gBACnC0V,KAAK,EAAE1V;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDqsB,OAAOA,CAACzsB,CAAC,EAAE0sB,UAAU,EAAEZ,MAAM,EAAE;QAC7BA,MAAM,CAAC7f,KAAK,CAAC0gB,oBAAoB,CAACD,UAAU,CAAC5W,KAAK,CAAC;QACnDgW,MAAM,CAAC7f,KAAK,CAACqF,MAAM,CAAC,CAAC;MACvB;IACF,CAAC;IACDwW,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACDnJ,KAAKA,CAACU,OAAO,EAAE;UACb,OAAOA,OAAO,CAACrT,KAAK,CAACsK,IAAI,CAACiH,MAAM,CAAC8B,OAAO,CAACrG,SAAS,CAAC,GAAG,IAAI,GAAGqG,OAAO,CAACwN,cAAc;QACrF;MACF;IACF;EACF,CAAC;EACDtU,MAAM,EAAE;IACN5Y,CAAC,EAAE;MACDwM,IAAI,EAAE,cAAc;MACpBojB,UAAU,EAAE;QACVC,OAAO,EAAE;MACX,CAAC;MACDnI,WAAW,EAAE,IAAI;MACjBF,IAAI,EAAE;QACJsI,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE;QACXF,OAAO,EAAE;MACX,CAAC;MACDjH,UAAU,EAAE;IACd;EACF;AACF,CAAC;AAED,MAAMoH,aAAa,SAASrG,kBAAkB,CAAC;AAE/CqG,aAAa,CAAC5Y,EAAE,GAAG,KAAK;AACxB4Y,aAAa,CAACnvB,QAAQ,GAAG;EACvB0nB,MAAM,EAAE,CAAC;EACTF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE;AACV,CAAC;AAED,MAAMiI,eAAe,SAASpW,iBAAiB,CAAC;EAC9CkF,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAMkL,MAAM,GAAGlL,EAAE,CAAC+K,WAAW,CAACG,MAAM;IACpC,MAAMJ,MAAM,GAAG9K,EAAE,CAAC6Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,OAAO;MACL8I,KAAK,EAAE1G,MAAM,CAACuF,SAAS,CAAC,CAAC,CAAC3H,KAAK,CAAC;MAChCxB,KAAK,EAAE,EAAE,GAAG4D,MAAM,CAAC2G,gBAAgB,CAAC/G,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC;IACzD,CAAC;EACH;EACA9G,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAW;IAC3B,MAAMkV,IAAI,GAAGtW,IAAI,CAACmC,OAAO;IACzB,MAAM0O,MAAM,GAAG7Q,IAAI,CAACJ,IAAI,IAAI,EAAE;IAC9B,MAAMiH,MAAM,GAAG7G,IAAI,CAACsB,MAAM,CAACwF,SAAS,CAAC,CAAC;IACtCwP,IAAI,CAACzF,MAAM,GAAGA,MAAM;IACpB,IAAIrR,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMtC,OAAO,GAAG7G,EAAE,CAACoS,4BAA4B,CAACjJ,IAAI,CAAC;MACrD,IAAI,CAACnJ,EAAE,CAAC6G,OAAO,CAAC0Z,QAAQ,EAAE;QACxB1Z,OAAO,CAAC2X,WAAW,GAAG,CAAC;MACzB;MACA,MAAM7Y,UAAU,GAAG;QACjB7B,KAAK,EAAE,IAAI;QACXgf,SAAS,EAAEtS,MAAM,CAAC/P,MAAM,KAAK+Z,MAAM,CAAC/Z,MAAM;QAC1CoG;MACF,CAAC;MACD7G,EAAE,CAAC0T,aAAa,CAACuM,IAAI,EAAElhB,SAAS,EAAE4G,UAAU,EAAEwD,IAAI,CAAC;IACrD;IACAnJ,EAAE,CAACuU,cAAc,CAACiG,MAAM,EAAE,CAAC,EAAEA,MAAM,CAAC/Z,MAAM,EAAE0I,IAAI,CAAC;EACnD;EACAoL,cAAcA,CAACiG,MAAM,EAAE1a,KAAK,EAAEkQ,KAAK,EAAE7G,IAAI,EAAE;IACzC,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM8L,OAAO,GAAG9L,EAAE,CAAC4N,UAAU,CAAC,CAAC;IAC/B,MAAMhG,KAAK,GAAG5H,EAAE,CAAC+K,WAAW,CAAC2D,MAAM;IACnC,MAAMK,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,KAAK,IAAI/V,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAK,EAAE5c,CAAC,EAAE,EAAE;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAC,CAAC;MACvB,MAAMyT,OAAO,GAAG7G,EAAE,CAACqS,yBAAyB,CAACjf,CAAC,EAAE+V,IAAI,CAAC;MACrD,MAAM4Z,aAAa,GAAGnb,KAAK,CAACob,wBAAwB,CAAC5vB,CAAC,EAAE0Y,OAAO,CAACvC,IAAI,CAACnW,CAAC,CAAC,CAAC;MACxE,MAAM8C,CAAC,GAAG6Y,KAAK,GAAGnH,KAAK,CAACoa,OAAO,GAAGe,aAAa,CAAC7sB,CAAC;MACjD,MAAME,CAAC,GAAG2Y,KAAK,GAAGnH,KAAK,CAACqa,OAAO,GAAGc,aAAa,CAAC3sB,CAAC;MACjD,MAAMuP,UAAU,GAAG;QACjBzP,CAAC;QACDE,CAAC;QACD6lB,KAAK,EAAE8G,aAAa,CAAC9G,KAAK;QAC1BtB,IAAI,EAAE7B,KAAK,CAAC5iB,CAAC,CAAC,IAAI4iB,KAAK,CAAC1iB,CAAC,CAAC;QAC1ByQ;MACF,CAAC;MACD7G,EAAE,CAAC0T,aAAa,CAAC+G,KAAK,EAAErnB,CAAC,EAAEuS,UAAU,EAAEwD,IAAI,CAAC;IAC9C;EACF;AACF;AACA0Z,eAAe,CAAC7Y,EAAE,GAAG,OAAO;AAC5B6Y,eAAe,CAACpvB,QAAQ,GAAG;EACzB0b,kBAAkB,EAAE,MAAM;EAC1BqD,eAAe,EAAE,OAAO;EACxBpE,SAAS,EAAE,GAAG;EACdmS,QAAQ,EAAE,IAAI;EACdvO,QAAQ,EAAE;IACRiO,IAAI,EAAE;MACJgD,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACDJ,eAAe,CAAC1pB,SAAS,GAAG;EAC1B0lB,WAAW,EAAE,CAAC;EACdrT,MAAM,EAAE;IACN5Y,CAAC,EAAE;MACDwM,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,MAAM8jB,iBAAiB,SAASlD,cAAc,CAAC;AAE/CkD,iBAAiB,CAAClZ,EAAE,GAAG,SAAS;AAChCkZ,iBAAiB,CAACzvB,QAAQ,GAAG;EAC3B8sB,QAAQ,EAAE,KAAK;EACf0C,IAAI,EAAE;AACR,CAAC;AACDC,iBAAiB,CAAC/pB,SAAS,GAAG;EAC5B8gB,WAAW,EAAE;IACX9Q,IAAI,EAAE;EACR,CAAC;EACD0R,OAAO,EAAE;IACPC,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACDnJ,KAAKA,CAACjR,IAAI,EAAE;UACV,OAAO,GAAG,GAAGA,IAAI,CAACiR,KAAK,GAAG,IAAI,GAAGjR,IAAI,CAACmf,cAAc,GAAG,GAAG;QAC5D;MACF;IACF;EACF,CAAC;EACDtU,MAAM,EAAE;IACNtV,CAAC,EAAE;MACDkJ,IAAI,EAAE;IACR,CAAC;IACDhJ,CAAC,EAAE;MACDgJ,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,IAAI+jB,WAAW,GAAG,aAAahe,MAAM,CAAC8N,MAAM,CAAC;EAC7CmQ,SAAS,EAAE,IAAI;EACf5L,aAAa,EAAEA,aAAa;EAC5B+C,gBAAgB,EAAEA,gBAAgB;EAClCgC,kBAAkB,EAAEA,kBAAkB;EACtCyD,cAAc,EAAEA,cAAc;EAC9B2B,mBAAmB,EAAEA,mBAAmB;EACxCiB,aAAa,EAAEA,aAAa;EAC5BC,eAAe,EAAEA,eAAe;EAChCK,iBAAiB,EAAEA;AACnB,CAAC,CAAC;AAEF,SAASG,QAAQA,CAAA,EAAG;EAClB,MAAM,IAAIC,KAAK,CAAC,2GAA2G,CAAC;AAC9H;AACA,MAAMC,WAAW,CAAC;EAChB9kB,WAAWA,CAACoI,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC9B;EACA2c,OAAOA,CAAA,EAAG;IACR,OAAOH,QAAQ,CAAC,CAAC;EACnB;EACAtT,KAAKA,CAACzI,KAAK,EAAEmc,MAAM,EAAE;IACnB,OAAOJ,QAAQ,CAAC,CAAC;EACnB;EACAI,MAAMA,CAACC,SAAS,EAAED,MAAM,EAAE;IACxB,OAAOJ,QAAQ,CAAC,CAAC;EACnB;EACA3hB,GAAGA,CAACgiB,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC3B,OAAOP,QAAQ,CAAC,CAAC;EACnB;EACAQ,IAAIA,CAAC/wB,CAAC,EAAEQ,CAAC,EAAEswB,IAAI,EAAE;IACf,OAAOP,QAAQ,CAAC,CAAC;EACnB;EACAS,OAAOA,CAACJ,SAAS,EAAEE,IAAI,EAAEG,OAAO,EAAE;IAChC,OAAOV,QAAQ,CAAC,CAAC;EACnB;EACAW,KAAKA,CAACN,SAAS,EAAEE,IAAI,EAAE;IACrB,OAAOP,QAAQ,CAAC,CAAC;EACnB;AACF;AACAE,WAAW,CAACU,QAAQ,GAAG,UAASC,OAAO,EAAE;EACvC/e,MAAM,CAACqC,MAAM,CAAC+b,WAAW,CAACvO,SAAS,EAAEkP,OAAO,CAAC;AAC/C,CAAC;AACD,IAAIC,QAAQ,GAAG;EACbC,KAAK,EAAEb;AACT,CAAC;AAED,SAASc,mBAAmBA,CAACrxB,CAAC,EAAEiM,KAAK,EAAE;EACrC,IAAI,QAAQ,IAAIjM,CAAC,EAAE;IACjB,OAAO;MACLkD,CAAC,EAAElD,CAAC,CAACkD,CAAC;MACNE,CAAC,EAAEpD,CAAC,CAACoD;IACP,CAAC;EACH;EACA,OAAOG,qBAAqB,CAACvD,CAAC,EAAEiM,KAAK,CAAC;AACxC;AACA,SAASqlB,uBAAuBA,CAACrlB,KAAK,EAAEslB,OAAO,EAAE;EAC/C,MAAM5b,QAAQ,GAAG1J,KAAK,CAACulB,4BAA4B,CAAC,CAAC;EACrD,IAAI1b,KAAK,EAAES,IAAI,EAAEyC,OAAO;EACxB,KAAK,IAAI5Y,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGF,QAAQ,CAAClI,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACrD,CAAC;MAAC0V,KAAK;MAAES;IAAI,CAAC,GAAGZ,QAAQ,CAACvV,CAAC,CAAC;IAC5B,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEiwB,IAAI,GAAGlb,IAAI,CAAC9I,MAAM,EAAEjM,CAAC,GAAGiwB,IAAI,EAAE,EAAEjwB,CAAC,EAAE;MACjDwX,OAAO,GAAGzC,IAAI,CAAC/U,CAAC,CAAC;MACjB,IAAI,CAACwX,OAAO,CAAC2O,IAAI,EAAE;QACjB4J,OAAO,CAACvY,OAAO,EAAElD,KAAK,EAAEtU,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAASkwB,YAAYA,CAACC,OAAO,EAAEvZ,IAAI,EAAE9D,KAAK,EAAEsd,SAAS,EAAE;EACrD,MAAM;IAAC/Z,UAAU;IAAEtB,IAAI;IAAE2G;EAAO,CAAC,GAAGyU,OAAO;EAC3C,MAAM1Z,MAAM,GAAGJ,UAAU,CAACE,WAAW,CAACE,MAAM;EAC5C,IAAIA,MAAM,IAAIG,IAAI,KAAKH,MAAM,CAACG,IAAI,IAAI8E,OAAO,IAAI3G,IAAI,CAAC9I,MAAM,EAAE;IAC5D,MAAMokB,YAAY,GAAG5Z,MAAM,CAAC6Z,cAAc,GAAGnuB,aAAa,GAAGN,YAAY;IACzE,IAAI,CAACuuB,SAAS,EAAE;MACd,OAAOC,YAAY,CAACtb,IAAI,EAAE6B,IAAI,EAAE9D,KAAK,CAAC;IACxC,CAAC,MAAM,IAAIuD,UAAU,CAACqC,cAAc,EAAE;MACpC,MAAM6X,EAAE,GAAGxb,IAAI,CAAC,CAAC,CAAC;MAClB,MAAMyH,KAAK,GAAG,OAAO+T,EAAE,CAACC,QAAQ,KAAK,UAAU,IAAID,EAAE,CAACC,QAAQ,CAAC5Z,IAAI,CAAC;MACpE,IAAI4F,KAAK,EAAE;QACT,MAAMlR,KAAK,GAAG+kB,YAAY,CAACtb,IAAI,EAAE6B,IAAI,EAAE9D,KAAK,GAAG0J,KAAK,CAAC;QACrD,MAAMhJ,GAAG,GAAG6c,YAAY,CAACtb,IAAI,EAAE6B,IAAI,EAAE9D,KAAK,GAAG0J,KAAK,CAAC;QACnD,OAAO;UAACkQ,EAAE,EAAEphB,KAAK,CAACohB,EAAE;UAAEC,EAAE,EAAEnZ,GAAG,CAACmZ;QAAE,CAAC;MACnC;IACF;EACF;EACA,OAAO;IAACD,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAE5X,IAAI,CAAC9I,MAAM,GAAG;EAAC,CAAC;AACrC;AACA,SAASwkB,sBAAsBA,CAAChmB,KAAK,EAAEmM,IAAI,EAAE8Z,QAAQ,EAAEX,OAAO,EAAEK,SAAS,EAAE;EACzE,MAAMjc,QAAQ,GAAG1J,KAAK,CAACulB,4BAA4B,CAAC,CAAC;EACrD,MAAMld,KAAK,GAAG4d,QAAQ,CAAC9Z,IAAI,CAAC;EAC5B,KAAK,IAAIhY,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGF,QAAQ,CAAClI,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACrD,MAAM;MAAC0V,KAAK;MAAES;IAAI,CAAC,GAAGZ,QAAQ,CAACvV,CAAC,CAAC;IACjC,MAAM;MAAC8tB,EAAE;MAAEC;IAAE,CAAC,GAAGuD,YAAY,CAAC/b,QAAQ,CAACvV,CAAC,CAAC,EAAEgY,IAAI,EAAE9D,KAAK,EAAEsd,SAAS,CAAC;IAClE,KAAK,IAAIpwB,CAAC,GAAG0sB,EAAE,EAAE1sB,CAAC,IAAI2sB,EAAE,EAAE,EAAE3sB,CAAC,EAAE;MAC7B,MAAMwX,OAAO,GAAGzC,IAAI,CAAC/U,CAAC,CAAC;MACvB,IAAI,CAACwX,OAAO,CAAC2O,IAAI,EAAE;QACjB4J,OAAO,CAACvY,OAAO,EAAElD,KAAK,EAAEtU,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAAS2wB,wBAAwBA,CAAC/Z,IAAI,EAAE;EACtC,MAAMga,IAAI,GAAGha,IAAI,CAAC2N,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,MAAMsM,IAAI,GAAGja,IAAI,CAAC2N,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,OAAO,UAASuM,GAAG,EAAEC,GAAG,EAAE;IACxB,MAAMC,MAAM,GAAGJ,IAAI,GAAGxlB,IAAI,CAACgW,GAAG,CAAC0P,GAAG,CAACpvB,CAAC,GAAGqvB,GAAG,CAACrvB,CAAC,CAAC,GAAG,CAAC;IACjD,MAAMuvB,MAAM,GAAGJ,IAAI,GAAGzlB,IAAI,CAACgW,GAAG,CAAC0P,GAAG,CAAClvB,CAAC,GAAGmvB,GAAG,CAACnvB,CAAC,CAAC,GAAG,CAAC;IACjD,OAAOwJ,IAAI,CAAC8lB,IAAI,CAAC9lB,IAAI,CAAC+lB,GAAG,CAACH,MAAM,EAAE,CAAC,CAAC,GAAG5lB,IAAI,CAAC+lB,GAAG,CAACF,MAAM,EAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;AACH;AACA,SAASG,iBAAiBA,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAEya,gBAAgB,EAAE;EAClE,MAAMrlB,KAAK,GAAG,EAAE;EAChB,IAAI,CAAC/J,cAAc,CAACyuB,QAAQ,EAAEjmB,KAAK,CAACiT,SAAS,EAAEjT,KAAK,CAAC6mB,WAAW,CAAC,EAAE;IACjE,OAAOtlB,KAAK;EACd;EACA,MAAMulB,cAAc,GAAG,SAAAA,CAAS/Z,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAIkD,OAAO,CAACga,OAAO,CAACd,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,EAAEyvB,gBAAgB,CAAC,EAAE;MAC7DrlB,KAAK,CAACiB,IAAI,CAAC;QAACuK,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACDmc,sBAAsB,CAAChmB,KAAK,EAAEmM,IAAI,EAAE8Z,QAAQ,EAAEa,cAAc,EAAE,IAAI,CAAC;EACnE,OAAOvlB,KAAK;AACd;AACA,SAASylB,eAAeA,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAEwZ,SAAS,EAAEiB,gBAAgB,EAAE;EAC3E,MAAMK,cAAc,GAAGf,wBAAwB,CAAC/Z,IAAI,CAAC;EACrD,IAAI+a,WAAW,GAAG/b,MAAM,CAACE,iBAAiB;EAC1C,IAAI9J,KAAK,GAAG,EAAE;EACd,IAAI,CAAC/J,cAAc,CAACyuB,QAAQ,EAAEjmB,KAAK,CAACiT,SAAS,EAAEjT,KAAK,CAAC6mB,WAAW,CAAC,EAAE;IACjE,OAAOtlB,KAAK;EACd;EACA,MAAMulB,cAAc,GAAG,SAAAA,CAAS/Z,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAI8b,SAAS,IAAI,CAAC5Y,OAAO,CAACga,OAAO,CAACd,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,EAAEyvB,gBAAgB,CAAC,EAAE;MAC3E;IACF;IACA,MAAMrN,MAAM,GAAGxM,OAAO,CAACoa,cAAc,CAACP,gBAAgB,CAAC;IACvD,MAAMQ,QAAQ,GAAGH,cAAc,CAAChB,QAAQ,EAAE1M,MAAM,CAAC;IACjD,IAAI6N,QAAQ,GAAGF,WAAW,EAAE;MAC1B3lB,KAAK,GAAG,CAAC;QAACwL,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;MACxCqd,WAAW,GAAGE,QAAQ;IACxB,CAAC,MAAM,IAAIA,QAAQ,KAAKF,WAAW,EAAE;MACnC3lB,KAAK,CAACiB,IAAI,CAAC;QAACuK,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACDmc,sBAAsB,CAAChmB,KAAK,EAAEmM,IAAI,EAAE8Z,QAAQ,EAAEa,cAAc,CAAC;EAC7D,OAAOvlB,KAAK;AACd;AACA,SAAS8lB,YAAYA,CAACrnB,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,EAAE;EACzD,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;EAC9C,MAAMuB,KAAK,GAAG,EAAE;EAChB,MAAM4K,IAAI,GAAGvE,OAAO,CAACuE,IAAI;EACzB,MAAMmb,WAAW,GAAGnb,IAAI,KAAK,GAAG,GAAG,UAAU,GAAG,UAAU;EAC1D,IAAIob,cAAc,GAAG,KAAK;EAC1BlC,uBAAuB,CAACrlB,KAAK,EAAE,CAAC+M,OAAO,EAAE5C,YAAY,EAAEN,KAAK,KAAK;IAC/D,IAAIkD,OAAO,CAACua,WAAW,CAAC,CAACrB,QAAQ,CAAC9Z,IAAI,CAAC,EAAEya,gBAAgB,CAAC,EAAE;MAC1DrlB,KAAK,CAACiB,IAAI,CAAC;QAACuK,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;IAC5C;IACA,IAAIkD,OAAO,CAACga,OAAO,CAACd,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,EAAEyvB,gBAAgB,CAAC,EAAE;MAC7DW,cAAc,GAAG,IAAI;IACvB;EACF,CAAC,CAAC;EACF,IAAI3f,OAAO,CAAC+d,SAAS,IAAI,CAAC4B,cAAc,EAAE;IACxC,OAAO,EAAE;EACX;EACA,OAAOhmB,KAAK;AACd;AACA,IAAIimB,WAAW,GAAG;EAChBC,KAAK,EAAE;IACL5d,KAAKA,CAAC7J,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,EAAE;MACzC,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,GAAG;MAChC,MAAM5K,KAAK,GAAGqG,OAAO,CAAC+d,SAAS,GAC3BgB,iBAAiB,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAEya,gBAAgB,CAAC,GAC1DI,eAAe,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAE,KAAK,EAAEya,gBAAgB,CAAC;MACnE,MAAM7T,QAAQ,GAAG,EAAE;MACnB,IAAI,CAACxR,KAAK,CAACC,MAAM,EAAE;QACjB,OAAO,EAAE;MACX;MACAxB,KAAK,CAACulB,4BAA4B,CAAC,CAAC,CAAC/kB,OAAO,CAAEkK,IAAI,IAAK;QACrD,MAAMb,KAAK,GAAGtI,KAAK,CAAC,CAAC,CAAC,CAACsI,KAAK;QAC5B,MAAMkD,OAAO,GAAGrC,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QAChC,IAAIkD,OAAO,IAAI,CAACA,OAAO,CAAC2O,IAAI,EAAE;UAC5B3I,QAAQ,CAACvQ,IAAI,CAAC;YAACuK,OAAO;YAAE5C,YAAY,EAAEO,IAAI,CAACb,KAAK;YAAEA;UAAK,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC;MACF,OAAOkJ,QAAQ;IACjB,CAAC;IACDlG,OAAOA,CAAC7M,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,EAAE;MAC3C,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,IAAI;MACjC,IAAI5K,KAAK,GAAGqG,OAAO,CAAC+d,SAAS,GACzBgB,iBAAiB,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAEya,gBAAgB,CAAC,GAC5DI,eAAe,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAE,KAAK,EAAEya,gBAAgB,CAAC;MACjE,IAAIrlB,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;QACpB,MAAM2I,YAAY,GAAG5I,KAAK,CAAC,CAAC,CAAC,CAAC4I,YAAY;QAC1C,MAAMG,IAAI,GAAGtK,KAAK,CAAC2P,cAAc,CAACxF,YAAY,CAAC,CAACG,IAAI;QACpD/I,KAAK,GAAG,EAAE;QACV,KAAK,IAAIpN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmW,IAAI,CAAC9I,MAAM,EAAE,EAAErN,CAAC,EAAE;UACpCoN,KAAK,CAACiB,IAAI,CAAC;YAACuK,OAAO,EAAEzC,IAAI,CAACnW,CAAC,CAAC;YAAEgW,YAAY;YAAEN,KAAK,EAAE1V;UAAC,CAAC,CAAC;QACxD;MACF;MACA,OAAOoN,KAAK;IACd,CAAC;IACDia,KAAKA,CAACxb,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,EAAE;MACzC,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,IAAI;MACjC,OAAOwa,iBAAiB,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAEya,gBAAgB,CAAC;IACnE,CAAC;IACDc,OAAOA,CAAC1nB,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,EAAE;MAC3C,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,IAAI;MACjC,OAAO6a,eAAe,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE9Z,IAAI,EAAEvE,OAAO,CAAC+d,SAAS,EAAEiB,gBAAgB,CAAC;IACpF,CAAC;IACD3vB,CAACA,CAAC+I,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,EAAE;MACrChf,OAAO,CAACuE,IAAI,GAAG,GAAG;MAClB,OAAOkb,YAAY,CAACrnB,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,CAAC;IAC1D,CAAC;IACDzvB,CAACA,CAAC6I,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,EAAE;MACrChf,OAAO,CAACuE,IAAI,GAAG,GAAG;MAClB,OAAOkb,YAAY,CAACrnB,KAAK,EAAEjM,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,CAAC;IAC1D;EACF;AACF,CAAC;AAED,MAAMe,gBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;AAC3D,SAASC,gBAAgBA,CAACC,KAAK,EAAE5B,QAAQ,EAAE;EACzC,OAAO4B,KAAK,CAACrb,MAAM,CAAC/X,CAAC,IAAIA,CAAC,CAACqzB,GAAG,KAAK7B,QAAQ,CAAC;AAC9C;AACA,SAAS8B,2BAA2BA,CAACF,KAAK,EAAE1b,IAAI,EAAE;EAChD,OAAO0b,KAAK,CAACrb,MAAM,CAAC/X,CAAC,IAAIkzB,gBAAgB,CAAC7N,OAAO,CAACrlB,CAAC,CAACqzB,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIrzB,CAAC,CAACuzB,GAAG,CAAC7b,IAAI,KAAKA,IAAI,CAAC;AACzF;AACA,SAAS8b,YAAYA,CAACJ,KAAK,EAAE/e,OAAO,EAAE;EACpC,OAAO+e,KAAK,CAACvR,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAK;IAC1B,MAAM6zB,EAAE,GAAGpf,OAAO,GAAGzU,CAAC,GAAGR,CAAC;IAC1B,MAAMs0B,EAAE,GAAGrf,OAAO,GAAGjV,CAAC,GAAGQ,CAAC;IAC1B,OAAO6zB,EAAE,CAACvI,MAAM,KAAKwI,EAAE,CAACxI,MAAM,GAC5BuI,EAAE,CAACre,KAAK,GAAGse,EAAE,CAACte,KAAK,GACnBqe,EAAE,CAACvI,MAAM,GAAGwI,EAAE,CAACxI,MAAM;EACzB,CAAC,CAAC;AACJ;AACA,SAASyI,SAASA,CAACC,KAAK,EAAE;EACxB,MAAMC,WAAW,GAAG,EAAE;EACtB,IAAIn0B,CAAC,EAAEyV,IAAI,EAAEoe,GAAG;EAChB,KAAK7zB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG,CAACye,KAAK,IAAI,EAAE,EAAE7mB,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACtD6zB,GAAG,GAAGK,KAAK,CAACl0B,CAAC,CAAC;IACdm0B,WAAW,CAAC9lB,IAAI,CAAC;MACfqH,KAAK,EAAE1V,CAAC;MACR6zB,GAAG;MACHF,GAAG,EAAEE,GAAG,CAAC/B,QAAQ;MACjBnN,UAAU,EAAEkP,GAAG,CAACjP,YAAY,CAAC,CAAC;MAC9B4G,MAAM,EAAEqI,GAAG,CAACrI;IACd,CAAC,CAAC;EACJ;EACA,OAAO2I,WAAW;AACpB;AACA,SAASC,aAAaA,CAACC,OAAO,EAAEC,MAAM,EAAE;EACtC,IAAIt0B,CAAC,EAAEyV,IAAI,EAAE8e,MAAM;EACnB,KAAKv0B,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG4e,OAAO,CAAChnB,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAChDu0B,MAAM,GAAGF,OAAO,CAACr0B,CAAC,CAAC;IACnB,IAAIu0B,MAAM,CAAC5P,UAAU,EAAE;MACrB4P,MAAM,CAACjP,KAAK,GAAGiP,MAAM,CAACV,GAAG,CAACW,QAAQ,IAAIF,MAAM,CAACG,cAAc;MAC3DF,MAAM,CAAClP,MAAM,GAAGiP,MAAM,CAACI,aAAa;IACtC,CAAC,MAAM;MACLH,MAAM,CAACjP,KAAK,GAAGgP,MAAM,CAACK,YAAY;MAClCJ,MAAM,CAAClP,MAAM,GAAGkP,MAAM,CAACV,GAAG,CAACW,QAAQ,IAAIF,MAAM,CAACM,eAAe;IAC/D;EACF;AACF;AACA,SAASC,gBAAgBA,CAACX,KAAK,EAAE;EAC/B,MAAMC,WAAW,GAAGF,SAAS,CAACC,KAAK,CAAC;EACpC,MAAMM,QAAQ,GAAGV,YAAY,CAACK,WAAW,CAAC9b,MAAM,CAACyc,IAAI,IAAIA,IAAI,CAACjB,GAAG,CAACW,QAAQ,CAAC,EAAE,IAAI,CAAC;EAClF,MAAMrf,IAAI,GAAG2e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC;EACtE,MAAMlf,KAAK,GAAG6e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,OAAO,CAAC,CAAC;EAClE,MAAMnf,GAAG,GAAG8e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC;EACpE,MAAMjf,MAAM,GAAG4e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,QAAQ,CAAC,CAAC;EACpE,MAAMY,gBAAgB,GAAGnB,2BAA2B,CAACO,WAAW,EAAE,GAAG,CAAC;EACtE,MAAMa,cAAc,GAAGpB,2BAA2B,CAACO,WAAW,EAAE,GAAG,CAAC;EACpE,OAAO;IACLK,QAAQ;IACRS,UAAU,EAAE9f,IAAI,CAAC+M,MAAM,CAAClN,GAAG,CAAC;IAC5BkgB,cAAc,EAAEjgB,KAAK,CAACiN,MAAM,CAAC8S,cAAc,CAAC,CAAC9S,MAAM,CAAChN,MAAM,CAAC,CAACgN,MAAM,CAAC6S,gBAAgB,CAAC;IACpFjW,SAAS,EAAE2U,gBAAgB,CAACU,WAAW,EAAE,WAAW,CAAC;IACrDgB,QAAQ,EAAEhgB,IAAI,CAAC+M,MAAM,CAACjN,KAAK,CAAC,CAACiN,MAAM,CAAC8S,cAAc,CAAC;IACnDrQ,UAAU,EAAE3P,GAAG,CAACkN,MAAM,CAAChN,MAAM,CAAC,CAACgN,MAAM,CAAC6S,gBAAgB;EACxD,CAAC;AACH;AACA,SAASK,cAAcA,CAACC,UAAU,EAAEvW,SAAS,EAAEpf,CAAC,EAAEQ,CAAC,EAAE;EACnD,OAAOsM,IAAI,CAACmC,GAAG,CAAC0mB,UAAU,CAAC31B,CAAC,CAAC,EAAEof,SAAS,CAACpf,CAAC,CAAC,CAAC,GAAG8M,IAAI,CAACmC,GAAG,CAAC0mB,UAAU,CAACn1B,CAAC,CAAC,EAAE4e,SAAS,CAAC5e,CAAC,CAAC,CAAC;AACtF;AACA,SAASo1B,gBAAgBA,CAACD,UAAU,EAAEE,UAAU,EAAE;EAChDF,UAAU,CAACrgB,GAAG,GAAGxI,IAAI,CAACmC,GAAG,CAAC0mB,UAAU,CAACrgB,GAAG,EAAEugB,UAAU,CAACvgB,GAAG,CAAC;EACzDqgB,UAAU,CAAClgB,IAAI,GAAG3I,IAAI,CAACmC,GAAG,CAAC0mB,UAAU,CAAClgB,IAAI,EAAEogB,UAAU,CAACpgB,IAAI,CAAC;EAC5DkgB,UAAU,CAACngB,MAAM,GAAG1I,IAAI,CAACmC,GAAG,CAAC0mB,UAAU,CAACngB,MAAM,EAAEqgB,UAAU,CAACrgB,MAAM,CAAC;EAClEmgB,UAAU,CAACpgB,KAAK,GAAGzI,IAAI,CAACmC,GAAG,CAAC0mB,UAAU,CAACpgB,KAAK,EAAEsgB,UAAU,CAACtgB,KAAK,CAAC;AACjE;AACA,SAASugB,UAAUA,CAAC1W,SAAS,EAAEwV,MAAM,EAAEC,MAAM,EAAE;EAC7C,MAAMV,GAAG,GAAGU,MAAM,CAACV,GAAG;EACtB,MAAMwB,UAAU,GAAGvW,SAAS,CAACuW,UAAU;EACvC,IAAIp1B,QAAQ,CAACs0B,MAAM,CAACZ,GAAG,CAAC,EAAE;IACxB,OAAO;MAAC8B,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EACpC;EACA,IAAInB,MAAM,CAACpgB,IAAI,EAAE;IACf2K,SAAS,CAACyV,MAAM,CAACZ,GAAG,CAAC,IAAIY,MAAM,CAACpgB,IAAI;EACtC;EACAogB,MAAM,CAACpgB,IAAI,GAAGogB,MAAM,CAAC5P,UAAU,GAAGkP,GAAG,CAACxO,MAAM,GAAGwO,GAAG,CAACvO,KAAK;EACxDxG,SAAS,CAACyV,MAAM,CAACZ,GAAG,CAAC,IAAIY,MAAM,CAACpgB,IAAI;EACpC,IAAI0f,GAAG,CAAC8B,UAAU,EAAE;IAClBL,gBAAgB,CAACD,UAAU,EAAExB,GAAG,CAAC8B,UAAU,CAAC,CAAC,CAAC;EAChD;EACA,MAAMC,QAAQ,GAAGppB,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE2lB,MAAM,CAACuB,UAAU,GAAGT,cAAc,CAACC,UAAU,EAAEvW,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EACxG,MAAMgX,SAAS,GAAGtpB,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE2lB,MAAM,CAACyB,WAAW,GAAGX,cAAc,CAACC,UAAU,EAAEvW,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;EAC1G,MAAMkX,YAAY,GAAGJ,QAAQ,KAAK9W,SAAS,CAAClc,CAAC;EAC7C,MAAMqzB,aAAa,GAAGH,SAAS,KAAKhX,SAAS,CAAC9d,CAAC;EAC/C8d,SAAS,CAAClc,CAAC,GAAGgzB,QAAQ;EACtB9W,SAAS,CAAC9d,CAAC,GAAG80B,SAAS;EACvB,OAAOvB,MAAM,CAAC5P,UAAU,GACpB;IAAC8Q,IAAI,EAAEO,YAAY;IAAEN,KAAK,EAAEO;EAAa,CAAC,GAC1C;IAACR,IAAI,EAAEQ,aAAa;IAAEP,KAAK,EAAEM;EAAY,CAAC;AAChD;AACA,SAASE,gBAAgBA,CAACpX,SAAS,EAAE;EACnC,MAAMuW,UAAU,GAAGvW,SAAS,CAACuW,UAAU;EACvC,SAASc,SAASA,CAACxC,GAAG,EAAE;IACtB,MAAMyC,MAAM,GAAG5pB,IAAI,CAACmC,GAAG,CAAC0mB,UAAU,CAAC1B,GAAG,CAAC,GAAG7U,SAAS,CAAC6U,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5D7U,SAAS,CAAC6U,GAAG,CAAC,IAAIyC,MAAM;IACxB,OAAOA,MAAM;EACf;EACAtX,SAAS,CAAC9b,CAAC,IAAImzB,SAAS,CAAC,KAAK,CAAC;EAC/BrX,SAAS,CAAChc,CAAC,IAAIqzB,SAAS,CAAC,MAAM,CAAC;EAChCA,SAAS,CAAC,OAAO,CAAC;EAClBA,SAAS,CAAC,QAAQ,CAAC;AACrB;AACA,SAASE,UAAUA,CAAC1R,UAAU,EAAE7F,SAAS,EAAE;EACzC,MAAMuW,UAAU,GAAGvW,SAAS,CAACuW,UAAU;EACvC,SAASiB,kBAAkBA,CAACC,SAAS,EAAE;IACrC,MAAMC,MAAM,GAAG;MAACrhB,IAAI,EAAE,CAAC;MAAEH,GAAG,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAC,CAAC;IACrDqhB,SAAS,CAAClqB,OAAO,CAAEsnB,GAAG,IAAK;MACzB6C,MAAM,CAAC7C,GAAG,CAAC,GAAGnnB,IAAI,CAACmC,GAAG,CAACmQ,SAAS,CAAC6U,GAAG,CAAC,EAAE0B,UAAU,CAAC1B,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAO6C,MAAM;EACf;EACA,OAAO7R,UAAU,GACb2R,kBAAkB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,GACrCA,kBAAkB,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3C;AACA,SAASG,QAAQA,CAACvC,KAAK,EAAEpV,SAAS,EAAEwV,MAAM,EAAE;EAC1C,MAAMoC,UAAU,GAAG,EAAE;EACrB,IAAI12B,CAAC,EAAEyV,IAAI,EAAE8e,MAAM,EAAEV,GAAG,EAAE8C,KAAK,EAAErI,OAAO;EACxC,KAAKtuB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGye,KAAK,CAAC7mB,MAAM,EAAEspB,KAAK,GAAG,CAAC,EAAE32B,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACzDu0B,MAAM,GAAGL,KAAK,CAACl0B,CAAC,CAAC;IACjB6zB,GAAG,GAAGU,MAAM,CAACV,GAAG;IAChBA,GAAG,CAAC3iB,MAAM,CACRqjB,MAAM,CAACjP,KAAK,IAAIxG,SAAS,CAAClc,CAAC,EAC3B2xB,MAAM,CAAClP,MAAM,IAAIvG,SAAS,CAAC9d,CAAC,EAC5Bq1B,UAAU,CAAC9B,MAAM,CAAC5P,UAAU,EAAE7F,SAAS,CACzC,CAAC;IACD,MAAM;MAAC2W,IAAI;MAAEC;IAAK,CAAC,GAAGF,UAAU,CAAC1W,SAAS,EAAEwV,MAAM,EAAEC,MAAM,CAAC;IAC3DoC,KAAK,IAAIlB,IAAI,IAAIiB,UAAU,CAACrpB,MAAM;IAClCihB,OAAO,GAAGA,OAAO,IAAIoH,KAAK;IAC1B,IAAI,CAAC7B,GAAG,CAACW,QAAQ,EAAE;MACjBkC,UAAU,CAACroB,IAAI,CAACkmB,MAAM,CAAC;IACzB;EACF;EACA,OAAOoC,KAAK,IAAIF,QAAQ,CAACC,UAAU,EAAE5X,SAAS,EAAEwV,MAAM,CAAC,IAAIhG,OAAO;AACpE;AACA,SAASsI,UAAUA,CAAC1C,KAAK,EAAEpV,SAAS,EAAEwV,MAAM,EAAE;EAC5C,MAAMuC,WAAW,GAAGvC,MAAM,CAACwC,OAAO;EAClC,IAAIh0B,CAAC,GAAGgc,SAAS,CAAChc,CAAC;EACnB,IAAIE,CAAC,GAAG8b,SAAS,CAAC9b,CAAC;EACnB,IAAIhD,CAAC,EAAEyV,IAAI,EAAE8e,MAAM,EAAEV,GAAG;EACxB,KAAK7zB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGye,KAAK,CAAC7mB,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAC9Cu0B,MAAM,GAAGL,KAAK,CAACl0B,CAAC,CAAC;IACjB6zB,GAAG,GAAGU,MAAM,CAACV,GAAG;IAChB,IAAIU,MAAM,CAAC5P,UAAU,EAAE;MACrBkP,GAAG,CAAC1e,IAAI,GAAG0e,GAAG,CAACW,QAAQ,GAAGqC,WAAW,CAAC1hB,IAAI,GAAG2J,SAAS,CAAC3J,IAAI;MAC3D0e,GAAG,CAAC5e,KAAK,GAAG4e,GAAG,CAACW,QAAQ,GAAGF,MAAM,CAACuB,UAAU,GAAGgB,WAAW,CAAC5hB,KAAK,GAAG6J,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAClc,CAAC;MAC/FixB,GAAG,CAAC7e,GAAG,GAAGhS,CAAC;MACX6wB,GAAG,CAAC3e,MAAM,GAAGlS,CAAC,GAAG6wB,GAAG,CAACxO,MAAM;MAC3BwO,GAAG,CAACvO,KAAK,GAAGuO,GAAG,CAAC5e,KAAK,GAAG4e,GAAG,CAAC1e,IAAI;MAChCnS,CAAC,GAAG6wB,GAAG,CAAC3e,MAAM;IAChB,CAAC,MAAM;MACL2e,GAAG,CAAC1e,IAAI,GAAGrS,CAAC;MACZ+wB,GAAG,CAAC5e,KAAK,GAAGnS,CAAC,GAAG+wB,GAAG,CAACvO,KAAK;MACzBuO,GAAG,CAAC7e,GAAG,GAAG6e,GAAG,CAACW,QAAQ,GAAGqC,WAAW,CAAC7hB,GAAG,GAAG8J,SAAS,CAAC9J,GAAG;MACxD6e,GAAG,CAAC3e,MAAM,GAAG2e,GAAG,CAACW,QAAQ,GAAGF,MAAM,CAACyB,WAAW,GAAGc,WAAW,CAAC5hB,KAAK,GAAG6J,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC9d,CAAC;MAChG6yB,GAAG,CAACxO,MAAM,GAAGwO,GAAG,CAAC3e,MAAM,GAAG2e,GAAG,CAAC7e,GAAG;MACjClS,CAAC,GAAG+wB,GAAG,CAAC5e,KAAK;IACf;EACF;EACA6J,SAAS,CAAChc,CAAC,GAAGA,CAAC;EACfgc,SAAS,CAAC9b,CAAC,GAAGA,CAAC;AACjB;AACA3C,QAAQ,CAAC4N,GAAG,CAAC,QAAQ,EAAE;EACrB6oB,OAAO,EAAE;IACP9hB,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AACF,IAAIkf,OAAO,GAAG;EACZ0C,MAAMA,CAAClrB,KAAK,EAAE0B,IAAI,EAAE;IAClB,IAAI,CAAC1B,KAAK,CAACqoB,KAAK,EAAE;MAChBroB,KAAK,CAACqoB,KAAK,GAAG,EAAE;IAClB;IACA3mB,IAAI,CAACinB,QAAQ,GAAGjnB,IAAI,CAACinB,QAAQ,IAAI,KAAK;IACtCjnB,IAAI,CAACukB,QAAQ,GAAGvkB,IAAI,CAACukB,QAAQ,IAAI,KAAK;IACtCvkB,IAAI,CAACie,MAAM,GAAGje,IAAI,CAACie,MAAM,IAAI,CAAC;IAC9Bje,IAAI,CAACypB,OAAO,GAAGzpB,IAAI,CAACypB,OAAO,IAAI,YAAW;MACxC,OAAO,CAAC;QACN9zB,CAAC,EAAE,CAAC;QACJoK,IAAIA,CAACwR,SAAS,EAAE;UACdvR,IAAI,CAACD,IAAI,CAACwR,SAAS,CAAC;QACtB;MACF,CAAC,CAAC;IACJ,CAAC;IACDjT,KAAK,CAACqoB,KAAK,CAAC7lB,IAAI,CAACd,IAAI,CAAC;EACxB,CAAC;EACD0pB,SAASA,CAACprB,KAAK,EAAEqrB,UAAU,EAAE;IAC3B,MAAMxhB,KAAK,GAAG7J,KAAK,CAACqoB,KAAK,GAAGroB,KAAK,CAACqoB,KAAK,CAACvO,OAAO,CAACuR,UAAU,CAAC,GAAG,CAAC,CAAC;IAChE,IAAIxhB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB7J,KAAK,CAACqoB,KAAK,CAAC7S,MAAM,CAAC3L,KAAK,EAAE,CAAC,CAAC;IAC9B;EACF,CAAC;EACDzC,SAASA,CAACpH,KAAK,EAAE0B,IAAI,EAAEkG,OAAO,EAAE;IAC9BlG,IAAI,CAACinB,QAAQ,GAAG/gB,OAAO,CAAC+gB,QAAQ;IAChCjnB,IAAI,CAACukB,QAAQ,GAAGre,OAAO,CAACqe,QAAQ;IAChCvkB,IAAI,CAACie,MAAM,GAAG/X,OAAO,CAAC+X,MAAM;EAC9B,CAAC;EACDta,MAAMA,CAACrF,KAAK,EAAEyZ,KAAK,EAAED,MAAM,EAAE8R,UAAU,EAAE;IACvC,IAAI,CAACtrB,KAAK,EAAE;MACV;IACF;IACA,MAAMirB,OAAO,GAAGrzB,SAAS,CAACoI,KAAK,CAAC4H,OAAO,CAAC8gB,MAAM,CAACuC,OAAO,CAAC;IACvD,MAAMrC,cAAc,GAAGnP,KAAK,GAAGwR,OAAO,CAACxR,KAAK;IAC5C,MAAMsP,eAAe,GAAGvP,MAAM,GAAGyR,OAAO,CAACzR,MAAM;IAC/C,MAAM6O,KAAK,GAAGW,gBAAgB,CAAChpB,KAAK,CAACqoB,KAAK,CAAC;IAC3C,MAAMkD,aAAa,GAAGlD,KAAK,CAACiB,QAAQ;IACpC,MAAMkC,eAAe,GAAGnD,KAAK,CAACvP,UAAU;IACxChhB,IAAI,CAACkI,KAAK,CAACqoB,KAAK,EAAEL,GAAG,IAAI;MACvB,IAAI,OAAOA,GAAG,CAACyD,YAAY,KAAK,UAAU,EAAE;QAC1CzD,GAAG,CAACyD,YAAY,CAAC,CAAC;MACpB;IACF,CAAC,CAAC;IACF,MAAMC,uBAAuB,GAAGH,aAAa,CAAC5oB,MAAM,CAAC,CAAC8b,KAAK,EAAEwK,IAAI,KAC/DA,IAAI,CAACjB,GAAG,CAACpgB,OAAO,IAAIqhB,IAAI,CAACjB,GAAG,CAACpgB,OAAO,CAAC4b,OAAO,KAAK,KAAK,GAAG/E,KAAK,GAAGA,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;IACrF,MAAMgK,MAAM,GAAGviB,MAAM,CAAC8N,MAAM,CAAC;MAC3BgW,UAAU,EAAEvQ,KAAK;MACjByQ,WAAW,EAAE1Q,MAAM;MACnByR,OAAO;MACPrC,cAAc;MACdG,eAAe;MACfD,YAAY,EAAEF,cAAc,GAAG,CAAC,GAAG8C,uBAAuB;MAC1D7C,aAAa,EAAEE,eAAe,GAAG;IACnC,CAAC,CAAC;IACF,MAAMS,UAAU,GAAGtjB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE0iB,OAAO,CAAC;IAC7CxB,gBAAgB,CAACD,UAAU,EAAE5xB,SAAS,CAAC0zB,UAAU,CAAC,CAAC;IACnD,MAAMrY,SAAS,GAAG/M,MAAM,CAACqC,MAAM,CAAC;MAC9BihB,UAAU;MACVzyB,CAAC,EAAE6xB,cAAc;MACjBzzB,CAAC,EAAE4zB,eAAe;MAClB9xB,CAAC,EAAEg0B,OAAO,CAAC3hB,IAAI;MACfnS,CAAC,EAAE8zB,OAAO,CAAC9hB;IACb,CAAC,EAAE8hB,OAAO,CAAC;IACX1C,aAAa,CAACgD,aAAa,CAAClV,MAAM,CAACmV,eAAe,CAAC,EAAE/C,MAAM,CAAC;IAC5DmC,QAAQ,CAACvC,KAAK,CAACM,QAAQ,EAAE1V,SAAS,EAAEwV,MAAM,CAAC;IAC3CmC,QAAQ,CAACW,aAAa,EAAEtY,SAAS,EAAEwV,MAAM,CAAC;IAC1C,IAAImC,QAAQ,CAACY,eAAe,EAAEvY,SAAS,EAAEwV,MAAM,CAAC,EAAE;MAChDmC,QAAQ,CAACW,aAAa,EAAEtY,SAAS,EAAEwV,MAAM,CAAC;IAC5C;IACA4B,gBAAgB,CAACpX,SAAS,CAAC;IAC3B8X,UAAU,CAAC1C,KAAK,CAACe,UAAU,EAAEnW,SAAS,EAAEwV,MAAM,CAAC;IAC/CxV,SAAS,CAAChc,CAAC,IAAIgc,SAAS,CAAClc,CAAC;IAC1Bkc,SAAS,CAAC9b,CAAC,IAAI8b,SAAS,CAAC9d,CAAC;IAC1B41B,UAAU,CAAC1C,KAAK,CAACgB,cAAc,EAAEpW,SAAS,EAAEwV,MAAM,CAAC;IACnDzoB,KAAK,CAACiT,SAAS,GAAG;MAChB3J,IAAI,EAAE2J,SAAS,CAAC3J,IAAI;MACpBH,GAAG,EAAE8J,SAAS,CAAC9J,GAAG;MAClBC,KAAK,EAAE6J,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAClc,CAAC;MACnCsS,MAAM,EAAE4J,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC9d,CAAC;MACnCqkB,MAAM,EAAEvG,SAAS,CAAC9d,CAAC;MACnBskB,KAAK,EAAExG,SAAS,CAAClc;IACnB,CAAC;IACDe,IAAI,CAACuwB,KAAK,CAACpV,SAAS,EAAGyV,MAAM,IAAK;MAChC,MAAMV,GAAG,GAAGU,MAAM,CAACV,GAAG;MACtB9hB,MAAM,CAACqC,MAAM,CAACyf,GAAG,EAAEhoB,KAAK,CAACiT,SAAS,CAAC;MACnC+U,GAAG,CAAC3iB,MAAM,CAAC4N,SAAS,CAAClc,CAAC,EAAEkc,SAAS,CAAC9d,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;AACF,CAAC;AAED,MAAMw2B,YAAY,CAAC;EACjBC,cAAcA,CAACC,MAAM,EAAEjM,WAAW,EAAE,CAAC;EACrCkM,cAAcA,CAACzY,OAAO,EAAE;IACtB,OAAO,KAAK;EACd;EACA0Y,gBAAgBA,CAAC/rB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE,CAAC;EACzCC,mBAAmBA,CAACjsB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE,CAAC;EAC5CE,mBAAmBA,CAAA,EAAG;IACpB,OAAO,CAAC;EACV;EACAl0B,cAAcA,CAAC+U,OAAO,EAAE0M,KAAK,EAAED,MAAM,EAAEoG,WAAW,EAAE;IAClDnG,KAAK,GAAG9Y,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE2W,KAAK,IAAI1M,OAAO,CAAC0M,KAAK,CAAC;IAC3CD,MAAM,GAAGA,MAAM,IAAIzM,OAAO,CAACyM,MAAM;IACjC,OAAO;MACLC,KAAK;MACLD,MAAM,EAAE7Y,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE8c,WAAW,GAAGjf,IAAI,CAACgE,KAAK,CAAC8U,KAAK,GAAGmG,WAAW,CAAC,GAAGpG,MAAM;IAC5E,CAAC;EACH;EACA2S,UAAUA,CAACN,MAAM,EAAE;IACjB,OAAO,IAAI;EACb;AACF;AAEA,MAAMO,aAAa,SAAST,YAAY,CAAC;EACvCC,cAAcA,CAAClqB,IAAI,EAAE;IACnB,OAAOA,IAAI,IAAIA,IAAI,CAACkP,UAAU,IAAIlP,IAAI,CAACkP,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI;EACjE;AACF;AAEA,MAAMyb,WAAW,GAAG,UAAU;AAC9B,MAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,SAAS;EACnBC,YAAY,EAAE,YAAY;EAC1BC,WAAW,EAAE,WAAW;EACxBC,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAE,SAAS;EACpBC,YAAY,EAAE,UAAU;EACxBC,UAAU,EAAE;AACd,CAAC;AACD,MAAMC,aAAa,GAAG3kB,KAAK,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE;AAC7D,SAAS4kB,UAAUA,CAACpB,MAAM,EAAEjM,WAAW,EAAE;EACvC,MAAMI,KAAK,GAAG6L,MAAM,CAAC7L,KAAK;EAC1B,MAAMkN,YAAY,GAAGrB,MAAM,CAACsB,YAAY,CAAC,QAAQ,CAAC;EAClD,MAAMC,WAAW,GAAGvB,MAAM,CAACsB,YAAY,CAAC,OAAO,CAAC;EAChDtB,MAAM,CAACQ,WAAW,CAAC,GAAG;IACpBgB,OAAO,EAAE;MACP7T,MAAM,EAAE0T,YAAY;MACpBzT,KAAK,EAAE2T,WAAW;MAClBpN,KAAK,EAAE;QACLwD,OAAO,EAAExD,KAAK,CAACwD,OAAO;QACtBhK,MAAM,EAAEwG,KAAK,CAACxG,MAAM;QACpBC,KAAK,EAAEuG,KAAK,CAACvG;MACf;IACF;EACF,CAAC;EACDuG,KAAK,CAACwD,OAAO,GAAGxD,KAAK,CAACwD,OAAO,IAAI,OAAO;EACxCxD,KAAK,CAACsN,SAAS,GAAGtN,KAAK,CAACsN,SAAS,IAAI,YAAY;EACjD,IAAIN,aAAa,CAACI,WAAW,CAAC,EAAE;IAC9B,MAAMG,YAAY,GAAGn1B,YAAY,CAACyzB,MAAM,EAAE,OAAO,CAAC;IAClD,IAAI0B,YAAY,KAAKztB,SAAS,EAAE;MAC9B+rB,MAAM,CAACpS,KAAK,GAAG8T,YAAY;IAC7B;EACF;EACA,IAAIP,aAAa,CAACE,YAAY,CAAC,EAAE;IAC/B,IAAIrB,MAAM,CAAC7L,KAAK,CAACxG,MAAM,KAAK,EAAE,EAAE;MAC9BqS,MAAM,CAACrS,MAAM,GAAGqS,MAAM,CAACpS,KAAK,IAAImG,WAAW,IAAI,CAAC,CAAC;IACnD,CAAC,MAAM;MACL,MAAM4N,aAAa,GAAGp1B,YAAY,CAACyzB,MAAM,EAAE,QAAQ,CAAC;MACpD,IAAI2B,aAAa,KAAK1tB,SAAS,EAAE;QAC/B+rB,MAAM,CAACrS,MAAM,GAAGgU,aAAa;MAC/B;IACF;EACF;EACA,OAAO3B,MAAM;AACf;AACA,MAAM4B,oBAAoB,GAAGj1B,4BAA4B,GAAG;EAACk1B,OAAO,EAAE;AAAI,CAAC,GAAG,KAAK;AACnF,SAASC,WAAWA,CAACC,IAAI,EAAEztB,IAAI,EAAE6rB,QAAQ,EAAE;EACzC4B,IAAI,CAAC7B,gBAAgB,CAAC5rB,IAAI,EAAE6rB,QAAQ,EAAEyB,oBAAoB,CAAC;AAC7D;AACA,SAASI,cAAcA,CAAC7tB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EAC7ChsB,KAAK,CAAC6rB,MAAM,CAACI,mBAAmB,CAAC9rB,IAAI,EAAE6rB,QAAQ,EAAEyB,oBAAoB,CAAC;AACxE;AACA,SAASK,eAAeA,CAACxrB,KAAK,EAAEtC,KAAK,EAAE;EACrC,MAAMG,IAAI,GAAGmsB,WAAW,CAAChqB,KAAK,CAACnC,IAAI,CAAC,IAAImC,KAAK,CAACnC,IAAI;EAClD,MAAM;IAAClJ,CAAC;IAAEE;EAAC,CAAC,GAAGG,qBAAqB,CAACgL,KAAK,EAAEtC,KAAK,CAAC;EAClD,OAAO;IACLG,IAAI;IACJH,KAAK;IACL+tB,MAAM,EAAEzrB,KAAK;IACbrL,CAAC,EAAEA,CAAC,KAAK6I,SAAS,GAAG7I,CAAC,GAAG,IAAI;IAC7BE,CAAC,EAAEA,CAAC,KAAK2I,SAAS,GAAG3I,CAAC,GAAG;EAC3B,CAAC;AACH;AACA,SAAS62B,oBAAoBA,CAAChuB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAM,CAAC;EAClD,MAAM9e,OAAO,GAAGkhB,SAAS,IAAIpC,MAAM;EACnC,MAAMqC,QAAQ,GAAG,IAAIC,gBAAgB,CAACC,OAAO,IAAI;IAC/C,MAAMzhB,MAAM,GAAGzU,cAAc,CAAC6U,OAAO,CAAC;IACtCqhB,OAAO,CAAC5tB,OAAO,CAACqX,KAAK,IAAI;MACvB,KAAK,IAAI1jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0jB,KAAK,CAACwW,UAAU,CAAC7sB,MAAM,EAAErN,CAAC,EAAE,EAAE;QAChD,MAAMm6B,KAAK,GAAGzW,KAAK,CAACwW,UAAU,CAACl6B,CAAC,CAAC;QACjC,IAAIm6B,KAAK,KAAKvhB,OAAO,IAAIuhB,KAAK,KAAK3hB,MAAM,EAAE;UACzCqf,QAAQ,CAACnU,KAAK,CAAC1T,MAAM,CAAC;QACxB;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF+pB,QAAQ,CAACK,OAAO,CAACC,QAAQ,EAAE;IAACC,SAAS,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;EAC5D,OAAOR,QAAQ;AACjB;AACA,SAASS,oBAAoBA,CAAC3uB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAM,CAAC;EAClD,IAAI,CAACoC,SAAS,EAAE;IACd;EACF;EACA,MAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAACC,OAAO,IAAI;IAC/CA,OAAO,CAAC5tB,OAAO,CAACqX,KAAK,IAAI;MACvB,KAAK,IAAI1jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0jB,KAAK,CAAC+W,YAAY,CAACptB,MAAM,EAAErN,CAAC,EAAE,EAAE;QAClD,IAAI0jB,KAAK,CAAC+W,YAAY,CAACz6B,CAAC,CAAC,KAAK03B,MAAM,EAAE;UACpCG,QAAQ,CAAC,CAAC;UACV;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFkC,QAAQ,CAACK,OAAO,CAACN,SAAS,EAAE;IAACQ,SAAS,EAAE;EAAI,CAAC,CAAC;EAC9C,OAAOP,QAAQ;AACjB;AACA,MAAMW,kBAAkB,GAAG,IAAIlvB,GAAG,CAAC,CAAC;AACpC,IAAImvB,mBAAmB,GAAG,CAAC;AAC3B,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAMC,GAAG,GAAG/tB,MAAM,CAACguB,gBAAgB;EACnC,IAAID,GAAG,KAAKF,mBAAmB,EAAE;IAC/B;EACF;EACAA,mBAAmB,GAAGE,GAAG;EACzBH,kBAAkB,CAACruB,OAAO,CAAC,CAACmG,MAAM,EAAE3G,KAAK,KAAK;IAC5C,IAAIA,KAAK,CAACkvB,uBAAuB,KAAKF,GAAG,EAAE;MACzCroB,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;AACJ;AACA,SAASwoB,6BAA6BA,CAACnvB,KAAK,EAAE2G,MAAM,EAAE;EACpD,IAAI,CAACkoB,kBAAkB,CAACvmB,IAAI,EAAE;IAC5BrH,MAAM,CAAC8qB,gBAAgB,CAAC,QAAQ,EAAEgD,cAAc,CAAC;EACnD;EACAF,kBAAkB,CAACzsB,GAAG,CAACpC,KAAK,EAAE2G,MAAM,CAAC;AACvC;AACA,SAASyoB,+BAA+BA,CAACpvB,KAAK,EAAE;EAC9C6uB,kBAAkB,CAAC1rB,MAAM,CAACnD,KAAK,CAAC;EAChC,IAAI,CAAC6uB,kBAAkB,CAACvmB,IAAI,EAAE;IAC5BrH,MAAM,CAACgrB,mBAAmB,CAAC,QAAQ,EAAE8C,cAAc,CAAC;EACtD;AACF;AACA,SAASM,oBAAoBA,CAACrvB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAM,CAAC;EAClD,IAAI,CAACoC,SAAS,EAAE;IACd;EACF;EACA,MAAMtnB,MAAM,GAAGrO,SAAS,CAAC,CAACmhB,KAAK,EAAED,MAAM,KAAK;IAC1C,MAAMziB,CAAC,GAAGk3B,SAAS,CAACqB,WAAW;IAC/BtD,QAAQ,CAACvS,KAAK,EAAED,MAAM,CAAC;IACvB,IAAIziB,CAAC,GAAGk3B,SAAS,CAACqB,WAAW,EAAE;MAC7BtD,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE/qB,MAAM,CAAC;EACV,MAAMitB,QAAQ,GAAG,IAAIqB,cAAc,CAACnB,OAAO,IAAI;IAC7C,MAAMvW,KAAK,GAAGuW,OAAO,CAAC,CAAC,CAAC;IACxB,MAAM3U,KAAK,GAAG5B,KAAK,CAAC2X,WAAW,CAAC/V,KAAK;IACrC,MAAMD,MAAM,GAAG3B,KAAK,CAAC2X,WAAW,CAAChW,MAAM;IACvC,IAAIC,KAAK,KAAK,CAAC,IAAID,MAAM,KAAK,CAAC,EAAE;MAC/B;IACF;IACA7S,MAAM,CAAC8S,KAAK,EAAED,MAAM,CAAC;EACvB,CAAC,CAAC;EACF0U,QAAQ,CAACK,OAAO,CAACN,SAAS,CAAC;EAC3BkB,6BAA6B,CAACnvB,KAAK,EAAE2G,MAAM,CAAC;EAC5C,OAAOunB,QAAQ;AACjB;AACA,SAASuB,eAAeA,CAACzvB,KAAK,EAAEG,IAAI,EAAE+tB,QAAQ,EAAE;EAC9C,IAAIA,QAAQ,EAAE;IACZA,QAAQ,CAACwB,UAAU,CAAC,CAAC;EACvB;EACA,IAAIvvB,IAAI,KAAK,QAAQ,EAAE;IACrBivB,+BAA+B,CAACpvB,KAAK,CAAC;EACxC;AACF;AACA,SAAS2vB,oBAAoBA,CAAC3vB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAM+D,KAAK,GAAGt3B,SAAS,CAAEgK,KAAK,IAAK;IACjC,IAAItC,KAAK,CAAC0N,GAAG,KAAK,IAAI,EAAE;MACtBse,QAAQ,CAAC8B,eAAe,CAACxrB,KAAK,EAAEtC,KAAK,CAAC,CAAC;IACzC;EACF,CAAC,EAAEA,KAAK,EAAG6vB,IAAI,IAAK;IAClB,MAAMvtB,KAAK,GAAGutB,IAAI,CAAC,CAAC,CAAC;IACrB,OAAO,CAACvtB,KAAK,EAAEA,KAAK,CAAC+Z,OAAO,EAAE/Z,KAAK,CAACga,OAAO,CAAC;EAC9C,CAAC,CAAC;EACFqR,WAAW,CAAC9B,MAAM,EAAE1rB,IAAI,EAAEyvB,KAAK,CAAC;EAChC,OAAOA,KAAK;AACd;AACA,MAAME,WAAW,SAASnE,YAAY,CAAC;EACrCC,cAAcA,CAACC,MAAM,EAAEjM,WAAW,EAAE;IAClC,MAAMvM,OAAO,GAAGwY,MAAM,IAAIA,MAAM,CAACjb,UAAU,IAAIib,MAAM,CAACjb,UAAU,CAAC,IAAI,CAAC;IACtE,IAAIyC,OAAO,IAAIA,OAAO,CAACwY,MAAM,KAAKA,MAAM,EAAE;MACxCoB,UAAU,CAACpB,MAAM,EAAEjM,WAAW,CAAC;MAC/B,OAAOvM,OAAO;IAChB;IACA,OAAO,IAAI;EACb;EACAyY,cAAcA,CAACzY,OAAO,EAAE;IACtB,MAAMwY,MAAM,GAAGxY,OAAO,CAACwY,MAAM;IAC7B,IAAI,CAACA,MAAM,CAACQ,WAAW,CAAC,EAAE;MACxB,OAAO,KAAK;IACd;IACA,MAAMgB,OAAO,GAAGxB,MAAM,CAACQ,WAAW,CAAC,CAACgB,OAAO;IAC3C,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC7sB,OAAO,CAAE4D,IAAI,IAAK;MACpC,MAAMiE,KAAK,GAAGglB,OAAO,CAACjpB,IAAI,CAAC;MAC3B,IAAI5O,aAAa,CAAC6S,KAAK,CAAC,EAAE;QACxBwjB,MAAM,CAACkE,eAAe,CAAC3rB,IAAI,CAAC;MAC9B,CAAC,MAAM;QACLynB,MAAM,CAACmE,YAAY,CAAC5rB,IAAI,EAAEiE,KAAK,CAAC;MAClC;IACF,CAAC,CAAC;IACF,MAAM2X,KAAK,GAAGqN,OAAO,CAACrN,KAAK,IAAI,CAAC,CAAC;IACjC9Z,MAAM,CAACC,IAAI,CAAC6Z,KAAK,CAAC,CAACxf,OAAO,CAAE+G,GAAG,IAAK;MAClCskB,MAAM,CAAC7L,KAAK,CAACzY,GAAG,CAAC,GAAGyY,KAAK,CAACzY,GAAG,CAAC;IAChC,CAAC,CAAC;IACFskB,MAAM,CAACpS,KAAK,GAAGoS,MAAM,CAACpS,KAAK;IAC3B,OAAOoS,MAAM,CAACQ,WAAW,CAAC;IAC1B,OAAO,IAAI;EACb;EACAN,gBAAgBA,CAAC/rB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;IACtC,IAAI,CAACC,mBAAmB,CAACjsB,KAAK,EAAEG,IAAI,CAAC;IACrC,MAAM8vB,OAAO,GAAGjwB,KAAK,CAACkwB,QAAQ,KAAKlwB,KAAK,CAACkwB,QAAQ,GAAG,CAAC,CAAC,CAAC;IACvD,MAAMC,QAAQ,GAAG;MACfC,MAAM,EAAEpC,oBAAoB;MAC5BqC,MAAM,EAAE1B,oBAAoB;MAC5BhoB,MAAM,EAAE0oB;IACV,CAAC;IACD,MAAM/J,OAAO,GAAG6K,QAAQ,CAAChwB,IAAI,CAAC,IAAIwvB,oBAAoB;IACtDM,OAAO,CAAC9vB,IAAI,CAAC,GAAGmlB,OAAO,CAACtlB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,CAAC;EAChD;EACAC,mBAAmBA,CAACjsB,KAAK,EAAEG,IAAI,EAAE;IAC/B,MAAM8vB,OAAO,GAAGjwB,KAAK,CAACkwB,QAAQ,KAAKlwB,KAAK,CAACkwB,QAAQ,GAAG,CAAC,CAAC,CAAC;IACvD,MAAMN,KAAK,GAAGK,OAAO,CAAC9vB,IAAI,CAAC;IAC3B,IAAI,CAACyvB,KAAK,EAAE;MACV;IACF;IACA,MAAMO,QAAQ,GAAG;MACfC,MAAM,EAAEX,eAAe;MACvBY,MAAM,EAAEZ,eAAe;MACvB9oB,MAAM,EAAE8oB;IACV,CAAC;IACD,MAAMnK,OAAO,GAAG6K,QAAQ,CAAChwB,IAAI,CAAC,IAAI0tB,cAAc;IAChDvI,OAAO,CAACtlB,KAAK,EAAEG,IAAI,EAAEyvB,KAAK,CAAC;IAC3BK,OAAO,CAAC9vB,IAAI,CAAC,GAAGL,SAAS;EAC3B;EACAosB,mBAAmBA,CAAA,EAAG;IACpB,OAAOjrB,MAAM,CAACguB,gBAAgB;EAChC;EACAj3B,cAAcA,CAAC6zB,MAAM,EAAEpS,KAAK,EAAED,MAAM,EAAEoG,WAAW,EAAE;IACjD,OAAO5nB,cAAc,CAAC6zB,MAAM,EAAEpS,KAAK,EAAED,MAAM,EAAEoG,WAAW,CAAC;EAC3D;EACAuM,UAAUA,CAACN,MAAM,EAAE;IACjB,MAAMoC,SAAS,GAAG/1B,cAAc,CAAC2zB,MAAM,CAAC;IACxC,OAAO,CAAC,EAAEoC,SAAS,IAAI/1B,cAAc,CAAC+1B,SAAS,CAAC,CAAC;EACnD;AACF;AAEA,MAAMqC,OAAO,CAAC;EACZ9wB,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACvI,CAAC,GAAG6I,SAAS;IAClB,IAAI,CAAC3I,CAAC,GAAG2I,SAAS;IAClB,IAAI,CAACsF,MAAM,GAAG,KAAK;IACnB,IAAI,CAACwC,OAAO,GAAG9H,SAAS;IACxB,IAAI,CAACmI,WAAW,GAAGnI,SAAS;EAC9B;EACAywB,eAAeA,CAAC3J,gBAAgB,EAAE;IAChC,MAAM;MAAC3vB,CAAC;MAAEE;IAAC,CAAC,GAAG,IAAI,CAACq5B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IAC1D,OAAO;MAAC3vB,CAAC;MAAEE;IAAC,CAAC;EACf;EACAs5B,QAAQA,CAAA,EAAG;IACT,OAAOz5B,QAAQ,CAAC,IAAI,CAACC,CAAC,CAAC,IAAID,QAAQ,CAAC,IAAI,CAACG,CAAC,CAAC;EAC7C;EACAq5B,QAAQA,CAACroB,KAAK,EAAEuoB,KAAK,EAAE;IACrB,MAAM3vB,EAAE,GAAG,IAAI;IACf,MAAMd,KAAK,GAAG,IAAI,CAACgI,WAAW;IAC9B,IAAI,CAACyoB,KAAK,IAAI,CAACzwB,KAAK,EAAE;MACpB,OAAOc,EAAE;IACX;IACA,MAAM4vB,GAAG,GAAG,CAAC,CAAC;IACdxoB,KAAK,CAAC3H,OAAO,CAAC4D,IAAI,IAAI;MACpBusB,GAAG,CAACvsB,IAAI,CAAC,GAAGnE,KAAK,CAACmE,IAAI,CAAC,IAAInE,KAAK,CAACmE,IAAI,CAAC,CAACgB,MAAM,CAAC,CAAC,GAAGnF,KAAK,CAACmE,IAAI,CAAC,CAACc,GAAG,GAAGnE,EAAE,CAACqD,IAAI,CAAC;IAC9E,CAAC,CAAC;IACF,OAAOusB,GAAG;EACZ;AACF;AACAL,OAAO,CAAC97B,QAAQ,GAAG,CAAC,CAAC;AACrB87B,OAAO,CAACM,aAAa,GAAG9wB,SAAS;AAEjC,MAAM+wB,UAAU,GAAG;EACjBnpB,MAAMA,CAACW,KAAK,EAAE;IACZ,OAAO/T,OAAO,CAAC+T,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,GAAGA,KAAK;EAC5C,CAAC;EACDyoB,OAAOA,CAACC,SAAS,EAAElnB,KAAK,EAAEgN,KAAK,EAAE;IAC/B,IAAIka,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,MAAM1R,MAAM,GAAG,IAAI,CAACrf,KAAK,CAAC4H,OAAO,CAACyX,MAAM;IACxC,IAAI2R,QAAQ;IACZ,IAAIC,KAAK,GAAGF,SAAS;IACrB,IAAIla,KAAK,CAACrV,MAAM,GAAG,CAAC,EAAE;MACpB,MAAM0vB,OAAO,GAAGvwB,IAAI,CAACmC,GAAG,CAACnC,IAAI,CAACgW,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAACxO,KAAK,CAAC,EAAE1H,IAAI,CAACgW,GAAG,CAACE,KAAK,CAACA,KAAK,CAACrV,MAAM,GAAG,CAAC,CAAC,CAAC6G,KAAK,CAAC,CAAC;MAC3F,IAAI6oB,OAAO,GAAG,IAAI,IAAIA,OAAO,GAAG,KAAK,EAAE;QACrCF,QAAQ,GAAG,YAAY;MACzB;MACAC,KAAK,GAAGE,cAAc,CAACJ,SAAS,EAAEla,KAAK,CAAC;IAC1C;IACA,MAAMua,QAAQ,GAAG14B,KAAK,CAACiI,IAAI,CAACgW,GAAG,CAACsa,KAAK,CAAC,CAAC;IACvC,MAAMI,UAAU,GAAG1wB,IAAI,CAACmC,GAAG,CAACnC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACgE,KAAK,CAACysB,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACvE,MAAMxpB,OAAO,GAAG;MAACopB,QAAQ;MAAEM,qBAAqB,EAAED,UAAU;MAAEE,qBAAqB,EAAEF;IAAU,CAAC;IAChGnrB,MAAM,CAACqC,MAAM,CAACX,OAAO,EAAE,IAAI,CAACA,OAAO,CAACiP,KAAK,CAAC2N,MAAM,CAAC;IACjD,OAAOhuB,YAAY,CAACu6B,SAAS,EAAE1R,MAAM,EAAEzX,OAAO,CAAC;EACjD,CAAC;EACD4pB,WAAWA,CAACT,SAAS,EAAElnB,KAAK,EAAEgN,KAAK,EAAE;IACnC,IAAIka,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,MAAMxrB,MAAM,GAAGwrB,SAAS,GAAIpwB,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACgE,KAAK,CAACjM,KAAK,CAACq4B,SAAS,CAAC,CAAC,CAAE;IACvE,IAAIxrB,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChD,OAAOsrB,UAAU,CAACC,OAAO,CAAC9vB,IAAI,CAAC,IAAI,EAAE+vB,SAAS,EAAElnB,KAAK,EAAEgN,KAAK,CAAC;IAC/D;IACA,OAAO,EAAE;EACX;AACF,CAAC;AACD,SAASsa,cAAcA,CAACJ,SAAS,EAAEla,KAAK,EAAE;EACxC,IAAIoa,KAAK,GAAGpa,KAAK,CAACrV,MAAM,GAAG,CAAC,GAAGqV,KAAK,CAAC,CAAC,CAAC,CAACxO,KAAK,GAAGwO,KAAK,CAAC,CAAC,CAAC,CAACxO,KAAK,GAAGwO,KAAK,CAAC,CAAC,CAAC,CAACxO,KAAK,GAAGwO,KAAK,CAAC,CAAC,CAAC,CAACxO,KAAK;EAChG,IAAI1H,IAAI,CAACgW,GAAG,CAACsa,KAAK,CAAC,GAAG,CAAC,IAAIF,SAAS,KAAKpwB,IAAI,CAACgE,KAAK,CAACosB,SAAS,CAAC,EAAE;IAC9DE,KAAK,GAAGF,SAAS,GAAGpwB,IAAI,CAACgE,KAAK,CAACosB,SAAS,CAAC;EAC3C;EACA,OAAOE,KAAK;AACd;AACA,IAAIQ,KAAK,GAAG;EAACZ;AAAU,CAAC;AAExBr8B,QAAQ,CAAC4N,GAAG,CAAC,OAAO,EAAE;EACpBohB,OAAO,EAAE,IAAI;EACbtI,MAAM,EAAE,KAAK;EACbpS,OAAO,EAAE,KAAK;EACduS,WAAW,EAAE,KAAK;EAClBqW,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE,CAAC;EACRxW,IAAI,EAAE;IACJqI,OAAO,EAAE,IAAI;IACblD,SAAS,EAAE,CAAC;IACZsR,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,IAAI;IACrBC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,CAAC;IACbC,SAAS,EAAEA,CAACvkB,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAAC0Y,SAAS;IAC/C2R,SAAS,EAAEA,CAACxkB,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAAC1T,KAAK;IAC3CgnB,MAAM,EAAE,KAAK;IACbgX,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE,GAAG;IACrB9R,WAAW,EAAEA,CAAC5S,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAAC1T,KAAK;IAC7CqrB,WAAW,EAAEA,CAAC9R,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAAC0Y;EAC1C,CAAC;EACDxE,KAAK,EAAE;IACL0H,OAAO,EAAE,KAAK;IACdvD,IAAI,EAAE,EAAE;IACRgL,OAAO,EAAE;MACP9hB,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV;EACF,CAAC;EACDwN,KAAK,EAAE;IACLub,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,KAAK;IACbC,eAAe,EAAE,CAAC;IAClBC,eAAe,EAAE,EAAE;IACnBvH,OAAO,EAAE,CAAC;IACVzH,OAAO,EAAE,IAAI;IACbiP,QAAQ,EAAE,IAAI;IACdC,eAAe,EAAE,CAAC;IAClBC,WAAW,EAAE,CAAC;IACd35B,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAACnpB,MAAM;IACjCkrB,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AACFv+B,QAAQ,CAACw+B,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnDx+B,QAAQ,CAACw+B,KAAK,CAAC,YAAY,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,CAAC;AACxDx+B,QAAQ,CAACw+B,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnDx+B,QAAQ,CAAC6R,QAAQ,CAAC,OAAO,EAAE;EACzBC,SAAS,EAAE,KAAK;EAChBE,WAAW,EAAGC,IAAI,IAAK,CAACA,IAAI,CAACwsB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAACxsB,IAAI,CAACwsB,UAAU,CAAC,OAAO,CAAC,IAAIxsB,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,QAAQ;EAC1HF,UAAU,EAAGE,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;AAC1D,CAAC,CAAC;AACFjS,QAAQ,CAAC6R,QAAQ,CAAC,QAAQ,EAAE;EAC1BC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,SAASmsB,QAAQA,CAAC9pB,KAAK,EAAEkO,KAAK,EAAE;EAC9B,MAAMqc,QAAQ,GAAGvqB,KAAK,CAACf,OAAO,CAACiP,KAAK;EACpC,MAAMsc,UAAU,GAAGD,QAAQ,CAACE,aAAa,IAAIC,iBAAiB,CAAC1qB,KAAK,CAAC;EACrE,MAAM2qB,YAAY,GAAGJ,QAAQ,CAACL,KAAK,CAACU,OAAO,GAAGC,eAAe,CAAC3c,KAAK,CAAC,GAAG,EAAE;EACzE,MAAM4c,eAAe,GAAGH,YAAY,CAAC9xB,MAAM;EAC3C,MAAMkyB,KAAK,GAAGJ,YAAY,CAAC,CAAC,CAAC;EAC7B,MAAM3Z,IAAI,GAAG2Z,YAAY,CAACG,eAAe,GAAG,CAAC,CAAC;EAC9C,MAAME,QAAQ,GAAG,EAAE;EACnB,IAAIF,eAAe,GAAGN,UAAU,EAAE;IAChCS,UAAU,CAAC/c,KAAK,EAAE8c,QAAQ,EAAEL,YAAY,EAAEG,eAAe,GAAGN,UAAU,CAAC;IACvE,OAAOQ,QAAQ;EACjB;EACA,MAAM7V,OAAO,GAAG+V,gBAAgB,CAACP,YAAY,EAAEzc,KAAK,EAAEsc,UAAU,CAAC;EACjE,IAAIM,eAAe,GAAG,CAAC,EAAE;IACvB,IAAIt/B,CAAC,EAAEyV,IAAI;IACX,MAAMkqB,eAAe,GAAGL,eAAe,GAAG,CAAC,GAAG9yB,IAAI,CAACozB,KAAK,CAAC,CAACpa,IAAI,GAAG+Z,KAAK,KAAKD,eAAe,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;IACvG/X,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAEtoB,aAAa,CAACs+B,eAAe,CAAC,GAAG,CAAC,GAAGJ,KAAK,GAAGI,eAAe,EAAEJ,KAAK,CAAC;IACnG,KAAKv/B,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG6pB,eAAe,GAAG,CAAC,EAAEt/B,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;MACrDunB,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAEwV,YAAY,CAACn/B,CAAC,CAAC,EAAEm/B,YAAY,CAACn/B,CAAC,GAAG,CAAC,CAAC,CAAC;IACtE;IACAunB,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAEnE,IAAI,EAAEnkB,aAAa,CAACs+B,eAAe,CAAC,GAAGjd,KAAK,CAACrV,MAAM,GAAGmY,IAAI,GAAGma,eAAe,CAAC;IAC5G,OAAOH,QAAQ;EACjB;EACAjY,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,CAAC;EAC9B,OAAO6V,QAAQ;AACjB;AACA,SAASN,iBAAiBA,CAAC1qB,KAAK,EAAE;EAChC,MAAMuS,MAAM,GAAGvS,KAAK,CAACf,OAAO,CAACsT,MAAM;EACnC,MAAM6W,UAAU,GAAGppB,KAAK,CAACqrB,SAAS,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAGtrB,KAAK,CAAC6N,OAAO,GAAGub,UAAU,IAAI7W,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9D,MAAMgZ,QAAQ,GAAGvrB,KAAK,CAACwrB,UAAU,GAAGpC,UAAU;EAC9C,OAAOpxB,IAAI,CAACgE,KAAK,CAAChE,IAAI,CAACC,GAAG,CAACqzB,QAAQ,EAAEC,QAAQ,CAAC,CAAC;AACjD;AACA,SAASL,gBAAgBA,CAACP,YAAY,EAAEzc,KAAK,EAAEsc,UAAU,EAAE;EACzD,MAAMiB,gBAAgB,GAAGC,cAAc,CAACf,YAAY,CAAC;EACrD,MAAMxV,OAAO,GAAGjH,KAAK,CAACrV,MAAM,GAAG2xB,UAAU;EACzC,IAAI,CAACiB,gBAAgB,EAAE;IACrB,OAAOzzB,IAAI,CAACmC,GAAG,CAACgb,OAAO,EAAE,CAAC,CAAC;EAC7B;EACA,MAAMwW,OAAO,GAAG17B,UAAU,CAACw7B,gBAAgB,CAAC;EAC5C,KAAK,IAAIjgC,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG0qB,OAAO,CAAC9yB,MAAM,GAAG,CAAC,EAAErN,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;IACxD,MAAMuP,MAAM,GAAG4wB,OAAO,CAACngC,CAAC,CAAC;IACzB,IAAIuP,MAAM,GAAGoa,OAAO,EAAE;MACpB,OAAOpa,MAAM;IACf;EACF;EACA,OAAO/C,IAAI,CAACmC,GAAG,CAACgb,OAAO,EAAE,CAAC,CAAC;AAC7B;AACA,SAAS0V,eAAeA,CAAC3c,KAAK,EAAE;EAC9B,MAAM0d,MAAM,GAAG,EAAE;EACjB,IAAIpgC,CAAC,EAAEyV,IAAI;EACX,KAAKzV,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGiN,KAAK,CAACrV,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;IAC9C,IAAI0iB,KAAK,CAAC1iB,CAAC,CAAC,CAAC0+B,KAAK,EAAE;MAClB0B,MAAM,CAAC/xB,IAAI,CAACrO,CAAC,CAAC;IAChB;EACF;EACA,OAAOogC,MAAM;AACf;AACA,SAASX,UAAUA,CAAC/c,KAAK,EAAE8c,QAAQ,EAAEL,YAAY,EAAExV,OAAO,EAAE;EAC1D,IAAI/M,KAAK,GAAG,CAAC;EACb,IAAI2G,IAAI,GAAG4b,YAAY,CAAC,CAAC,CAAC;EAC1B,IAAIn/B,CAAC;EACL2pB,OAAO,GAAGnd,IAAI,CAAC6zB,IAAI,CAAC1W,OAAO,CAAC;EAC5B,KAAK3pB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0iB,KAAK,CAACrV,MAAM,EAAErN,CAAC,EAAE,EAAE;IACjC,IAAIA,CAAC,KAAKujB,IAAI,EAAE;MACdic,QAAQ,CAACnxB,IAAI,CAACqU,KAAK,CAAC1iB,CAAC,CAAC,CAAC;MACvB4c,KAAK,EAAE;MACP2G,IAAI,GAAG4b,YAAY,CAACviB,KAAK,GAAG+M,OAAO,CAAC;IACtC;EACF;AACF;AACA,SAASpC,IAAIA,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAE2W,UAAU,EAAEC,QAAQ,EAAE;EAC5D,MAAM7zB,KAAK,GAAGnM,cAAc,CAAC+/B,UAAU,EAAE,CAAC,CAAC;EAC3C,MAAM1rB,GAAG,GAAGpI,IAAI,CAACC,GAAG,CAAClM,cAAc,CAACggC,QAAQ,EAAE7d,KAAK,CAACrV,MAAM,CAAC,EAAEqV,KAAK,CAACrV,MAAM,CAAC;EAC1E,IAAIuP,KAAK,GAAG,CAAC;EACb,IAAIvP,MAAM,EAAErN,CAAC,EAAEujB,IAAI;EACnBoG,OAAO,GAAGnd,IAAI,CAAC6zB,IAAI,CAAC1W,OAAO,CAAC;EAC5B,IAAI4W,QAAQ,EAAE;IACZlzB,MAAM,GAAGkzB,QAAQ,GAAGD,UAAU;IAC9B3W,OAAO,GAAGtc,MAAM,GAAGb,IAAI,CAACgE,KAAK,CAACnD,MAAM,GAAGsc,OAAO,CAAC;EACjD;EACApG,IAAI,GAAG7W,KAAK;EACZ,OAAO6W,IAAI,GAAG,CAAC,EAAE;IACf3G,KAAK,EAAE;IACP2G,IAAI,GAAG/W,IAAI,CAACozB,KAAK,CAAClzB,KAAK,GAAGkQ,KAAK,GAAG+M,OAAO,CAAC;EAC5C;EACA,KAAK3pB,CAAC,GAAGwM,IAAI,CAACmC,GAAG,CAACjC,KAAK,EAAE,CAAC,CAAC,EAAE1M,CAAC,GAAG4U,GAAG,EAAE5U,CAAC,EAAE,EAAE;IACzC,IAAIA,CAAC,KAAKujB,IAAI,EAAE;MACdic,QAAQ,CAACnxB,IAAI,CAACqU,KAAK,CAAC1iB,CAAC,CAAC,CAAC;MACvB4c,KAAK,EAAE;MACP2G,IAAI,GAAG/W,IAAI,CAACozB,KAAK,CAAClzB,KAAK,GAAGkQ,KAAK,GAAG+M,OAAO,CAAC;IAC5C;EACF;AACF;AACA,SAASuW,cAAcA,CAAChf,GAAG,EAAE;EAC3B,MAAMsf,GAAG,GAAGtf,GAAG,CAAC7T,MAAM;EACtB,IAAIrN,CAAC,EAAEywB,IAAI;EACX,IAAI+P,GAAG,GAAG,CAAC,EAAE;IACX,OAAO,KAAK;EACd;EACA,KAAK/P,IAAI,GAAGvP,GAAG,CAAC,CAAC,CAAC,EAAElhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;IACvC,IAAIkhB,GAAG,CAAClhB,CAAC,CAAC,GAAGkhB,GAAG,CAAClhB,CAAC,GAAG,CAAC,CAAC,KAAKywB,IAAI,EAAE;MAChC,OAAO,KAAK;IACd;EACF;EACA,OAAOA,IAAI;AACb;AAEA,MAAMgQ,YAAY,GAAI9B,KAAK,IAAKA,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAGA,KAAK;AAC/F,MAAM+B,cAAc,GAAGA,CAAClsB,KAAK,EAAEmsB,IAAI,EAAE5Z,MAAM,KAAK4Z,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,MAAM,GAAGnsB,KAAK,CAACmsB,IAAI,CAAC,GAAG5Z,MAAM,GAAGvS,KAAK,CAACmsB,IAAI,CAAC,GAAG5Z,MAAM;AAC/H,SAAS6Z,MAAMA,CAAC1f,GAAG,EAAE2f,QAAQ,EAAE;EAC7B,MAAMT,MAAM,GAAG,EAAE;EACjB,MAAMU,SAAS,GAAG5f,GAAG,CAAC7T,MAAM,GAAGwzB,QAAQ;EACvC,MAAML,GAAG,GAAGtf,GAAG,CAAC7T,MAAM;EACtB,IAAIrN,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGwgC,GAAG,EAAExgC,CAAC,IAAI8gC,SAAS,EAAE;IAC9BV,MAAM,CAAC/xB,IAAI,CAAC6S,GAAG,CAAC1U,IAAI,CAACgE,KAAK,CAACxQ,CAAC,CAAC,CAAC,CAAC;EACjC;EACA,OAAOogC,MAAM;AACf;AACA,SAASW,mBAAmBA,CAACvsB,KAAK,EAAEkB,KAAK,EAAEsrB,eAAe,EAAE;EAC1D,MAAM3zB,MAAM,GAAGmH,KAAK,CAACkO,KAAK,CAACrV,MAAM;EACjC,MAAM4zB,UAAU,GAAGz0B,IAAI,CAACC,GAAG,CAACiJ,KAAK,EAAErI,MAAM,GAAG,CAAC,CAAC;EAC9C,MAAMX,KAAK,GAAG8H,KAAK,CAACsR,WAAW;EAC/B,MAAMlR,GAAG,GAAGJ,KAAK,CAACuR,SAAS;EAC3B,MAAMmb,OAAO,GAAG,IAAI;EACpB,IAAIC,SAAS,GAAG3sB,KAAK,CAACmO,eAAe,CAACse,UAAU,CAAC;EACjD,IAAIla,MAAM;EACV,IAAIia,eAAe,EAAE;IACnB,IAAI3zB,MAAM,KAAK,CAAC,EAAE;MAChB0Z,MAAM,GAAGva,IAAI,CAACmC,GAAG,CAACwyB,SAAS,GAAGz0B,KAAK,EAAEkI,GAAG,GAAGusB,SAAS,CAAC;IACvD,CAAC,MAAM,IAAIzrB,KAAK,KAAK,CAAC,EAAE;MACtBqR,MAAM,GAAG,CAACvS,KAAK,CAACmO,eAAe,CAAC,CAAC,CAAC,GAAGwe,SAAS,IAAI,CAAC;IACrD,CAAC,MAAM;MACLpa,MAAM,GAAG,CAACoa,SAAS,GAAG3sB,KAAK,CAACmO,eAAe,CAACse,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC;IAClE;IACAE,SAAS,IAAIF,UAAU,GAAGvrB,KAAK,GAAGqR,MAAM,GAAG,CAACA,MAAM;IAClD,IAAIoa,SAAS,GAAGz0B,KAAK,GAAGw0B,OAAO,IAAIC,SAAS,GAAGvsB,GAAG,GAAGssB,OAAO,EAAE;MAC5D;IACF;EACF;EACA,OAAOC,SAAS;AAClB;AACA,SAASC,cAAcA,CAACC,MAAM,EAAEh0B,MAAM,EAAE;EACtC1J,IAAI,CAAC09B,MAAM,EAAG/hB,KAAK,IAAK;IACtB,MAAMgiB,EAAE,GAAGhiB,KAAK,CAACgiB,EAAE;IACnB,MAAMC,KAAK,GAAGD,EAAE,CAACj0B,MAAM,GAAG,CAAC;IAC3B,IAAIrN,CAAC;IACL,IAAIuhC,KAAK,GAAGl0B,MAAM,EAAE;MAClB,KAAKrN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuhC,KAAK,EAAE,EAAEvhC,CAAC,EAAE;QAC1B,OAAOsf,KAAK,CAACnJ,IAAI,CAACmrB,EAAE,CAACthC,CAAC,CAAC,CAAC;MAC1B;MACAshC,EAAE,CAACjgB,MAAM,CAAC,CAAC,EAAEkgB,KAAK,CAAC;IACrB;EACF,CAAC,CAAC;AACJ;AACA,SAASC,iBAAiBA,CAAC/tB,OAAO,EAAE;EAClC,OAAOA,OAAO,CAACkqB,SAAS,GAAGlqB,OAAO,CAACmqB,UAAU,GAAG,CAAC;AACnD;AACA,SAAS6D,cAAcA,CAAChuB,OAAO,EAAEiuB,QAAQ,EAAE;EACzC,IAAI,CAACjuB,OAAO,CAAC4b,OAAO,EAAE;IACpB,OAAO,CAAC;EACV;EACA,MAAMsS,IAAI,GAAGl8B,MAAM,CAACgO,OAAO,CAACkuB,IAAI,EAAED,QAAQ,CAAC;EAC3C,MAAM5K,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAO,CAAC;EAC1C,MAAM8K,KAAK,GAAGzhC,OAAO,CAACsT,OAAO,CAACqY,IAAI,CAAC,GAAGrY,OAAO,CAACqY,IAAI,CAACze,MAAM,GAAG,CAAC;EAC7D,OAAQu0B,KAAK,GAAGD,IAAI,CAACE,UAAU,GAAI/K,OAAO,CAACzR,MAAM;AACnD;AACA,SAASyc,kBAAkBA,CAACtpB,MAAM,EAAEhE,KAAK,EAAE;EACzC,OAAOzC,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1ChE,KAAK;IACLxI,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAAS+1B,iBAAiBA,CAACvpB,MAAM,EAAE9C,KAAK,EAAEhI,IAAI,EAAE;EAC9C,OAAOqE,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1C9K,IAAI;IACJgI,KAAK;IACL1J,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASg2B,UAAUA,CAACrD,KAAK,EAAE7M,QAAQ,EAAEnd,OAAO,EAAE;EAC5C,IAAI6nB,GAAG,GAAG72B,kBAAkB,CAACg5B,KAAK,CAAC;EACnC,IAAKhqB,OAAO,IAAImd,QAAQ,KAAK,OAAO,IAAM,CAACnd,OAAO,IAAImd,QAAQ,KAAK,OAAQ,EAAE;IAC3E0K,GAAG,GAAGiE,YAAY,CAACjE,GAAG,CAAC;EACzB;EACA,OAAOA,GAAG;AACZ;AACA,SAASyF,SAASA,CAACztB,KAAK,EAAEuS,MAAM,EAAE+K,QAAQ,EAAE6M,KAAK,EAAE;EACjD,MAAM;IAAC3pB,GAAG;IAAEG,IAAI;IAAED,MAAM;IAAED;EAAK,CAAC,GAAGT,KAAK;EACxC,IAAIqT,QAAQ,GAAG,CAAC;EAChB,IAAIoC,QAAQ,EAAEiY,MAAM,EAAEC,MAAM;EAC5B,IAAI3tB,KAAK,CAACoQ,YAAY,CAAC,CAAC,EAAE;IACxBsd,MAAM,GAAGr8B,cAAc,CAAC84B,KAAK,EAAExpB,IAAI,EAAEF,KAAK,CAAC;IAC3CktB,MAAM,GAAGzB,cAAc,CAAClsB,KAAK,EAAEsd,QAAQ,EAAE/K,MAAM,CAAC;IAChDkD,QAAQ,GAAGhV,KAAK,GAAGE,IAAI;EACzB,CAAC,MAAM;IACL+sB,MAAM,GAAGxB,cAAc,CAAClsB,KAAK,EAAEsd,QAAQ,EAAE/K,MAAM,CAAC;IAChDob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAK,EAAEzpB,MAAM,EAAEF,GAAG,CAAC;IAC3C6S,QAAQ,GAAGiK,QAAQ,KAAK,MAAM,GAAG,CAACrvB,OAAO,GAAGA,OAAO;EACrD;EACA,OAAO;IAACy/B,MAAM;IAAEC,MAAM;IAAElY,QAAQ;IAAEpC;EAAQ,CAAC;AAC7C;AACA,MAAMua,KAAK,SAASjG,OAAO,CAAC;EAC1B9wB,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC6G,EAAE,GAAG7G,GAAG,CAAC6G,EAAE;IAChB,IAAI,CAAC5K,IAAI,GAAG+D,GAAG,CAAC/D,IAAI;IACpB,IAAI,CAACyH,OAAO,GAAG9H,SAAS;IACxB,IAAI,CAAC4N,GAAG,GAAGxJ,GAAG,CAACwJ,GAAG;IAClB,IAAI,CAAC1N,KAAK,GAAGkE,GAAG,CAAClE,KAAK;IACtB,IAAI,CAACmJ,GAAG,GAAGrJ,SAAS;IACpB,IAAI,CAACuJ,MAAM,GAAGvJ,SAAS;IACvB,IAAI,CAACwJ,IAAI,GAAGxJ,SAAS;IACrB,IAAI,CAACsJ,KAAK,GAAGtJ,SAAS;IACtB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAAC02B,QAAQ,GAAG;MACdltB,IAAI,EAAE,CAAC;MACPF,KAAK,EAAE,CAAC;MACRD,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV,CAAC;IACD,IAAI,CAAC+U,QAAQ,GAAGte,SAAS;IACzB,IAAI,CAACue,SAAS,GAAGve,SAAS;IAC1B,IAAI,CAAC22B,UAAU,GAAG32B,SAAS;IAC3B,IAAI,CAAC42B,aAAa,GAAG52B,SAAS;IAC9B,IAAI,CAAC62B,WAAW,GAAG72B,SAAS;IAC5B,IAAI,CAAC82B,YAAY,GAAG92B,SAAS;IAC7B,IAAI,CAACqM,IAAI,GAAGrM,SAAS;IACrB,IAAI,CAAC+2B,aAAa,GAAG/2B,SAAS;IAC9B,IAAI,CAACc,GAAG,GAAGd,SAAS;IACpB,IAAI,CAACgD,GAAG,GAAGhD,SAAS;IACpB,IAAI,CAAC+W,KAAK,GAAG,EAAE;IACf,IAAI,CAACigB,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACxgB,OAAO,GAAG,CAAC;IAChB,IAAI,CAAC2d,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC8C,iBAAiB,GAAG,CAAC,CAAC;IAC3B,IAAI,CAAChd,WAAW,GAAGna,SAAS;IAC5B,IAAI,CAACoa,SAAS,GAAGpa,SAAS;IAC1B,IAAI,CAAC+lB,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACqR,QAAQ,GAAGp3B,SAAS;IACzB,IAAI,CAACq3B,QAAQ,GAAGr3B,SAAS;IACzB,IAAI,CAACs3B,aAAa,GAAGt3B,SAAS;IAC9B,IAAI,CAACu3B,aAAa,GAAGv3B,SAAS;IAC9B,IAAI,CAACw3B,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACthB,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACuhB,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACnpB,QAAQ,GAAGvO,SAAS;EAC3B;EACA23B,IAAIA,CAAC7vB,OAAO,EAAE;IACZ,MAAM7G,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC6G,OAAO,GAAGA,OAAO;IACpB7G,EAAE,CAACoL,IAAI,GAAGvE,OAAO,CAACuE,IAAI;IACtBpL,EAAE,CAACo2B,QAAQ,GAAGp2B,EAAE,CAAC+P,KAAK,CAAClJ,OAAO,CAAChH,GAAG,CAAC;IACnCG,EAAE,CAACm2B,QAAQ,GAAGn2B,EAAE,CAAC+P,KAAK,CAAClJ,OAAO,CAAC9E,GAAG,CAAC;IACnC/B,EAAE,CAACs2B,aAAa,GAAGt2B,EAAE,CAAC+P,KAAK,CAAClJ,OAAO,CAAC8vB,YAAY,CAAC;IACjD32B,EAAE,CAACq2B,aAAa,GAAGr2B,EAAE,CAAC+P,KAAK,CAAClJ,OAAO,CAAC+vB,YAAY,CAAC;EACnD;EACA7mB,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,OAAOoD,GAAG;EACZ;EACAjC,aAAaA,CAAA,EAAG;IACd,IAAI;MAACmsB,QAAQ;MAAED,QAAQ;MAAEG,aAAa;MAAED;IAAa,CAAC,GAAG,IAAI;IAC7DD,QAAQ,GAAGr+B,eAAe,CAACq+B,QAAQ,EAAEhsB,MAAM,CAACE,iBAAiB,CAAC;IAC9D6rB,QAAQ,GAAGp+B,eAAe,CAACo+B,QAAQ,EAAE/rB,MAAM,CAACC,iBAAiB,CAAC;IAC9DisB,aAAa,GAAGv+B,eAAe,CAACu+B,aAAa,EAAElsB,MAAM,CAACE,iBAAiB,CAAC;IACxE+rB,aAAa,GAAGt+B,eAAe,CAACs+B,aAAa,EAAEjsB,MAAM,CAACC,iBAAiB,CAAC;IACxE,OAAO;MACLxK,GAAG,EAAE9H,eAAe,CAACq+B,QAAQ,EAAEE,aAAa,CAAC;MAC7Cv0B,GAAG,EAAEhK,eAAe,CAACo+B,QAAQ,EAAEE,aAAa,CAAC;MAC7CnsB,UAAU,EAAE/V,cAAc,CAACiiC,QAAQ,CAAC;MACpCjsB,UAAU,EAAEhW,cAAc,CAACgiC,QAAQ;IACrC,CAAC;EACH;EACAhlB,SAASA,CAACC,QAAQ,EAAE;IAClB,MAAMpR,EAAE,GAAG,IAAI;IACf,IAAI;MAACH,GAAG;MAAEkC,GAAG;MAAEmI,UAAU;MAAEC;IAAU,CAAC,GAAGnK,EAAE,CAACiK,aAAa,CAAC,CAAC;IAC3D,IAAI+G,KAAK;IACT,IAAI9G,UAAU,IAAIC,UAAU,EAAE;MAC5B,OAAO;QAACtK,GAAG;QAAEkC;MAAG,CAAC;IACnB;IACA,MAAMqT,KAAK,GAAGpV,EAAE,CAACqV,uBAAuB,CAAC,CAAC;IAC1C,KAAK,IAAIjiB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGuM,KAAK,CAAC3U,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAClD4d,KAAK,GAAGoE,KAAK,CAAChiB,CAAC,CAAC,CAACyX,UAAU,CAACsG,SAAS,CAACnR,EAAE,EAAEoR,QAAQ,CAAC;MACnD,IAAI,CAAClH,UAAU,EAAE;QACfrK,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEmR,KAAK,CAACnR,GAAG,CAAC;MAChC;MACA,IAAI,CAACsK,UAAU,EAAE;QACfpI,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACA,GAAG,EAAEiP,KAAK,CAACjP,GAAG,CAAC;MAChC;IACF;IACA,OAAO;MACLlC,GAAG,EAAE9H,eAAe,CAAC8H,GAAG,EAAE9H,eAAe,CAACgK,GAAG,EAAElC,GAAG,CAAC,CAAC;MACpDkC,GAAG,EAAEhK,eAAe,CAACgK,GAAG,EAAEhK,eAAe,CAAC8H,GAAG,EAAEkC,GAAG,CAAC;IACrD,CAAC;EACH;EACAgnB,UAAUA,CAAA,EAAG;IACX,MAAM/oB,EAAE,GAAG,IAAI;IACf,OAAO;MACLuI,IAAI,EAAEvI,EAAE,CAAC41B,WAAW,IAAI,CAAC;MACzBxtB,GAAG,EAAEpI,EAAE,CAAC01B,UAAU,IAAI,CAAC;MACvBrtB,KAAK,EAAErI,EAAE,CAAC61B,YAAY,IAAI,CAAC;MAC3BvtB,MAAM,EAAEtI,EAAE,CAAC21B,aAAa,IAAI;IAC9B,CAAC;EACH;EACAkB,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC/gB,KAAK;EACnB;EACArF,SAASA,CAAA,EAAG;IACV,MAAMlH,IAAI,GAAG,IAAI,CAACtK,KAAK,CAACsK,IAAI;IAC5B,OAAO,IAAI,CAAC1C,OAAO,CAAC2J,MAAM,KAAK,IAAI,CAACwH,YAAY,CAAC,CAAC,GAAGzO,IAAI,CAACutB,OAAO,GAAGvtB,IAAI,CAACwtB,OAAO,CAAC,IAAIxtB,IAAI,CAACiH,MAAM,IAAI,EAAE;EACxG;EACAka,YAAYA,CAAA,EAAG;IACb,IAAI,CAACxV,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACuhB,iBAAiB,GAAG,KAAK;EAChC;EACAO,YAAYA,CAAA,EAAG;IACb/+B,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACmwB,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC;EAC7C;EACA1yB,MAAMA,CAAC+Y,QAAQ,EAAEC,SAAS,EAAE2Z,OAAO,EAAE;IACnC,MAAMj3B,EAAE,GAAG,IAAI;IACf,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC6G,OAAO,CAACiP,KAAK;IACjC,MAAMohB,UAAU,GAAG/E,QAAQ,CAAC+E,UAAU;IACtCl3B,EAAE,CAACg3B,YAAY,CAAC,CAAC;IACjBh3B,EAAE,CAACqd,QAAQ,GAAGA,QAAQ;IACtBrd,EAAE,CAACsd,SAAS,GAAGA,SAAS;IACxBtd,EAAE,CAACy1B,QAAQ,GAAGwB,OAAO,GAAG9xB,MAAM,CAACqC,MAAM,CAAC;MACpCe,IAAI,EAAE,CAAC;MACPF,KAAK,EAAE,CAAC;MACRD,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV,CAAC,EAAE2uB,OAAO,CAAC;IACXj3B,EAAE,CAAC8V,KAAK,GAAG,IAAI;IACf9V,EAAE,CAACi2B,WAAW,GAAG,IAAI;IACrBj2B,EAAE,CAAC+1B,cAAc,GAAG,IAAI;IACxB/1B,EAAE,CAACg2B,WAAW,GAAG,IAAI;IACrBh2B,EAAE,CAACm3B,mBAAmB,CAAC,CAAC;IACxBn3B,EAAE,CAACo3B,aAAa,CAAC,CAAC;IAClBp3B,EAAE,CAACq3B,kBAAkB,CAAC,CAAC;IACvBr3B,EAAE,CAACozB,UAAU,GAAGpzB,EAAE,CAACgY,YAAY,CAAC,CAAC,GAC7BhY,EAAE,CAAC0Y,KAAK,GAAGue,OAAO,CAAC1uB,IAAI,GAAG0uB,OAAO,CAAC5uB,KAAK,GACvCrI,EAAE,CAACyY,MAAM,GAAGwe,OAAO,CAAC7uB,GAAG,GAAG6uB,OAAO,CAAC3uB,MAAM;IAC5C,IAAI,CAACtI,EAAE,CAACy2B,iBAAiB,EAAE;MACzBz2B,EAAE,CAACs3B,gBAAgB,CAAC,CAAC;MACrBt3B,EAAE,CAACu3B,mBAAmB,CAAC,CAAC;MACxBv3B,EAAE,CAACw3B,eAAe,CAAC,CAAC;MACpBx3B,EAAE,CAACy2B,iBAAiB,GAAG,IAAI;IAC7B;IACAz2B,EAAE,CAACy3B,gBAAgB,CAAC,CAAC;IACrBz3B,EAAE,CAAC8V,KAAK,GAAG9V,EAAE,CAAC03B,UAAU,CAAC,CAAC,IAAI,EAAE;IAChC13B,EAAE,CAAC23B,eAAe,CAAC,CAAC;IACpB,MAAMC,eAAe,GAAGV,UAAU,GAAGl3B,EAAE,CAAC8V,KAAK,CAACrV,MAAM;IACpDT,EAAE,CAAC63B,qBAAqB,CAACD,eAAe,GAAG5D,MAAM,CAACh0B,EAAE,CAAC8V,KAAK,EAAEohB,UAAU,CAAC,GAAGl3B,EAAE,CAAC8V,KAAK,CAAC;IACnF9V,EAAE,CAACqG,SAAS,CAAC,CAAC;IACdrG,EAAE,CAAC83B,4BAA4B,CAAC,CAAC;IACjC93B,EAAE,CAAC+3B,sBAAsB,CAAC,CAAC;IAC3B/3B,EAAE,CAACg4B,2BAA2B,CAAC,CAAC;IAChC,IAAI7F,QAAQ,CAAC1P,OAAO,KAAK0P,QAAQ,CAACT,QAAQ,IAAIS,QAAQ,CAAC8F,MAAM,KAAK,MAAM,CAAC,EAAE;MACzEj4B,EAAE,CAAC8V,KAAK,GAAG4b,QAAQ,CAAC1xB,EAAE,EAAEA,EAAE,CAAC8V,KAAK,CAAC;MACjC9V,EAAE,CAACi2B,WAAW,GAAG,IAAI;IACvB;IACA,IAAI2B,eAAe,EAAE;MACnB53B,EAAE,CAAC63B,qBAAqB,CAAC73B,EAAE,CAAC8V,KAAK,CAAC;IACpC;IACA9V,EAAE,CAACk4B,SAAS,CAAC,CAAC;IACdl4B,EAAE,CAACm4B,GAAG,CAAC,CAAC;IACRn4B,EAAE,CAACo4B,QAAQ,CAAC,CAAC;IACbp4B,EAAE,CAACq4B,WAAW,CAAC,CAAC;EAClB;EACAhyB,SAASA,CAAA,EAAG;IACV,MAAMrG,EAAE,GAAG,IAAI;IACf,IAAIs4B,aAAa,GAAGt4B,EAAE,CAAC6G,OAAO,CAACkB,OAAO;IACtC,IAAIwwB,UAAU,EAAEC,QAAQ;IACxB,IAAIx4B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBugB,UAAU,GAAGv4B,EAAE,CAACuI,IAAI;MACpBiwB,QAAQ,GAAGx4B,EAAE,CAACqI,KAAK;IACrB,CAAC,MAAM;MACLkwB,UAAU,GAAGv4B,EAAE,CAACoI,GAAG;MACnBowB,QAAQ,GAAGx4B,EAAE,CAACsI,MAAM;MACpBgwB,aAAa,GAAG,CAACA,aAAa;IAChC;IACAt4B,EAAE,CAACkZ,WAAW,GAAGqf,UAAU;IAC3Bv4B,EAAE,CAACmZ,SAAS,GAAGqf,QAAQ;IACvBx4B,EAAE,CAAC8kB,cAAc,GAAGwT,aAAa;IACjCt4B,EAAE,CAACyV,OAAO,GAAG+iB,QAAQ,GAAGD,UAAU;IAClCv4B,EAAE,CAACy4B,cAAc,GAAGz4B,EAAE,CAAC6G,OAAO,CAAC6xB,aAAa;EAC9C;EACAL,WAAWA,CAAA,EAAG;IACZpgC,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACwxB,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;EAC5C;EACAlB,mBAAmBA,CAAA,EAAG;IACpBl/B,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACswB,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC;EACpD;EACAC,aAAaA,CAAA,EAAG;IACd,MAAMp3B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBhY,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;MACtBrd,EAAE,CAACuI,IAAI,GAAG,CAAC;MACXvI,EAAE,CAACqI,KAAK,GAAGrI,EAAE,CAAC0Y,KAAK;IACrB,CAAC,MAAM;MACL1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsd,SAAS;MACxBtd,EAAE,CAACoI,GAAG,GAAG,CAAC;MACVpI,EAAE,CAACsI,MAAM,GAAGtI,EAAE,CAACyY,MAAM;IACvB;IACAzY,EAAE,CAAC41B,WAAW,GAAG,CAAC;IAClB51B,EAAE,CAAC01B,UAAU,GAAG,CAAC;IACjB11B,EAAE,CAAC61B,YAAY,GAAG,CAAC;IACnB71B,EAAE,CAAC21B,aAAa,GAAG,CAAC;EACtB;EACA0B,kBAAkBA,CAAA,EAAG;IACnBp/B,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACwwB,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC;EACnD;EACAsB,UAAUA,CAACjzB,IAAI,EAAE;IACf,MAAM1F,EAAE,GAAG,IAAI;IACfA,EAAE,CAACf,KAAK,CAAC25B,aAAa,CAAClzB,IAAI,EAAE1F,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC;IAC7C5X,QAAQ,CAAC+H,EAAE,CAAC6G,OAAO,CAACnB,IAAI,CAAC,EAAE,CAAC1F,EAAE,CAAC,CAAC;EAClC;EACAs3B,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACqB,UAAU,CAAC,kBAAkB,CAAC;EACrC;EACApB,mBAAmBA,CAAA,EAAG,CAAC;EACvBC,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACmB,UAAU,CAAC,iBAAiB,CAAC;EACpC;EACAlB,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACkB,UAAU,CAAC,kBAAkB,CAAC;EACrC;EACAjB,UAAUA,CAAA,EAAG;IACX,OAAO,EAAE;EACX;EACAC,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACgB,UAAU,CAAC,iBAAiB,CAAC;EACpC;EACAE,2BAA2BA,CAAA,EAAG;IAC5B5gC,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACgyB,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC5D;EACAC,kBAAkBA,CAAChjB,KAAK,EAAE;IACxB,MAAM9V,EAAE,GAAG,IAAI;IACf,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC6G,OAAO,CAACiP,KAAK;IACjC,IAAI1iB,CAAC,EAAEyV,IAAI,EAAE/H,IAAI;IACjB,KAAK1N,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGiN,KAAK,CAACrV,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;MAC9C0N,IAAI,GAAGgV,KAAK,CAAC1iB,CAAC,CAAC;MACf0N,IAAI,CAAC8Q,KAAK,GAAG3Z,QAAQ,CAACk6B,QAAQ,CAACl6B,QAAQ,EAAE,CAAC6I,IAAI,CAACwG,KAAK,EAAElU,CAAC,EAAE0iB,KAAK,CAAC,EAAE9V,EAAE,CAAC;IACtE;EACF;EACA+4B,0BAA0BA,CAAA,EAAG;IAC3B9gC,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACkyB,0BAA0B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC3D;EACAjB,4BAA4BA,CAAA,EAAG;IAC7B7/B,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACixB,4BAA4B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC7D;EACAC,sBAAsBA,CAAA,EAAG;IACvB,MAAM/3B,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAMsrB,QAAQ,GAAGtrB,OAAO,CAACiP,KAAK;IAC9B,MAAMkjB,QAAQ,GAAGh5B,EAAE,CAAC8V,KAAK,CAACrV,MAAM;IAChC,MAAM4wB,WAAW,GAAGc,QAAQ,CAACd,WAAW,IAAI,CAAC;IAC7C,MAAMC,WAAW,GAAGa,QAAQ,CAACb,WAAW;IACxC,IAAIwE,aAAa,GAAGzE,WAAW;IAC/B,IAAIJ,SAAS,EAAE3T,SAAS,EAAE2b,gBAAgB;IAC1C,IAAI,CAACj5B,EAAE,CAACk5B,UAAU,CAAC,CAAC,IAAI,CAAC/G,QAAQ,CAAC1P,OAAO,IAAI4O,WAAW,IAAIC,WAAW,IAAI0H,QAAQ,IAAI,CAAC,IAAI,CAACh5B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MAC9GhY,EAAE,CAAC81B,aAAa,GAAGzE,WAAW;MAC9B;IACF;IACA,MAAM8H,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,MAAMC,aAAa,GAAGF,UAAU,CAACG,MAAM,CAAC5gB,KAAK;IAC7C,MAAM6gB,cAAc,GAAGJ,UAAU,CAACK,OAAO,CAAC/gB,MAAM;IAChD,MAAM4E,QAAQ,GAAGlnB,WAAW,CAAC6J,EAAE,CAACf,KAAK,CAACyZ,KAAK,GAAG2gB,aAAa,EAAE,CAAC,EAAEr5B,EAAE,CAACqd,QAAQ,CAAC;IAC5E4T,SAAS,GAAGpqB,OAAO,CAACsT,MAAM,GAAGna,EAAE,CAACqd,QAAQ,GAAG2b,QAAQ,GAAG3b,QAAQ,IAAI2b,QAAQ,GAAG,CAAC,CAAC;IAC/E,IAAIK,aAAa,GAAG,CAAC,GAAGpI,SAAS,EAAE;MACjCA,SAAS,GAAG5T,QAAQ,IAAI2b,QAAQ,IAAInyB,OAAO,CAACsT,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;MAC9DmD,SAAS,GAAGtd,EAAE,CAACsd,SAAS,GAAGsX,iBAAiB,CAAC/tB,OAAO,CAACuT,IAAI,CAAC,GAC1D+X,QAAQ,CAACjI,OAAO,GAAG2K,cAAc,CAAChuB,OAAO,CAACkU,KAAK,EAAE/a,EAAE,CAACf,KAAK,CAAC4H,OAAO,CAACkuB,IAAI,CAAC;MACvEkE,gBAAgB,GAAGr5B,IAAI,CAAC8lB,IAAI,CAAC2T,aAAa,GAAGA,aAAa,GAAGE,cAAc,GAAGA,cAAc,CAAC;MAC7FzD,aAAa,GAAG39B,SAAS,CAACyH,IAAI,CAACC,GAAG,CAChCD,IAAI,CAAC65B,IAAI,CAAC75B,IAAI,CAACC,GAAG,CAAC,CAACs5B,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG,CAAC,IAAIwY,SAAS,EAAE,CAAC,CAAC,CAAC,EACnErxB,IAAI,CAAC65B,IAAI,CAAC75B,IAAI,CAACC,GAAG,CAACyd,SAAS,GAAG2b,gBAAgB,EAAE,CAAC,CAAC,CAAC,GAAGr5B,IAAI,CAAC65B,IAAI,CAACF,cAAc,GAAGN,gBAAgB,CACpG,CAAC,CAAC;MACFnD,aAAa,GAAGl2B,IAAI,CAACmC,GAAG,CAACsvB,WAAW,EAAEzxB,IAAI,CAACC,GAAG,CAACyxB,WAAW,EAAEwE,aAAa,CAAC,CAAC;IAC7E;IACA91B,EAAE,CAAC81B,aAAa,GAAGA,aAAa;EAClC;EACAkC,2BAA2BA,CAAA,EAAG;IAC5B//B,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACmxB,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC5D;EACAE,SAASA,CAAA,EAAG;IACVjgC,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACqxB,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;EAC1C;EACAC,GAAGA,CAAA,EAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAI;IACf,MAAM6hB,OAAO,GAAG;MACdnJ,KAAK,EAAE,CAAC;MACRD,MAAM,EAAE;IACV,CAAC;IACD,MAAM;MAACxZ,KAAK;MAAE4H,OAAO,EAAE;QAACiP,KAAK,EAAEqc,QAAQ;QAAEpX,KAAK,EAAE2e,SAAS;QAAEtf,IAAI,EAAEuf;MAAQ;IAAC,CAAC,GAAG35B,EAAE;IAChF,MAAMyiB,OAAO,GAAGziB,EAAE,CAACk5B,UAAU,CAAC,CAAC;IAC/B,MAAMlhB,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,IAAIyK,OAAO,EAAE;MACX,MAAMmX,WAAW,GAAG/E,cAAc,CAAC6E,SAAS,EAAEz6B,KAAK,CAAC4H,OAAO,CAACkuB,IAAI,CAAC;MACjE,IAAI/c,YAAY,EAAE;QAChB6J,OAAO,CAACnJ,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;QAC3BwE,OAAO,CAACpJ,MAAM,GAAGmc,iBAAiB,CAAC+E,QAAQ,CAAC,GAAGC,WAAW;MAC5D,CAAC,MAAM;QACL/X,OAAO,CAACpJ,MAAM,GAAGzY,EAAE,CAACsd,SAAS;QAC7BuE,OAAO,CAACnJ,KAAK,GAAGkc,iBAAiB,CAAC+E,QAAQ,CAAC,GAAGC,WAAW;MAC3D;MACA,IAAIzH,QAAQ,CAAC1P,OAAO,IAAIziB,EAAE,CAAC8V,KAAK,CAACrV,MAAM,EAAE;QACvC,MAAM;UAACkyB,KAAK;UAAE/Z,IAAI;UAAE0gB,MAAM;UAAEE;QAAO,CAAC,GAAGx5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;QAC1D,MAAMS,WAAW,GAAG1H,QAAQ,CAACjI,OAAO,GAAG,CAAC;QACxC,MAAM4P,YAAY,GAAG7kC,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;QAChD,MAAMna,GAAG,GAAG/b,IAAI,CAAC+b,GAAG,CAACme,YAAY,CAAC;QAClC,MAAMje,GAAG,GAAGjc,IAAI,CAACic,GAAG,CAACie,YAAY,CAAC;QAClC,IAAI9hB,YAAY,EAAE;UAChB,MAAM+hB,WAAW,GAAGle,GAAG,GAAGyd,MAAM,CAAC5gB,KAAK,GAAGiD,GAAG,GAAG6d,OAAO,CAAC/gB,MAAM;UAC7DoJ,OAAO,CAACpJ,MAAM,GAAG7Y,IAAI,CAACC,GAAG,CAACG,EAAE,CAACsd,SAAS,EAAEuE,OAAO,CAACpJ,MAAM,GAAGshB,WAAW,GAAGF,WAAW,CAAC;QACrF,CAAC,MAAM;UACL,MAAMG,UAAU,GAAG7H,QAAQ,CAACZ,MAAM,GAAG,CAAC,GAAG5V,GAAG,GAAG2d,MAAM,CAAC5gB,KAAK,GAAGmD,GAAG,GAAG2d,OAAO,CAAC/gB,MAAM;UAClFoJ,OAAO,CAACnJ,KAAK,GAAG9Y,IAAI,CAACC,GAAG,CAACG,EAAE,CAACqd,QAAQ,EAAEwE,OAAO,CAACnJ,KAAK,GAAGshB,UAAU,GAAGH,WAAW,CAAC;QACjF;QACA75B,EAAE,CAACi6B,iBAAiB,CAACtH,KAAK,EAAE/Z,IAAI,EAAEiD,GAAG,EAAEF,GAAG,CAAC;MAC7C;IACF;IACA3b,EAAE,CAACk6B,cAAc,CAAC,CAAC;IACnB,IAAIliB,YAAY,EAAE;MAChBhY,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACyV,OAAO,GAAGxW,KAAK,CAACyZ,KAAK,GAAG1Y,EAAE,CAACy1B,QAAQ,CAACltB,IAAI,GAAGvI,EAAE,CAACy1B,QAAQ,CAACptB,KAAK;MAC1ErI,EAAE,CAACyY,MAAM,GAAGoJ,OAAO,CAACpJ,MAAM;IAC5B,CAAC,MAAM;MACLzY,EAAE,CAAC0Y,KAAK,GAAGmJ,OAAO,CAACnJ,KAAK;MACxB1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACyV,OAAO,GAAGxW,KAAK,CAACwZ,MAAM,GAAGzY,EAAE,CAACy1B,QAAQ,CAACrtB,GAAG,GAAGpI,EAAE,CAACy1B,QAAQ,CAACntB,MAAM;IAC9E;EACF;EACA2xB,iBAAiBA,CAACtH,KAAK,EAAE/Z,IAAI,EAAEiD,GAAG,EAAEF,GAAG,EAAE;IACvC,MAAM3b,EAAE,GAAG,IAAI;IACf,MAAM;MAAC8V,KAAK,EAAE;QAACic,KAAK;QAAE7H;MAAO,CAAC;MAAEhF;IAAQ,CAAC,GAAGllB,EAAE,CAAC6G,OAAO;IACtD,MAAMszB,SAAS,GAAGn6B,EAAE,CAAC81B,aAAa,KAAK,CAAC;IACxC,MAAMsE,gBAAgB,GAAGlV,QAAQ,KAAK,KAAK,IAAIllB,EAAE,CAACoL,IAAI,KAAK,GAAG;IAC9D,IAAIpL,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrB,MAAMqiB,UAAU,GAAGr6B,EAAE,CAAC+V,eAAe,CAAC,CAAC,CAAC,GAAG/V,EAAE,CAACuI,IAAI;MAClD,MAAM+xB,WAAW,GAAGt6B,EAAE,CAACqI,KAAK,GAAGrI,EAAE,CAAC+V,eAAe,CAAC/V,EAAE,CAAC8V,KAAK,CAACrV,MAAM,GAAG,CAAC,CAAC;MACtE,IAAIm1B,WAAW,GAAG,CAAC;MACnB,IAAIC,YAAY,GAAG,CAAC;MACpB,IAAIsE,SAAS,EAAE;QACb,IAAIC,gBAAgB,EAAE;UACpBxE,WAAW,GAAGja,GAAG,GAAGgX,KAAK,CAACja,KAAK;UAC/Bmd,YAAY,GAAGha,GAAG,GAAGjD,IAAI,CAACH,MAAM;QAClC,CAAC,MAAM;UACLmd,WAAW,GAAG/Z,GAAG,GAAG8W,KAAK,CAACla,MAAM;UAChCod,YAAY,GAAGla,GAAG,GAAG/C,IAAI,CAACF,KAAK;QACjC;MACF,CAAC,MAAM,IAAIqZ,KAAK,KAAK,OAAO,EAAE;QAC5B8D,YAAY,GAAGjd,IAAI,CAACF,KAAK;MAC3B,CAAC,MAAM,IAAIqZ,KAAK,KAAK,KAAK,EAAE;QAC1B6D,WAAW,GAAGjD,KAAK,CAACja,KAAK;MAC3B,CAAC,MAAM;QACLkd,WAAW,GAAGjD,KAAK,CAACja,KAAK,GAAG,CAAC;QAC7Bmd,YAAY,GAAGjd,IAAI,CAACF,KAAK,GAAG,CAAC;MAC/B;MACA1Y,EAAE,CAAC41B,WAAW,GAAGh2B,IAAI,CAACmC,GAAG,CAAC,CAAC6zB,WAAW,GAAGyE,UAAU,GAAGnQ,OAAO,IAAIlqB,EAAE,CAAC0Y,KAAK,IAAI1Y,EAAE,CAAC0Y,KAAK,GAAG2hB,UAAU,CAAC,EAAE,CAAC,CAAC;MACvGr6B,EAAE,CAAC61B,YAAY,GAAGj2B,IAAI,CAACmC,GAAG,CAAC,CAAC8zB,YAAY,GAAGyE,WAAW,GAAGpQ,OAAO,IAAIlqB,EAAE,CAAC0Y,KAAK,IAAI1Y,EAAE,CAAC0Y,KAAK,GAAG4hB,WAAW,CAAC,EAAE,CAAC,CAAC;IAC7G,CAAC,MAAM;MACL,IAAI5E,UAAU,GAAG9c,IAAI,CAACH,MAAM,GAAG,CAAC;MAChC,IAAIkd,aAAa,GAAGhD,KAAK,CAACla,MAAM,GAAG,CAAC;MACpC,IAAIsZ,KAAK,KAAK,OAAO,EAAE;QACrB2D,UAAU,GAAG,CAAC;QACdC,aAAa,GAAGhD,KAAK,CAACla,MAAM;MAC9B,CAAC,MAAM,IAAIsZ,KAAK,KAAK,KAAK,EAAE;QAC1B2D,UAAU,GAAG9c,IAAI,CAACH,MAAM;QACxBkd,aAAa,GAAG,CAAC;MACnB;MACA31B,EAAE,CAAC01B,UAAU,GAAGA,UAAU,GAAGxL,OAAO;MACpClqB,EAAE,CAAC21B,aAAa,GAAGA,aAAa,GAAGzL,OAAO;IAC5C;EACF;EACAgQ,cAAcA,CAAA,EAAG;IACf,MAAMl6B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACy1B,QAAQ,EAAE;MACfz1B,EAAE,CAACy1B,QAAQ,CAACltB,IAAI,GAAG3I,IAAI,CAACmC,GAAG,CAAC/B,EAAE,CAAC41B,WAAW,EAAE51B,EAAE,CAACy1B,QAAQ,CAACltB,IAAI,CAAC;MAC7DvI,EAAE,CAACy1B,QAAQ,CAACrtB,GAAG,GAAGxI,IAAI,CAACmC,GAAG,CAAC/B,EAAE,CAAC01B,UAAU,EAAE11B,EAAE,CAACy1B,QAAQ,CAACrtB,GAAG,CAAC;MAC1DpI,EAAE,CAACy1B,QAAQ,CAACptB,KAAK,GAAGzI,IAAI,CAACmC,GAAG,CAAC/B,EAAE,CAAC61B,YAAY,EAAE71B,EAAE,CAACy1B,QAAQ,CAACptB,KAAK,CAAC;MAChErI,EAAE,CAACy1B,QAAQ,CAACntB,MAAM,GAAG1I,IAAI,CAACmC,GAAG,CAAC/B,EAAE,CAAC21B,aAAa,EAAE31B,EAAE,CAACy1B,QAAQ,CAACntB,MAAM,CAAC;IACrE;EACF;EACA8vB,QAAQA,CAAA,EAAG;IACTngC,QAAQ,CAAC,IAAI,CAAC4O,OAAO,CAACuxB,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC;EACzC;EACApgB,YAAYA,CAAA,EAAG;IACb,MAAM;MAAC5M,IAAI;MAAE8Z;IAAQ,CAAC,GAAG,IAAI,CAACre,OAAO;IACrC,OAAOqe,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAI9Z,IAAI,KAAK,GAAG;EACpE;EACAmvB,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAAC1zB,OAAO,CAAC+gB,QAAQ;EAC9B;EACAiQ,qBAAqBA,CAAC/hB,KAAK,EAAE;IAC3B,MAAM9V,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC64B,2BAA2B,CAAC,CAAC;IAChC74B,EAAE,CAAC84B,kBAAkB,CAAChjB,KAAK,CAAC;IAC5B9V,EAAE,CAAC+4B,0BAA0B,CAAC,CAAC;EACjC;EACAK,cAAcA,CAAA,EAAG;IACf,MAAMp5B,EAAE,GAAG,IAAI;IACf,IAAIm5B,UAAU,GAAGn5B,EAAE,CAACi2B,WAAW;IAC/B,IAAI,CAACkD,UAAU,EAAE;MACf,MAAMjC,UAAU,GAAGl3B,EAAE,CAAC6G,OAAO,CAACiP,KAAK,CAACohB,UAAU;MAC9C,IAAIphB,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;MACpB,IAAIohB,UAAU,GAAGphB,KAAK,CAACrV,MAAM,EAAE;QAC7BqV,KAAK,GAAGke,MAAM,CAACle,KAAK,EAAEohB,UAAU,CAAC;MACnC;MACAl3B,EAAE,CAACi2B,WAAW,GAAGkD,UAAU,GAAGn5B,EAAE,CAACw6B,kBAAkB,CAAC1kB,KAAK,EAAEA,KAAK,CAACrV,MAAM,CAAC;IAC1E;IACA,OAAO04B,UAAU;EACnB;EACAqB,kBAAkBA,CAAC1kB,KAAK,EAAErV,MAAM,EAAE;IAChC,MAAM;MAACkM,GAAG;MAAEupB,iBAAiB,EAAEzB;IAAM,CAAC,GAAG,IAAI;IAC7C,MAAMgG,MAAM,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAG,EAAE;IAClB,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAIxnC,CAAC,EAAEoB,CAAC,EAAEiwB,IAAI,EAAE7S,KAAK,EAAEipB,QAAQ,EAAEC,UAAU,EAAEpoB,KAAK,EAAEuiB,UAAU,EAAEvc,KAAK,EAAED,MAAM,EAAEsiB,WAAW;IAC1F,KAAK3nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqN,MAAM,EAAE,EAAErN,CAAC,EAAE;MAC3Bwe,KAAK,GAAGkE,KAAK,CAAC1iB,CAAC,CAAC,CAACwe,KAAK;MACtBipB,QAAQ,GAAG,IAAI,CAACG,uBAAuB,CAAC5nC,CAAC,CAAC;MAC1CuZ,GAAG,CAACooB,IAAI,GAAG+F,UAAU,GAAGD,QAAQ,CAACI,MAAM;MACvCvoB,KAAK,GAAG+hB,MAAM,CAACqG,UAAU,CAAC,GAAGrG,MAAM,CAACqG,UAAU,CAAC,IAAI;QAACvxB,IAAI,EAAE,CAAC,CAAC;QAAEmrB,EAAE,EAAE;MAAE,CAAC;MACrEO,UAAU,GAAG4F,QAAQ,CAAC5F,UAAU;MAChCvc,KAAK,GAAGD,MAAM,GAAG,CAAC;MAClB,IAAI,CAAChkB,aAAa,CAACmd,KAAK,CAAC,IAAI,CAACre,OAAO,CAACqe,KAAK,CAAC,EAAE;QAC5C8G,KAAK,GAAGrgB,YAAY,CAACsU,GAAG,EAAE+F,KAAK,CAACnJ,IAAI,EAAEmJ,KAAK,CAACgiB,EAAE,EAAEhc,KAAK,EAAE9G,KAAK,CAAC;QAC7D6G,MAAM,GAAGwc,UAAU;MACrB,CAAC,MAAM,IAAI1hC,OAAO,CAACqe,KAAK,CAAC,EAAE;QACzB,KAAKpd,CAAC,GAAG,CAAC,EAAEiwB,IAAI,GAAG7S,KAAK,CAACnR,MAAM,EAAEjM,CAAC,GAAGiwB,IAAI,EAAE,EAAEjwB,CAAC,EAAE;UAC9CumC,WAAW,GAAGnpB,KAAK,CAACpd,CAAC,CAAC;UACtB,IAAI,CAACC,aAAa,CAACsmC,WAAW,CAAC,IAAI,CAACxnC,OAAO,CAACwnC,WAAW,CAAC,EAAE;YACxDriB,KAAK,GAAGrgB,YAAY,CAACsU,GAAG,EAAE+F,KAAK,CAACnJ,IAAI,EAAEmJ,KAAK,CAACgiB,EAAE,EAAEhc,KAAK,EAAEqiB,WAAW,CAAC;YACnEtiB,MAAM,IAAIwc,UAAU;UACtB;QACF;MACF;MACAwF,MAAM,CAACh5B,IAAI,CAACiX,KAAK,CAAC;MAClBgiB,OAAO,CAACj5B,IAAI,CAACgX,MAAM,CAAC;MACpBkiB,eAAe,GAAG/6B,IAAI,CAACmC,GAAG,CAAC2W,KAAK,EAAEiiB,eAAe,CAAC;MAClDC,gBAAgB,GAAGh7B,IAAI,CAACmC,GAAG,CAAC0W,MAAM,EAAEmiB,gBAAgB,CAAC;IACvD;IACApG,cAAc,CAACC,MAAM,EAAEh0B,MAAM,CAAC;IAC9B,MAAM64B,MAAM,GAAGmB,MAAM,CAAC1hB,OAAO,CAAC4hB,eAAe,CAAC;IAC9C,MAAMnB,OAAO,GAAGkB,OAAO,CAAC3hB,OAAO,CAAC6hB,gBAAgB,CAAC;IACjD,MAAMM,OAAO,GAAIC,GAAG,KAAM;MAACziB,KAAK,EAAE+hB,MAAM,CAACU,GAAG,CAAC,IAAI,CAAC;MAAE1iB,MAAM,EAAEiiB,OAAO,CAACS,GAAG,CAAC,IAAI;IAAC,CAAC,CAAC;IAC/E,OAAO;MACLxI,KAAK,EAAEuI,OAAO,CAAC,CAAC,CAAC;MACjBtiB,IAAI,EAAEsiB,OAAO,CAACz6B,MAAM,GAAG,CAAC,CAAC;MACzB64B,MAAM,EAAE4B,OAAO,CAAC5B,MAAM,CAAC;MACvBE,OAAO,EAAE0B,OAAO,CAAC1B,OAAO;IAC1B,CAAC;EACH;EACA3nB,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,OAAOA,KAAK;EACd;EACAuO,gBAAgBA,CAACvO,KAAK,EAAEwB,KAAK,EAAE;IAC7B,OAAOoI,GAAG;EACZ;EACAkqB,gBAAgBA,CAACC,KAAK,EAAE,CAAC;EACzBtlB,eAAeA,CAACjN,KAAK,EAAE;IACrB,MAAMgN,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAIhN,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGgN,KAAK,CAACrV,MAAM,GAAG,CAAC,EAAE;MACzC,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACoV,gBAAgB,CAACC,KAAK,CAAChN,KAAK,CAAC,CAACxB,KAAK,CAAC;EAClD;EACAoT,kBAAkBA,CAAC4gB,OAAO,EAAE;IAC1B,MAAMt7B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC8kB,cAAc,EAAE;MACrBwW,OAAO,GAAG,CAAC,GAAGA,OAAO;IACvB;IACA,MAAMD,KAAK,GAAGr7B,EAAE,CAACkZ,WAAW,GAAGoiB,OAAO,GAAGt7B,EAAE,CAACyV,OAAO;IACnD,OAAOld,WAAW,CAACyH,EAAE,CAACy4B,cAAc,GAAGhgC,WAAW,CAACuH,EAAE,CAACf,KAAK,EAAEo8B,KAAK,EAAE,CAAC,CAAC,GAAGA,KAAK,CAAC;EACjF;EACAE,kBAAkBA,CAACF,KAAK,EAAE;IACxB,MAAMC,OAAO,GAAG,CAACD,KAAK,GAAG,IAAI,CAACniB,WAAW,IAAI,IAAI,CAACzD,OAAO;IACzD,OAAO,IAAI,CAACqP,cAAc,GAAG,CAAC,GAAGwW,OAAO,GAAGA,OAAO;EACpD;EACAxjB,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACjC,gBAAgB,CAAC,IAAI,CAAC2lB,YAAY,CAAC,CAAC,CAAC;EACnD;EACAA,YAAYA,CAAA,EAAG;IACb,MAAM;MAAC37B,GAAG;MAAEkC;IAAG,CAAC,GAAG,IAAI;IACvB,OAAOlC,GAAG,GAAG,CAAC,IAAIkC,GAAG,GAAG,CAAC,GAAGA,GAAG,GAC7BlC,GAAG,GAAG,CAAC,IAAIkC,GAAG,GAAG,CAAC,GAAGlC,GAAG,GACxB,CAAC;EACL;EACAgQ,UAAUA,CAAC/G,KAAK,EAAE;IAChB,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAK,IAAI,EAAE;IAC5B,IAAIhN,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGgN,KAAK,CAACrV,MAAM,EAAE;MACtC,MAAMK,IAAI,GAAGgV,KAAK,CAAChN,KAAK,CAAC;MACzB,OAAOhI,IAAI,CAACwM,QAAQ,KACrBxM,IAAI,CAACwM,QAAQ,GAAG6nB,iBAAiB,CAACn1B,EAAE,CAAC6P,UAAU,CAAC,CAAC,EAAE/G,KAAK,EAAEhI,IAAI,CAAC,CAAC;IACjE;IACA,OAAOd,EAAE,CAACsN,QAAQ,KAClBtN,EAAE,CAACsN,QAAQ,GAAG4nB,kBAAkB,CAACl1B,EAAE,CAACf,KAAK,CAAC4Q,UAAU,CAAC,CAAC,EAAE7P,EAAE,CAAC,CAAC;EAC9D;EACAizB,SAASA,CAAA,EAAG;IACV,MAAMjzB,EAAE,GAAG,IAAI;IACf,MAAMy7B,WAAW,GAAGz7B,EAAE,CAAC6G,OAAO,CAACiP,KAAK;IACpC,MAAM4lB,GAAG,GAAGzmC,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;IACvC,MAAMna,GAAG,GAAG/b,IAAI,CAACgW,GAAG,CAAChW,IAAI,CAAC+b,GAAG,CAAC+f,GAAG,CAAC,CAAC;IACnC,MAAM7f,GAAG,GAAGjc,IAAI,CAACgW,GAAG,CAAChW,IAAI,CAACic,GAAG,CAAC6f,GAAG,CAAC,CAAC;IACnC,MAAMvC,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,MAAMlP,OAAO,GAAGuR,WAAW,CAAC9J,eAAe,IAAI,CAAC;IAChD,MAAM37B,CAAC,GAAGmjC,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAC5gB,KAAK,GAAGwR,OAAO,GAAG,CAAC;IAC5D,MAAM91B,CAAC,GAAG+kC,UAAU,GAAGA,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAGyR,OAAO,GAAG,CAAC;IAC9D,OAAOlqB,EAAE,CAACgY,YAAY,CAAC,CAAC,GACpB5jB,CAAC,GAAGunB,GAAG,GAAG3lB,CAAC,GAAG6lB,GAAG,GAAG7lB,CAAC,GAAG2lB,GAAG,GAAGvnB,CAAC,GAAGynB,GAAG,GACrCznB,CAAC,GAAGynB,GAAG,GAAG7lB,CAAC,GAAG2lB,GAAG,GAAGvnB,CAAC,GAAGunB,GAAG,GAAG3lB,CAAC,GAAG6lB,GAAG;EAC3C;EACAqd,UAAUA,CAAA,EAAG;IACX,MAAMzW,OAAO,GAAG,IAAI,CAAC5b,OAAO,CAAC4b,OAAO;IACpC,IAAIA,OAAO,KAAK,MAAM,EAAE;MACtB,OAAO,CAAC,CAACA,OAAO;IAClB;IACA,OAAO,IAAI,CAACpN,uBAAuB,CAAC,CAAC,CAAC5U,MAAM,GAAG,CAAC;EAClD;EACAk7B,qBAAqBA,CAACzpB,SAAS,EAAE;IAC/B,MAAMlS,EAAE,GAAG,IAAI;IACf,MAAMoL,IAAI,GAAGpL,EAAE,CAACoL,IAAI;IACpB,MAAMnM,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM4H,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAM;MAACuT,IAAI;MAAE8K;IAAQ,CAAC,GAAGre,OAAO;IAChC,MAAMsT,MAAM,GAAGC,IAAI,CAACD,MAAM;IAC1B,MAAMnC,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,MAAMlC,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,MAAM8lB,WAAW,GAAG9lB,KAAK,CAACrV,MAAM,IAAI0Z,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IACnD,MAAM0hB,EAAE,GAAGjH,iBAAiB,CAACxa,IAAI,CAAC;IAClC,MAAM5Z,KAAK,GAAG,EAAE;IAChB,MAAMs7B,UAAU,GAAG1hB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC,CAAC;IACpD,MAAMmsB,SAAS,GAAGF,UAAU,CAACjL,UAAU,GAAGiL,UAAU,CAACtd,WAAW,GAAG,CAAC;IACpE,MAAMyd,aAAa,GAAGD,SAAS,GAAG,CAAC;IACnC,MAAME,gBAAgB,GAAG,SAAAA,CAASb,KAAK,EAAE;MACvC,OAAO5iC,WAAW,CAACwG,KAAK,EAAEo8B,KAAK,EAAEW,SAAS,CAAC;IAC7C,CAAC;IACD,IAAIG,WAAW,EAAE/oC,CAAC,EAAEmhC,SAAS,EAAE6H,gBAAgB;IAC/C,IAAIC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACtC,IAAI1X,QAAQ,KAAK,KAAK,EAAE;MACtBiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACsI,MAAM,CAAC;MACzCg0B,GAAG,GAAGt8B,EAAE,CAACsI,MAAM,GAAGuzB,EAAE;MACpBW,GAAG,GAAGL,WAAW,GAAGF,aAAa;MACjCS,EAAE,GAAGR,gBAAgB,CAAChqB,SAAS,CAAC9J,GAAG,CAAC,GAAG6zB,aAAa;MACpDW,EAAE,GAAG1qB,SAAS,CAAC5J,MAAM;IACvB,CAAC,MAAM,IAAI4c,QAAQ,KAAK,QAAQ,EAAE;MAChCiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACoI,GAAG,CAAC;MACtCs0B,EAAE,GAAGxqB,SAAS,CAAC9J,GAAG;MAClBw0B,EAAE,GAAGV,gBAAgB,CAAChqB,SAAS,CAAC5J,MAAM,CAAC,GAAG2zB,aAAa;MACvDK,GAAG,GAAGH,WAAW,GAAGF,aAAa;MACjCO,GAAG,GAAGx8B,EAAE,CAACoI,GAAG,GAAGyzB,EAAE;IACnB,CAAC,MAAM,IAAI3W,QAAQ,KAAK,MAAM,EAAE;MAC9BiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACqI,KAAK,CAAC;MACxCg0B,GAAG,GAAGr8B,EAAE,CAACqI,KAAK,GAAGwzB,EAAE;MACnBU,GAAG,GAAGJ,WAAW,GAAGF,aAAa;MACjCQ,EAAE,GAAGP,gBAAgB,CAAChqB,SAAS,CAAC3J,IAAI,CAAC,GAAG0zB,aAAa;MACrDU,EAAE,GAAGzqB,SAAS,CAAC7J,KAAK;IACtB,CAAC,MAAM,IAAI6c,QAAQ,KAAK,OAAO,EAAE;MAC/BiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACuI,IAAI,CAAC;MACvCk0B,EAAE,GAAGvqB,SAAS,CAAC3J,IAAI;MACnBo0B,EAAE,GAAGT,gBAAgB,CAAChqB,SAAS,CAAC7J,KAAK,CAAC,GAAG4zB,aAAa;MACtDI,GAAG,GAAGF,WAAW,GAAGF,aAAa;MACjCM,GAAG,GAAGv8B,EAAE,CAACuI,IAAI,GAAGszB,EAAE;IACpB,CAAC,MAAM,IAAIzwB,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI8Z,QAAQ,KAAK,QAAQ,EAAE;QACzBiX,WAAW,GAAGD,gBAAgB,CAAC,CAAChqB,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC5J,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC;MAC9E,CAAC,MAAM,IAAIjV,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAI,CAAC8f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAc,CAAC;QACtCV,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACf,KAAK,CAACuM,MAAM,CAACqxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACvO,KAAK,CAAC,CAAC;MACzF;MACAo1B,EAAE,GAAGxqB,SAAS,CAAC9J,GAAG;MAClBw0B,EAAE,GAAG1qB,SAAS,CAAC5J,MAAM;MACrBg0B,GAAG,GAAGH,WAAW,GAAGF,aAAa;MACjCO,GAAG,GAAGF,GAAG,GAAGT,EAAE;IAChB,CAAC,MAAM,IAAIzwB,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI8Z,QAAQ,KAAK,QAAQ,EAAE;QACzBiX,WAAW,GAAGD,gBAAgB,CAAC,CAAChqB,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAC7J,KAAK,IAAI,CAAC,CAAC;MACxE,CAAC,MAAM,IAAIhV,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAI,CAAC8f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAc,CAAC;QACtCV,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACf,KAAK,CAACuM,MAAM,CAACqxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACvO,KAAK,CAAC,CAAC;MACzF;MACA+0B,GAAG,GAAGF,WAAW,GAAGF,aAAa;MACjCM,GAAG,GAAGF,GAAG,GAAGR,EAAE;MACdY,EAAE,GAAGvqB,SAAS,CAAC3J,IAAI;MACnBo0B,EAAE,GAAGzqB,SAAS,CAAC7J,KAAK;IACtB;IACA,KAAKjV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwoC,WAAW,EAAE,EAAExoC,CAAC,EAAE;MAChC,MAAM0pC,WAAW,GAAG1iB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAACzc,CAAC,CAAC,CAAC;MACrD,MAAMmsB,SAAS,GAAGud,WAAW,CAACvd,SAAS;MACvC,MAAMwd,SAAS,GAAGD,WAAW,CAAC3pC,KAAK;MACnC,MAAMg+B,UAAU,GAAG/W,IAAI,CAAC+W,UAAU,IAAI,EAAE;MACxC,MAAMC,gBAAgB,GAAG0L,WAAW,CAAC1L,gBAAgB;MACrD,MAAMH,SAAS,GAAG6L,WAAW,CAAC7L,SAAS;MACvC,MAAMC,SAAS,GAAG4L,WAAW,CAAC5L,SAAS;MACvC,MAAM8L,cAAc,GAAGF,WAAW,CAACE,cAAc,IAAI,EAAE;MACvD,MAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAoB;MAC7D1I,SAAS,GAAGJ,mBAAmB,CAACn0B,EAAE,EAAE5M,CAAC,EAAE+mB,MAAM,CAAC;MAC9C,IAAIoa,SAAS,KAAKx1B,SAAS,EAAE;QAC3B;MACF;MACAq9B,gBAAgB,GAAG3jC,WAAW,CAACwG,KAAK,EAAEs1B,SAAS,EAAEhV,SAAS,CAAC;MAC3D,IAAIvH,YAAY,EAAE;QAChBqkB,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAgB;MACxC,CAAC,MAAM;QACLE,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAgB;MACxC;MACA57B,KAAK,CAACiB,IAAI,CAAC;QACT46B,GAAG;QACHC,GAAG;QACHC,GAAG;QACHC,GAAG;QACHC,EAAE;QACFC,EAAE;QACFC,EAAE;QACFC,EAAE;QACFlkB,KAAK,EAAE6G,SAAS;QAChBpsB,KAAK,EAAE4pC,SAAS;QAChB5L,UAAU;QACVC,gBAAgB;QAChBH,SAAS;QACTC,SAAS;QACT8L,cAAc;QACdC;MACF,CAAC,CAAC;IACJ;IACAj9B,EAAE,CAACu2B,YAAY,GAAGqF,WAAW;IAC7B57B,EAAE,CAACw2B,YAAY,GAAG2F,WAAW;IAC7B,OAAO37B,KAAK;EACd;EACA08B,kBAAkBA,CAAChrB,SAAS,EAAE;IAC5B,MAAMlS,EAAE,GAAG,IAAI;IACf,MAAMoL,IAAI,GAAGpL,EAAE,CAACoL,IAAI;IACpB,MAAMvE,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAM;MAACqe,QAAQ;MAAEpP,KAAK,EAAE2lB;IAAW,CAAC,GAAG50B,OAAO;IAC9C,MAAMmR,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,MAAMlC,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,MAAM;MAACic,KAAK;MAAEC,UAAU;MAAE9H;IAAO,CAAC,GAAGuR,WAAW;IAChD,MAAMI,EAAE,GAAGjH,iBAAiB,CAAC/tB,OAAO,CAACuT,IAAI,CAAC;IAC1C,MAAM+iB,cAAc,GAAGtB,EAAE,GAAG3R,OAAO;IACnC,MAAMjP,QAAQ,GAAG,CAAChmB,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;IAC7C,MAAMt1B,KAAK,GAAG,EAAE;IAChB,IAAIpN,CAAC,EAAEyV,IAAI,EAAE/H,IAAI,EAAE8Q,KAAK,EAAE1b,CAAC,EAAEE,CAAC,EAAEgnC,SAAS,EAAE/B,KAAK,EAAEtG,IAAI,EAAEE,UAAU,EAAEoI,SAAS,EAAEC,UAAU;IACzF,IAAIC,YAAY,GAAG,QAAQ;IAC3B,IAAIrY,QAAQ,KAAK,KAAK,EAAE;MACtB9uB,CAAC,GAAG4J,EAAE,CAACsI,MAAM,GAAG60B,cAAc;MAC9BC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAuB,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAItY,QAAQ,KAAK,QAAQ,EAAE;MAChC9uB,CAAC,GAAG4J,EAAE,CAACoI,GAAG,GAAG+0B,cAAc;MAC3BC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAuB,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAItY,QAAQ,KAAK,MAAM,EAAE;MAC9B,MAAM0K,GAAG,GAAG,IAAI,CAAC6N,uBAAuB,CAAC5B,EAAE,CAAC;MAC5CuB,SAAS,GAAGxN,GAAG,CAACwN,SAAS;MACzBlnC,CAAC,GAAG05B,GAAG,CAAC15B,CAAC;IACX,CAAC,MAAM,IAAIgvB,QAAQ,KAAK,OAAO,EAAE;MAC/B,MAAM0K,GAAG,GAAG,IAAI,CAAC6N,uBAAuB,CAAC5B,EAAE,CAAC;MAC5CuB,SAAS,GAAGxN,GAAG,CAACwN,SAAS;MACzBlnC,CAAC,GAAG05B,GAAG,CAAC15B,CAAC;IACX,CAAC,MAAM,IAAIkV,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI8Z,QAAQ,KAAK,QAAQ,EAAE;QACzB9uB,CAAC,GAAI,CAAC8b,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC5J,MAAM,IAAI,CAAC,GAAI60B,cAAc;MAC/D,CAAC,MAAM,IAAI9pC,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAI,CAAC8f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAc,CAAC;QACtCzmC,CAAC,GAAG4J,EAAE,CAACf,KAAK,CAACuM,MAAM,CAACqxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACvO,KAAK,CAAC,GAAG61B,cAAc;MAC9E;MACAC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAuB,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAIpyB,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI8Z,QAAQ,KAAK,QAAQ,EAAE;QACzBhvB,CAAC,GAAI,CAACgc,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAC7J,KAAK,IAAI,CAAC,GAAI80B,cAAc;MAC/D,CAAC,MAAM,IAAI9pC,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAI,CAAC8f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAc,CAAC;QACtC3mC,CAAC,GAAG8J,EAAE,CAACf,KAAK,CAACuM,MAAM,CAACqxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACvO,KAAK,CAAC;MAC7D;MACA81B,SAAS,GAAG,IAAI,CAACK,uBAAuB,CAAC5B,EAAE,CAAC,CAACuB,SAAS;IACxD;IACA,IAAIhyB,IAAI,KAAK,GAAG,EAAE;MAChB,IAAI2mB,KAAK,KAAK,OAAO,EAAE;QACrBwL,YAAY,GAAG,KAAK;MACtB,CAAC,MAAM,IAAIxL,KAAK,KAAK,KAAK,EAAE;QAC1BwL,YAAY,GAAG,QAAQ;MACzB;IACF;IACA,MAAMpE,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,KAAKhmC,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGiN,KAAK,CAACrV,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC9C0N,IAAI,GAAGgV,KAAK,CAAC1iB,CAAC,CAAC;MACfwe,KAAK,GAAG9Q,IAAI,CAAC8Q,KAAK;MAClB,MAAMkrB,WAAW,GAAGrB,WAAW,CAACM,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAACzc,CAAC,CAAC,CAAC;MAC5DioC,KAAK,GAAGr7B,EAAE,CAAC+V,eAAe,CAAC3iB,CAAC,CAAC,GAAGqoC,WAAW,CAAC7J,WAAW;MACvDmD,IAAI,GAAG/0B,EAAE,CAACg7B,uBAAuB,CAAC5nC,CAAC,CAAC;MACpC6hC,UAAU,GAAGF,IAAI,CAACE,UAAU;MAC5BoI,SAAS,GAAG9pC,OAAO,CAACqe,KAAK,CAAC,GAAGA,KAAK,CAACnR,MAAM,GAAG,CAAC;MAC7C,MAAMi9B,SAAS,GAAGL,SAAS,GAAG,CAAC;MAC/B,MAAMlqC,KAAK,GAAG2pC,WAAW,CAAC3pC,KAAK;MAC/B,MAAMwqC,WAAW,GAAGb,WAAW,CAACrL,eAAe;MAC/C,MAAMmM,WAAW,GAAGd,WAAW,CAACtL,eAAe;MAC/C,IAAIxZ,YAAY,EAAE;QAChB9hB,CAAC,GAAGmlC,KAAK;QACT,IAAInW,QAAQ,KAAK,KAAK,EAAE;UACtB,IAAI8M,UAAU,KAAK,MAAM,IAAI/W,QAAQ,KAAK,CAAC,EAAE;YAC3CqiB,UAAU,GAAG,CAACD,SAAS,GAAGpI,UAAU,GAAGA,UAAU,GAAG,CAAC;UACvD,CAAC,MAAM,IAAIjD,UAAU,KAAK,QAAQ,EAAE;YAClCsL,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG,CAAC,GAAGilB,SAAS,GAAGzI,UAAU,GAAGA,UAAU;UACnF,CAAC,MAAM;YACLqI,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAGwc,UAAU,GAAG,CAAC;UAC1D;QACF,CAAC,MAAM;UACL,IAAIjD,UAAU,KAAK,MAAM,IAAI/W,QAAQ,KAAK,CAAC,EAAE;YAC3CqiB,UAAU,GAAGrI,UAAU,GAAG,CAAC;UAC7B,CAAC,MAAM,IAAIjD,UAAU,KAAK,QAAQ,EAAE;YAClCsL,UAAU,GAAGnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG,CAAC,GAAGilB,SAAS,GAAGzI,UAAU;UACrE,CAAC,MAAM;YACLqI,UAAU,GAAGnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG4kB,SAAS,GAAGpI,UAAU;UACjE;QACF;MACF,CAAC,MAAM;QACL7+B,CAAC,GAAGilC,KAAK;QACTiC,UAAU,GAAG,CAAC,CAAC,GAAGD,SAAS,IAAIpI,UAAU,GAAG,CAAC;MAC/C;MACAz0B,KAAK,CAACiB,IAAI,CAAC;QACTwZ,QAAQ;QACRrJ,KAAK;QACLmjB,IAAI;QACJ5hC,KAAK;QACLwqC,WAAW;QACXC,WAAW;QACXN,UAAU;QACVF,SAAS;QACTG,YAAY;QACZM,WAAW,EAAE,CAAC3nC,CAAC,EAAEE,CAAC;MACpB,CAAC,CAAC;IACJ;IACA,OAAOoK,KAAK;EACd;EACAg9B,uBAAuBA,CAAA,EAAG;IACxB,MAAMx9B,EAAE,GAAG,IAAI;IACf,MAAM;MAACklB,QAAQ;MAAEpP;IAAK,CAAC,GAAG9V,EAAE,CAAC6G,OAAO;IACpC,MAAMoU,QAAQ,GAAG,CAAChmB,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;IAC7C,IAAI7a,QAAQ,EAAE;MACZ,OAAOiK,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO;IAC9C;IACA,IAAI6M,KAAK,GAAG,QAAQ;IACpB,IAAIjc,KAAK,CAACic,KAAK,KAAK,OAAO,EAAE;MAC3BA,KAAK,GAAG,MAAM;IAChB,CAAC,MAAM,IAAIjc,KAAK,CAACic,KAAK,KAAK,KAAK,EAAE;MAChCA,KAAK,GAAG,OAAO;IACjB;IACA,OAAOA,KAAK;EACd;EACA0L,uBAAuBA,CAAC5B,EAAE,EAAE;IAC1B,MAAM77B,EAAE,GAAG,IAAI;IACf,MAAM;MAACklB,QAAQ;MAAEpP,KAAK,EAAE;QAACkc,UAAU;QAAET,MAAM;QAAErH;MAAO;IAAC,CAAC,GAAGlqB,EAAE,CAAC6G,OAAO;IACnE,MAAMsyB,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,MAAM+D,cAAc,GAAGtB,EAAE,GAAG3R,OAAO;IACnC,MAAMoP,MAAM,GAAGH,UAAU,CAACG,MAAM,CAAC5gB,KAAK;IACtC,IAAI0kB,SAAS;IACb,IAAIlnC,CAAC;IACL,IAAIgvB,QAAQ,KAAK,MAAM,EAAE;MACvB,IAAIqM,MAAM,EAAE;QACV6L,SAAS,GAAG,MAAM;QAClBlnC,CAAC,GAAG8J,EAAE,CAACqI,KAAK,GAAG6hB,OAAO;MACxB,CAAC,MAAM;QACLh0B,CAAC,GAAG8J,EAAE,CAACqI,KAAK,GAAG80B,cAAc;QAC7B,IAAInL,UAAU,KAAK,MAAM,EAAE;UACzBoL,SAAS,GAAG,OAAO;QACrB,CAAC,MAAM,IAAIpL,UAAU,KAAK,QAAQ,EAAE;UAClCoL,SAAS,GAAG,QAAQ;UACpBlnC,CAAC,IAAKojC,MAAM,GAAG,CAAE;QACnB,CAAC,MAAM;UACL8D,SAAS,GAAG,MAAM;UAClBlnC,CAAC,GAAG8J,EAAE,CAACuI,IAAI;QACb;MACF;IACF,CAAC,MAAM,IAAI2c,QAAQ,KAAK,OAAO,EAAE;MAC/B,IAAIqM,MAAM,EAAE;QACV6L,SAAS,GAAG,OAAO;QACnBlnC,CAAC,GAAG8J,EAAE,CAACuI,IAAI,GAAG2hB,OAAO;MACvB,CAAC,MAAM;QACLh0B,CAAC,GAAG8J,EAAE,CAACuI,IAAI,GAAG40B,cAAc;QAC5B,IAAInL,UAAU,KAAK,MAAM,EAAE;UACzBoL,SAAS,GAAG,MAAM;QACpB,CAAC,MAAM,IAAIpL,UAAU,KAAK,QAAQ,EAAE;UAClCoL,SAAS,GAAG,QAAQ;UACpBlnC,CAAC,IAAIojC,MAAM,GAAG,CAAC;QACjB,CAAC,MAAM;UACL8D,SAAS,GAAG,OAAO;UACnBlnC,CAAC,GAAG8J,EAAE,CAACqI,KAAK;QACd;MACF;IACF,CAAC,MAAM;MACL+0B,SAAS,GAAG,OAAO;IACrB;IACA,OAAO;MAACA,SAAS;MAAElnC;IAAC,CAAC;EACvB;EACA4nC,iBAAiBA,CAAA,EAAG;IAClB,MAAM99B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC6G,OAAO,CAACiP,KAAK,CAACyb,MAAM,EAAE;MAC3B;IACF;IACA,MAAMtyB,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMimB,QAAQ,GAAGllB,EAAE,CAAC6G,OAAO,CAACqe,QAAQ;IACpC,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;MAC/C,OAAO;QAAC9c,GAAG,EAAE,CAAC;QAAEG,IAAI,EAAEvI,EAAE,CAACuI,IAAI;QAAED,MAAM,EAAErJ,KAAK,CAACwZ,MAAM;QAAEpQ,KAAK,EAAErI,EAAE,CAACqI;MAAK,CAAC;IACvE;IAAE,IAAI6c,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;MACjD,OAAO;QAAC9c,GAAG,EAAEpI,EAAE,CAACoI,GAAG;QAAEG,IAAI,EAAE,CAAC;QAAED,MAAM,EAAEtI,EAAE,CAACsI,MAAM;QAAED,KAAK,EAAEpJ,KAAK,CAACyZ;MAAK,CAAC;IACtE;EACF;EACAqlB,cAAcA,CAAA,EAAG;IACf,MAAM;MAACpxB,GAAG;MAAE9F,OAAO,EAAE;QAACuY;MAAe,CAAC;MAAE7W,IAAI;MAAEH,GAAG;MAAEsQ,KAAK;MAAED;IAAM,CAAC,GAAG,IAAI;IACxE,IAAI2G,eAAe,EAAE;MACnBzS,GAAG,CAACqxB,IAAI,CAAC,CAAC;MACVrxB,GAAG,CAACwS,SAAS,GAAGC,eAAe;MAC/BzS,GAAG,CAACsxB,QAAQ,CAAC11B,IAAI,EAAEH,GAAG,EAAEsQ,KAAK,EAAED,MAAM,CAAC;MACtC9L,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACf;EACF;EACAvkB,oBAAoBA,CAACrS,KAAK,EAAE;IAC1B,MAAMtH,EAAE,GAAG,IAAI;IACf,MAAMoa,IAAI,GAAGpa,EAAE,CAAC6G,OAAO,CAACuT,IAAI;IAC5B,IAAI,CAACpa,EAAE,CAACk5B,UAAU,CAAC,CAAC,IAAI,CAAC9e,IAAI,CAACqI,OAAO,EAAE;MACrC,OAAO,CAAC;IACV;IACA,MAAM3M,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,MAAMhN,KAAK,GAAGgN,KAAK,CAACqoB,SAAS,CAACnpC,CAAC,IAAIA,CAAC,CAACsS,KAAK,KAAKA,KAAK,CAAC;IACrD,IAAIwB,KAAK,IAAI,CAAC,EAAE;MACd,MAAMhB,IAAI,GAAGsS,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC/G,KAAK,CAAC,CAAC;MAClD,OAAOhB,IAAI,CAACyX,SAAS;IACvB;IACA,OAAO,CAAC;EACV;EACA6e,QAAQA,CAAClsB,SAAS,EAAE;IAClB,MAAMlS,EAAE,GAAG,IAAI;IACf,MAAMoa,IAAI,GAAGpa,EAAE,CAAC6G,OAAO,CAACuT,IAAI;IAC5B,MAAMzN,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;IAClB,MAAM1N,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM68B,UAAU,GAAG1hB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC,CAAC;IACpD,MAAMmsB,SAAS,GAAG5hB,IAAI,CAACyW,UAAU,GAAGiL,UAAU,CAACtd,WAAW,GAAG,CAAC;IAC9D,MAAMhe,KAAK,GAAGR,EAAE,CAAC+1B,cAAc,KAAK/1B,EAAE,CAAC+1B,cAAc,GAAG/1B,EAAE,CAAC27B,qBAAqB,CAACzpB,SAAS,CAAC,CAAC;IAC5F,IAAI9e,CAAC,EAAEyV,IAAI;IACX,MAAMw1B,QAAQ,GAAGA,CAACC,EAAE,EAAEC,EAAE,EAAEtf,KAAK,KAAK;MAClC,IAAI,CAACA,KAAK,CAACvG,KAAK,IAAI,CAACuG,KAAK,CAAC9rB,KAAK,EAAE;QAChC;MACF;MACAwZ,GAAG,CAACqxB,IAAI,CAAC,CAAC;MACVrxB,GAAG,CAAC4S,SAAS,GAAGN,KAAK,CAACvG,KAAK;MAC3B/L,GAAG,CAAC0S,WAAW,GAAGJ,KAAK,CAAC9rB,KAAK;MAC7BwZ,GAAG,CAAC6xB,WAAW,CAACvf,KAAK,CAACkS,UAAU,IAAI,EAAE,CAAC;MACvCxkB,GAAG,CAAC8xB,cAAc,GAAGxf,KAAK,CAACmS,gBAAgB;MAC3CzkB,GAAG,CAAC+xB,SAAS,CAAC,CAAC;MACf/xB,GAAG,CAACgyB,MAAM,CAACL,EAAE,CAACpoC,CAAC,EAAEooC,EAAE,CAACloC,CAAC,CAAC;MACtBuW,GAAG,CAACiyB,MAAM,CAACL,EAAE,CAACroC,CAAC,EAAEqoC,EAAE,CAACnoC,CAAC,CAAC;MACtBuW,GAAG,CAACkyB,MAAM,CAAC,CAAC;MACZlyB,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACf,CAAC;IACD,IAAI9jB,IAAI,CAACqI,OAAO,EAAE;MAChB,KAAKrvB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGrI,KAAK,CAACC,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;QAC9C,MAAMuN,IAAI,GAAGH,KAAK,CAACpN,CAAC,CAAC;QACrB,IAAIgnB,IAAI,CAAC0W,eAAe,EAAE;UACxBuN,QAAQ,CACN;YAACnoC,CAAC,EAAEyK,IAAI,CAAC87B,EAAE;YAAErmC,CAAC,EAAEuK,IAAI,CAAC+7B;UAAE,CAAC,EACxB;YAACxmC,CAAC,EAAEyK,IAAI,CAACg8B,EAAE;YAAEvmC,CAAC,EAAEuK,IAAI,CAACi8B;UAAE,CAAC,EACxBj8B,IACF,CAAC;QACH;QACA,IAAIyZ,IAAI,CAAC2W,SAAS,EAAE;UAClBsN,QAAQ,CACN;YAACnoC,CAAC,EAAEyK,IAAI,CAAC07B,GAAG;YAAEjmC,CAAC,EAAEuK,IAAI,CAAC27B;UAAG,CAAC,EAC1B;YAACpmC,CAAC,EAAEyK,IAAI,CAAC47B,GAAG;YAAEnmC,CAAC,EAAEuK,IAAI,CAAC67B;UAAG,CAAC,EAC1B;YACErpC,KAAK,EAAEwN,IAAI,CAACuwB,SAAS;YACrBxY,KAAK,EAAE/X,IAAI,CAACswB,SAAS;YACrBE,UAAU,EAAExwB,IAAI,CAACq8B,cAAc;YAC/B5L,gBAAgB,EAAEzwB,IAAI,CAACs8B;UACzB,CACF,CAAC;QACH;MACF;IACF;IACA,IAAIjB,SAAS,EAAE;MACb,MAAM8C,QAAQ,GAAG1kB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC7P,EAAE,CAACu2B,YAAY,GAAG,CAAC,CAAC,CAAC;MACpE,MAAMwI,aAAa,GAAGD,QAAQ,CAACvf,SAAS;MACxC,MAAM4c,WAAW,GAAGn8B,EAAE,CAACw2B,YAAY;MACnC,IAAIiG,EAAE,EAAEE,EAAE,EAAED,EAAE,EAAEE,EAAE;MAClB,IAAI58B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;QACrBykB,EAAE,GAAGhkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACuI,IAAI,EAAEyzB,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC3DW,EAAE,GAAGlkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACqI,KAAK,EAAE02B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACpErC,EAAE,GAAGE,EAAE,GAAGT,WAAW;MACvB,CAAC,MAAM;QACLO,EAAE,GAAGjkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACoI,GAAG,EAAE4zB,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC1DY,EAAE,GAAGnkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACsI,MAAM,EAAEy2B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACrEtC,EAAE,GAAGE,EAAE,GAAGR,WAAW;MACvB;MACAkC,QAAQ,CACN;QAACnoC,CAAC,EAAEumC,EAAE;QAAErmC,CAAC,EAAEsmC;MAAE,CAAC,EACd;QAACxmC,CAAC,EAAEymC,EAAE;QAAEvmC,CAAC,EAAEwmC;MAAE,CAAC,EACd;QAAClkB,KAAK,EAAEsjB,SAAS;QAAE7oC,KAAK,EAAE2rC,QAAQ,CAACxf;MAAW,CAAC,CAAC;IACpD;EACF;EACA0f,UAAUA,CAAC9sB,SAAS,EAAE;IACpB,MAAMlS,EAAE,GAAG,IAAI;IACf,MAAMy7B,WAAW,GAAGz7B,EAAE,CAAC6G,OAAO,CAACiP,KAAK;IACpC,IAAI,CAAC2lB,WAAW,CAAChZ,OAAO,EAAE;MACxB;IACF;IACA,MAAM9V,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;IAClB,MAAMsF,IAAI,GAAGjS,EAAE,CAAC89B,iBAAiB,CAAC,CAAC;IACnC,IAAI7rB,IAAI,EAAE;MACRtd,QAAQ,CAACgY,GAAG,EAAEsF,IAAI,CAAC;IACrB;IACA,MAAMzR,KAAK,GAAGR,EAAE,CAACg2B,WAAW,KAAKh2B,EAAE,CAACg2B,WAAW,GAAGh2B,EAAE,CAACk9B,kBAAkB,CAAChrB,SAAS,CAAC,CAAC;IACnF,IAAI9e,CAAC,EAAEyV,IAAI;IACX,KAAKzV,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGrI,KAAK,CAACC,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC9C,MAAMuN,IAAI,GAAGH,KAAK,CAACpN,CAAC,CAAC;MACrB,MAAMynC,QAAQ,GAAGl6B,IAAI,CAACo0B,IAAI;MAC1B,MAAMnjB,KAAK,GAAGjR,IAAI,CAACiR,KAAK;MACxB,IAAIxb,CAAC,GAAGuK,IAAI,CAAC28B,UAAU;MACvB3kC,UAAU,CAACgU,GAAG,EAAEiF,KAAK,EAAE,CAAC,EAAExb,CAAC,EAAEykC,QAAQ,EAAEl6B,IAAI,CAAC;IAC9C;IACA,IAAIsR,IAAI,EAAE;MACRpd,UAAU,CAAC8X,GAAG,CAAC;IACjB;EACF;EACAsyB,SAASA,CAAA,EAAG;IACV,MAAM;MAACtyB,GAAG;MAAE9F,OAAO,EAAE;QAACqe,QAAQ;QAAEnK,KAAK;QAAEhT;MAAO;IAAC,CAAC,GAAG,IAAI;IACvD,IAAI,CAACgT,KAAK,CAAC0H,OAAO,EAAE;MAClB;IACF;IACA,MAAMsS,IAAI,GAAGl8B,MAAM,CAACkiB,KAAK,CAACga,IAAI,CAAC;IAC/B,MAAM7K,OAAO,GAAGrzB,SAAS,CAACkkB,KAAK,CAACmP,OAAO,CAAC;IACxC,MAAM6H,KAAK,GAAGhX,KAAK,CAACgX,KAAK;IACzB,IAAI5X,MAAM,GAAG4a,IAAI,CAACE,UAAU,GAAG,CAAC;IAChC,IAAI/P,QAAQ,KAAK,QAAQ,EAAE;MACzB/K,MAAM,IAAI+P,OAAO,CAAC5hB,MAAM;MACxB,IAAI/U,OAAO,CAACwnB,KAAK,CAACmE,IAAI,CAAC,EAAE;QACvB/E,MAAM,IAAI4a,IAAI,CAACE,UAAU,IAAIla,KAAK,CAACmE,IAAI,CAACze,MAAM,GAAG,CAAC,CAAC;MACrD;IACF,CAAC,MAAM;MACL0Z,MAAM,IAAI+P,OAAO,CAAC9hB,GAAG;IACvB;IACA,MAAM;MAACktB,MAAM;MAAEC,MAAM;MAAElY,QAAQ;MAAEpC;IAAQ,CAAC,GAAGoa,SAAS,CAAC,IAAI,EAAElb,MAAM,EAAE+K,QAAQ,EAAE6M,KAAK,CAAC;IACrFp5B,UAAU,CAACgU,GAAG,EAAEoO,KAAK,CAACmE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE6V,IAAI,EAAE;MACtC5hC,KAAK,EAAE4nB,KAAK,CAAC5nB,KAAK;MAClBkqB,QAAQ;MACRpC,QAAQ;MACRmiB,SAAS,EAAEhI,UAAU,CAACrD,KAAK,EAAE7M,QAAQ,EAAEnd,OAAO,CAAC;MAC/Cw1B,YAAY,EAAE,QAAQ;MACtBM,WAAW,EAAE,CAACvI,MAAM,EAAEC,MAAM;IAC9B,CAAC,CAAC;EACJ;EACA70B,IAAIA,CAACwR,SAAS,EAAE;IACd,MAAMlS,EAAE,GAAG,IAAI;IACf,IAAI,CAACA,EAAE,CAACk5B,UAAU,CAAC,CAAC,EAAE;MACpB;IACF;IACAl5B,EAAE,CAAC+9B,cAAc,CAAC,CAAC;IACnB/9B,EAAE,CAACo+B,QAAQ,CAAClsB,SAAS,CAAC;IACtBlS,EAAE,CAACi/B,SAAS,CAAC,CAAC;IACdj/B,EAAE,CAACg/B,UAAU,CAAC9sB,SAAS,CAAC;EAC1B;EACAkY,OAAOA,CAAA,EAAG;IACR,MAAMpqB,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAMq4B,EAAE,GAAGp3B,IAAI,CAACgO,KAAK,IAAIhO,IAAI,CAACgO,KAAK,CAACxf,CAAC,IAAI,CAAC;IAC1C,MAAM6oC,EAAE,GAAGr3B,IAAI,CAACsS,IAAI,IAAItS,IAAI,CAACsS,IAAI,CAAC9jB,CAAC,IAAI,CAAC;IACxC,IAAI,CAAC0J,EAAE,CAACk5B,UAAU,CAAC,CAAC,IAAIgG,EAAE,KAAKC,EAAE,IAAIn/B,EAAE,CAACU,IAAI,KAAK80B,KAAK,CAACxgB,SAAS,CAACtU,IAAI,EAAE;MACrE,OAAO,CAAC;QACNpK,CAAC,EAAE4oC,EAAE;QACLx+B,IAAIA,CAACwR,SAAS,EAAE;UACdlS,EAAE,CAACU,IAAI,CAACwR,SAAS,CAAC;QACpB;MACF,CAAC,CAAC;IACJ;IACA,OAAO,CAAC;MACN5b,CAAC,EAAE6oC,EAAE;MACLz+B,IAAIA,CAACwR,SAAS,EAAE;QACdlS,EAAE,CAAC+9B,cAAc,CAAC,CAAC;QACnB/9B,EAAE,CAACo+B,QAAQ,CAAClsB,SAAS,CAAC;QACtBlS,EAAE,CAACi/B,SAAS,CAAC,CAAC;MAChB;IACF,CAAC,EAAE;MACD3oC,CAAC,EAAE4oC,EAAE;MACLx+B,IAAIA,CAACwR,SAAS,EAAE;QACdlS,EAAE,CAACg/B,UAAU,CAAC9sB,SAAS,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ;EACAmD,uBAAuBA,CAACjW,IAAI,EAAE;IAC5B,MAAMY,EAAE,GAAG,IAAI;IACf,MAAMoV,KAAK,GAAGpV,EAAE,CAACf,KAAK,CAACulB,4BAA4B,CAAC,CAAC;IACrD,MAAM4a,MAAM,GAAGp/B,EAAE,CAACoL,IAAI,GAAG,QAAQ;IACjC,MAAMooB,MAAM,GAAG,EAAE;IACjB,IAAIpgC,CAAC,EAAEyV,IAAI;IACX,KAAKzV,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGuM,KAAK,CAAC3U,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC9C,MAAMuW,IAAI,GAAGyL,KAAK,CAAChiB,CAAC,CAAC;MACrB,IAAIuW,IAAI,CAACy1B,MAAM,CAAC,KAAKp/B,EAAE,CAACgK,EAAE,KAAK,CAAC5K,IAAI,IAAIuK,IAAI,CAACvK,IAAI,KAAKA,IAAI,CAAC,EAAE;QAC3Do0B,MAAM,CAAC/xB,IAAI,CAACkI,IAAI,CAAC;MACnB;IACF;IACA,OAAO6pB,MAAM;EACf;EACAwH,uBAAuBA,CAAClyB,KAAK,EAAE;IAC7B,MAAMhB,IAAI,GAAG,IAAI,CAACjB,OAAO,CAACiP,KAAK,CAACimB,UAAU,CAAC,IAAI,CAAClsB,UAAU,CAAC/G,KAAK,CAAC,CAAC;IAClE,OAAOjQ,MAAM,CAACiP,IAAI,CAACitB,IAAI,CAAC;EAC1B;AACF;AAEA,MAAMsK,aAAa,CAAC;EAClB5gC,WAAWA,CAACW,IAAI,EAAEkgC,KAAK,EAAErb,QAAQ,EAAE;IACjC,IAAI,CAAC7kB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACkgC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACrb,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACzjB,KAAK,GAAG2E,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;EAClC;EACA0zB,SAASA,CAACngC,IAAI,EAAE;IACd,OAAO+F,MAAM,CAAC6P,SAAS,CAACwqB,aAAa,CAACv/B,IAAI,CAAC,IAAI,CAACb,IAAI,CAAC4V,SAAS,EAAE5V,IAAI,CAAC4V,SAAS,CAAC;EACjF;EACAyqB,QAAQA,CAAC9+B,IAAI,EAAE;IACb,MAAMX,EAAE,GAAG,IAAI;IACf,MAAM0/B,KAAK,GAAGv6B,MAAM,CAACw6B,cAAc,CAACh/B,IAAI,CAAC;IACzC,IAAIi/B,WAAW;IACf,IAAIC,iBAAiB,CAACH,KAAK,CAAC,EAAE;MAC5BE,WAAW,GAAG5/B,EAAE,CAACy/B,QAAQ,CAACC,KAAK,CAAC;IAClC;IACA,MAAMl/B,KAAK,GAAGR,EAAE,CAACQ,KAAK;IACtB,MAAMwJ,EAAE,GAAGrJ,IAAI,CAACqJ,EAAE;IAClB,MAAMs1B,KAAK,GAAGt/B,EAAE,CAACs/B,KAAK,GAAG,GAAG,GAAGt1B,EAAE;IACjC,IAAI,CAACA,EAAE,EAAE;MACP,MAAM,IAAIsZ,KAAK,CAAC,0BAA0B,GAAG3iB,IAAI,CAAC;IACpD;IACA,IAAIqJ,EAAE,IAAIxJ,KAAK,EAAE;MACf,OAAO8+B,KAAK;IACd;IACA9+B,KAAK,CAACwJ,EAAE,CAAC,GAAGrJ,IAAI;IAChBm/B,gBAAgB,CAACn/B,IAAI,EAAE2+B,KAAK,EAAEM,WAAW,CAAC;IAC1C,IAAI5/B,EAAE,CAACikB,QAAQ,EAAE;MACfxwB,QAAQ,CAACwwB,QAAQ,CAACtjB,IAAI,CAACqJ,EAAE,EAAErJ,IAAI,CAACxH,SAAS,CAAC;IAC5C;IACA,OAAOmmC,KAAK;EACd;EACAp+B,GAAGA,CAAC8I,EAAE,EAAE;IACN,OAAO,IAAI,CAACxJ,KAAK,CAACwJ,EAAE,CAAC;EACvB;EACA+1B,UAAUA,CAACp/B,IAAI,EAAE;IACf,MAAMH,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMwJ,EAAE,GAAGrJ,IAAI,CAACqJ,EAAE;IAClB,MAAMs1B,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAIt1B,EAAE,IAAIxJ,KAAK,EAAE;MACf,OAAOA,KAAK,CAACwJ,EAAE,CAAC;IAClB;IACA,IAAIs1B,KAAK,IAAIt1B,EAAE,IAAIvW,QAAQ,CAAC6rC,KAAK,CAAC,EAAE;MAClC,OAAO7rC,QAAQ,CAAC6rC,KAAK,CAAC,CAACt1B,EAAE,CAAC;MAC1B,IAAI,IAAI,CAACia,QAAQ,EAAE;QACjB,OAAO9qB,SAAS,CAAC6Q,EAAE,CAAC;MACtB;IACF;EACF;AACF;AACA,SAAS81B,gBAAgBA,CAACn/B,IAAI,EAAE2+B,KAAK,EAAEM,WAAW,EAAE;EAClD,MAAMI,YAAY,GAAG3mC,KAAK,CAAC8L,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC,EAAE,CAC9C+zB,WAAW,GAAGnsC,QAAQ,CAACyN,GAAG,CAAC0+B,WAAW,CAAC,GAAG,CAAC,CAAC,EAC5CnsC,QAAQ,CAACyN,GAAG,CAACo+B,KAAK,CAAC,EACnB3+B,IAAI,CAAClN,QAAQ,CACd,CAAC;EACFA,QAAQ,CAAC4N,GAAG,CAACi+B,KAAK,EAAEU,YAAY,CAAC;EACjC,IAAIr/B,IAAI,CAACkvB,aAAa,EAAE;IACtBoQ,aAAa,CAACX,KAAK,EAAE3+B,IAAI,CAACkvB,aAAa,CAAC;EAC1C;EACA,IAAIlvB,IAAI,CAAClH,WAAW,EAAE;IACpBhG,QAAQ,CAAC6R,QAAQ,CAACg6B,KAAK,EAAE3+B,IAAI,CAAClH,WAAW,CAAC;EAC5C;AACF;AACA,SAASwmC,aAAaA,CAACX,KAAK,EAAEY,MAAM,EAAE;EACpC/6B,MAAM,CAACC,IAAI,CAAC86B,MAAM,CAAC,CAACzgC,OAAO,CAAC0gC,QAAQ,IAAI;IACtC,MAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,MAAMC,UAAU,GAAGF,aAAa,CAACr/B,GAAG,CAAC,CAAC;IACtC,MAAMw/B,WAAW,GAAG,CAACjB,KAAK,CAAC,CAAChqB,MAAM,CAAC8qB,aAAa,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;IAC3D,MAAMC,KAAK,GAAGP,MAAM,CAACC,QAAQ,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,MAAMK,UAAU,GAAGD,KAAK,CAAC1/B,GAAG,CAAC,CAAC;IAC9B,MAAM4/B,WAAW,GAAGF,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC;IACnC/sC,QAAQ,CAACw+B,KAAK,CAACsO,WAAW,EAAED,UAAU,EAAEK,WAAW,EAAED,UAAU,CAAC;EAClE,CAAC,CAAC;AACJ;AACA,SAASb,iBAAiBA,CAACH,KAAK,EAAE;EAChC,OAAO,IAAI,IAAIA,KAAK,IAAI,UAAU,IAAIA,KAAK;AAC7C;AAEA,MAAMkB,QAAQ,CAAC;EACbniC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAC0kB,WAAW,GAAG,IAAIkc,aAAa,CAAC5yB,iBAAiB,EAAE,UAAU,EAAE,IAAI,CAAC;IACzE,IAAI,CAACuF,QAAQ,GAAG,IAAIqtB,aAAa,CAAC9P,OAAO,EAAE,UAAU,CAAC;IACtD,IAAI,CAAC1U,OAAO,GAAG,IAAIwkB,aAAa,CAACl6B,MAAM,EAAE,SAAS,CAAC;IACnD,IAAI,CAACqG,MAAM,GAAG,IAAI6zB,aAAa,CAAC7J,KAAK,EAAE,QAAQ,CAAC;IAChD,IAAI,CAACqL,gBAAgB,GAAG,CAAC,IAAI,CAAC1d,WAAW,EAAE,IAAI,CAAC3X,MAAM,EAAE,IAAI,CAACwG,QAAQ,CAAC;EACxE;EACAtQ,GAAGA,CAAC,GAAGotB,IAAI,EAAE;IACX,IAAI,CAACgS,KAAK,CAAC,UAAU,EAAEhS,IAAI,CAAC;EAC9B;EACA3sB,MAAMA,CAAC,GAAG2sB,IAAI,EAAE;IACd,IAAI,CAACgS,KAAK,CAAC,YAAY,EAAEhS,IAAI,CAAC;EAChC;EACAiS,cAAcA,CAAC,GAAGjS,IAAI,EAAE;IACtB,IAAI,CAACgS,KAAK,CAAC,UAAU,EAAEhS,IAAI,EAAE,IAAI,CAAC3L,WAAW,CAAC;EAChD;EACAzV,WAAWA,CAAC,GAAGohB,IAAI,EAAE;IACnB,IAAI,CAACgS,KAAK,CAAC,UAAU,EAAEhS,IAAI,EAAE,IAAI,CAAC9c,QAAQ,CAAC;EAC7C;EACAgvB,UAAUA,CAAC,GAAGlS,IAAI,EAAE;IAClB,IAAI,CAACgS,KAAK,CAAC,UAAU,EAAEhS,IAAI,EAAE,IAAI,CAACjU,OAAO,CAAC;EAC5C;EACAomB,SAASA,CAAC,GAAGnS,IAAI,EAAE;IACjB,IAAI,CAACgS,KAAK,CAAC,UAAU,EAAEhS,IAAI,EAAE,IAAI,CAACtjB,MAAM,CAAC;EAC3C;EACA01B,aAAaA,CAACl3B,EAAE,EAAE;IAChB,OAAO,IAAI,CAACm3B,IAAI,CAACn3B,EAAE,EAAE,IAAI,CAACmZ,WAAW,EAAE,YAAY,CAAC;EACtD;EACAie,UAAUA,CAACp3B,EAAE,EAAE;IACb,OAAO,IAAI,CAACm3B,IAAI,CAACn3B,EAAE,EAAE,IAAI,CAACgI,QAAQ,EAAE,SAAS,CAAC;EAChD;EACAqvB,SAASA,CAACr3B,EAAE,EAAE;IACZ,OAAO,IAAI,CAACm3B,IAAI,CAACn3B,EAAE,EAAE,IAAI,CAAC6Q,OAAO,EAAE,QAAQ,CAAC;EAC9C;EACAymB,QAAQA,CAACt3B,EAAE,EAAE;IACX,OAAO,IAAI,CAACm3B,IAAI,CAACn3B,EAAE,EAAE,IAAI,CAACwB,MAAM,EAAE,OAAO,CAAC;EAC5C;EACA+1B,iBAAiBA,CAAC,GAAGzS,IAAI,EAAE;IACzB,IAAI,CAACgS,KAAK,CAAC,YAAY,EAAEhS,IAAI,EAAE,IAAI,CAAC3L,WAAW,CAAC;EAClD;EACAqe,cAAcA,CAAC,GAAG1S,IAAI,EAAE;IACtB,IAAI,CAACgS,KAAK,CAAC,YAAY,EAAEhS,IAAI,EAAE,IAAI,CAAC9c,QAAQ,CAAC;EAC/C;EACAyvB,aAAaA,CAAC,GAAG3S,IAAI,EAAE;IACrB,IAAI,CAACgS,KAAK,CAAC,YAAY,EAAEhS,IAAI,EAAE,IAAI,CAACjU,OAAO,CAAC;EAC9C;EACA6mB,YAAYA,CAAC,GAAG5S,IAAI,EAAE;IACpB,IAAI,CAACgS,KAAK,CAAC,YAAY,EAAEhS,IAAI,EAAE,IAAI,CAACtjB,MAAM,CAAC;EAC7C;EACAs1B,KAAKA,CAAC/7B,MAAM,EAAE+pB,IAAI,EAAE6S,aAAa,EAAE;IACjC,MAAM3hC,EAAE,GAAG,IAAI;IACf,CAAC,GAAG8uB,IAAI,CAAC,CAACrvB,OAAO,CAACmiC,GAAG,IAAI;MACvB,MAAMC,GAAG,GAAGF,aAAa,IAAI3hC,EAAE,CAAC8hC,mBAAmB,CAACF,GAAG,CAAC;MACxD,IAAID,aAAa,IAAIE,GAAG,CAACtC,SAAS,CAACqC,GAAG,CAAC,IAAKC,GAAG,KAAK7hC,EAAE,CAAC6a,OAAO,IAAI+mB,GAAG,CAAC53B,EAAG,EAAE;QACzEhK,EAAE,CAAC+hC,KAAK,CAACh9B,MAAM,EAAE88B,GAAG,EAAED,GAAG,CAAC;MAC5B,CAAC,MAAM;QACL7qC,IAAI,CAAC6qC,GAAG,EAAEjhC,IAAI,IAAI;UAChB,MAAMqhC,OAAO,GAAGL,aAAa,IAAI3hC,EAAE,CAAC8hC,mBAAmB,CAACnhC,IAAI,CAAC;UAC7DX,EAAE,CAAC+hC,KAAK,CAACh9B,MAAM,EAAEi9B,OAAO,EAAErhC,IAAI,CAAC;QACjC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EACAohC,KAAKA,CAACh9B,MAAM,EAAEk9B,QAAQ,EAAEC,SAAS,EAAE;IACjC,MAAMC,WAAW,GAAG5oC,WAAW,CAACwL,MAAM,CAAC;IACvC9M,QAAQ,CAACiqC,SAAS,CAAC,QAAQ,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;IAC1DD,QAAQ,CAACl9B,MAAM,CAAC,CAACm9B,SAAS,CAAC;IAC3BjqC,QAAQ,CAACiqC,SAAS,CAAC,OAAO,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;EAC3D;EACAJ,mBAAmBA,CAAC1iC,IAAI,EAAE;IACxB,KAAK,IAAIhM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACytC,gBAAgB,CAACpgC,MAAM,EAAErN,CAAC,EAAE,EAAE;MACrD,MAAMyuC,GAAG,GAAG,IAAI,CAAChB,gBAAgB,CAACztC,CAAC,CAAC;MACpC,IAAIyuC,GAAG,CAACtC,SAAS,CAACngC,IAAI,CAAC,EAAE;QACvB,OAAOyiC,GAAG;MACZ;IACF;IACA,OAAO,IAAI,CAAChnB,OAAO;EACrB;EACAsmB,IAAIA,CAACn3B,EAAE,EAAE23B,aAAa,EAAEviC,IAAI,EAAE;IAC5B,MAAMuB,IAAI,GAAGghC,aAAa,CAACzgC,GAAG,CAAC8I,EAAE,CAAC;IAClC,IAAIrJ,IAAI,KAAK5B,SAAS,EAAE;MACtB,MAAM,IAAIukB,KAAK,CAAC,GAAG,GAAGtZ,EAAE,GAAG,wBAAwB,GAAG5K,IAAI,GAAG,GAAG,CAAC;IACnE;IACA,OAAOuB,IAAI;EACb;AACF;AACA,IAAIshC,QAAQ,GAAG,IAAIrB,QAAQ,CAAC,CAAC;AAE7B,MAAMwB,aAAa,CAAC;EAClB3jC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAC4jC,KAAK,GAAG,EAAE;EACjB;EACAC,MAAMA,CAACrjC,KAAK,EAAEsjC,IAAI,EAAEzT,IAAI,EAAE;IACxB,MAAM9uB,EAAE,GAAG,IAAI;IACf,IAAIuiC,IAAI,KAAK,YAAY,EAAE;MACzBviC,EAAE,CAACqiC,KAAK,GAAGriC,EAAE,CAACwiC,kBAAkB,CAACvjC,KAAK,EAAE,IAAI,CAAC;MAC7Ce,EAAE,CAAChB,OAAO,CAACgB,EAAE,CAACqiC,KAAK,EAAEpjC,KAAK,EAAE,SAAS,CAAC;IACxC;IACA,MAAMxF,WAAW,GAAGuG,EAAE,CAAC/F,YAAY,CAACgF,KAAK,CAAC;IAC1C,MAAMu0B,MAAM,GAAGxzB,EAAE,CAAChB,OAAO,CAACvF,WAAW,EAAEwF,KAAK,EAAEsjC,IAAI,EAAEzT,IAAI,CAAC;IACzD,IAAIyT,IAAI,KAAK,SAAS,EAAE;MACtBviC,EAAE,CAAChB,OAAO,CAACvF,WAAW,EAAEwF,KAAK,EAAE,MAAM,CAAC;MACtCe,EAAE,CAAChB,OAAO,CAACgB,EAAE,CAACqiC,KAAK,EAAEpjC,KAAK,EAAE,WAAW,CAAC;IAC1C;IACA,OAAOu0B,MAAM;EACf;EACAx0B,OAAOA,CAACvF,WAAW,EAAEwF,KAAK,EAAEsjC,IAAI,EAAEzT,IAAI,EAAE;IACtCA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjB,KAAK,MAAM2T,UAAU,IAAIhpC,WAAW,EAAE;MACpC,MAAMipC,MAAM,GAAGD,UAAU,CAACC,MAAM;MAChC,MAAM39B,MAAM,GAAG29B,MAAM,CAACH,IAAI,CAAC;MAC3B,MAAM7a,MAAM,GAAG,CAACzoB,KAAK,EAAE6vB,IAAI,EAAE2T,UAAU,CAAC57B,OAAO,CAAC;MAChD,IAAI5O,QAAQ,CAAC8M,MAAM,EAAE2iB,MAAM,EAAEgb,MAAM,CAAC,KAAK,KAAK,IAAI5T,IAAI,CAAC6T,UAAU,EAAE;QACjE,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb;EACAC,UAAUA,CAAA,EAAG;IACX,IAAI,CAACnuC,aAAa,CAAC,IAAI,CAACygB,MAAM,CAAC,EAAE;MAC/B,IAAI,CAAC2tB,SAAS,GAAG,IAAI,CAAC3tB,MAAM;MAC5B,IAAI,CAACA,MAAM,GAAGnW,SAAS;IACzB;EACF;EACA9E,YAAYA,CAACgF,KAAK,EAAE;IAClB,IAAI,IAAI,CAACiW,MAAM,EAAE;MACf,OAAO,IAAI,CAACA,MAAM;IACpB;IACA,MAAMzb,WAAW,GAAG,IAAI,CAACyb,MAAM,GAAG,IAAI,CAACstB,kBAAkB,CAACvjC,KAAK,CAAC;IAChE,IAAI,CAAC6jC,mBAAmB,CAAC7jC,KAAK,CAAC;IAC/B,OAAOxF,WAAW;EACpB;EACA+oC,kBAAkBA,CAACvjC,KAAK,EAAEyI,GAAG,EAAE;IAC7B,MAAMxB,MAAM,GAAGjH,KAAK,IAAIA,KAAK,CAACiH,MAAM;IACpC,MAAMW,OAAO,GAAGlT,cAAc,CAACuS,MAAM,CAACW,OAAO,IAAIX,MAAM,CAACW,OAAO,CAACgU,OAAO,EAAE,CAAC,CAAC,CAAC;IAC5E,MAAMA,OAAO,GAAGkoB,UAAU,CAAC78B,MAAM,CAAC;IAClC,OAAOW,OAAO,KAAK,KAAK,IAAI,CAACa,GAAG,GAAG,EAAE,GAAGs7B,iBAAiB,CAAC/jC,KAAK,EAAE4b,OAAO,EAAEhU,OAAO,EAAEa,GAAG,CAAC;EACzF;EACAo7B,mBAAmBA,CAAC7jC,KAAK,EAAE;IACzB,MAAMgkC,mBAAmB,GAAG,IAAI,CAACJ,SAAS,IAAI,EAAE;IAChD,MAAMppC,WAAW,GAAG,IAAI,CAACyb,MAAM;IAC/B,MAAM2O,IAAI,GAAGA,CAAC/wB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,CAAC2Y,MAAM,CAACvV,CAAC,IAAI,CAAC5C,CAAC,CAAC4vC,IAAI,CAAC9sC,CAAC,IAAIF,CAAC,CAACwsC,MAAM,CAAC14B,EAAE,KAAK5T,CAAC,CAACssC,MAAM,CAAC14B,EAAE,CAAC,CAAC;IAC/E,IAAI,CAAChL,OAAO,CAAC6kB,IAAI,CAACof,mBAAmB,EAAExpC,WAAW,CAAC,EAAEwF,KAAK,EAAE,MAAM,CAAC;IACnE,IAAI,CAACD,OAAO,CAAC6kB,IAAI,CAACpqB,WAAW,EAAEwpC,mBAAmB,CAAC,EAAEhkC,KAAK,EAAE,OAAO,CAAC;EACtE;AACF;AACA,SAAS8jC,UAAUA,CAAC78B,MAAM,EAAE;EAC1B,MAAM2U,OAAO,GAAG,EAAE;EAClB,MAAMzV,IAAI,GAAGD,MAAM,CAACC,IAAI,CAAC68B,QAAQ,CAACpnB,OAAO,CAACra,KAAK,CAAC;EAChD,KAAK,IAAIpN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgS,IAAI,CAAC3E,MAAM,EAAErN,CAAC,EAAE,EAAE;IACpCynB,OAAO,CAACpZ,IAAI,CAACwgC,QAAQ,CAACZ,SAAS,CAACj8B,IAAI,CAAChS,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,MAAM+vC,KAAK,GAAGj9B,MAAM,CAAC2U,OAAO,IAAI,EAAE;EAClC,KAAK,IAAIznB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+vC,KAAK,CAAC1iC,MAAM,EAAErN,CAAC,EAAE,EAAE;IACrC,MAAMsvC,MAAM,GAAGS,KAAK,CAAC/vC,CAAC,CAAC;IACvB,IAAIynB,OAAO,CAAC9B,OAAO,CAAC2pB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MAClC7nB,OAAO,CAACpZ,IAAI,CAACihC,MAAM,CAAC;IACtB;EACF;EACA,OAAO7nB,OAAO;AAChB;AACA,SAASuoB,OAAOA,CAACv8B,OAAO,EAAEa,GAAG,EAAE;EAC7B,IAAI,CAACA,GAAG,IAAIb,OAAO,KAAK,KAAK,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,IAAIA,OAAO,KAAK,IAAI,EAAE;IACpB,OAAO,CAAC,CAAC;EACX;EACA,OAAOA,OAAO;AAChB;AACA,SAASm8B,iBAAiBA,CAAC/jC,KAAK,EAAE4b,OAAO,EAAEhU,OAAO,EAAEa,GAAG,EAAE;EACvD,MAAM8rB,MAAM,GAAG,EAAE;EACjB,MAAMlhB,OAAO,GAAGrT,KAAK,CAAC4Q,UAAU,CAAC,CAAC;EAClC,KAAK,IAAIzc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGynB,OAAO,CAACpa,MAAM,EAAErN,CAAC,EAAE,EAAE;IACvC,MAAMsvC,MAAM,GAAG7nB,OAAO,CAACznB,CAAC,CAAC;IACzB,MAAM4W,EAAE,GAAG04B,MAAM,CAAC14B,EAAE;IACpB,MAAMlC,IAAI,GAAGs7B,OAAO,CAACv8B,OAAO,CAACmD,EAAE,CAAC,EAAEtC,GAAG,CAAC;IACtC,IAAII,IAAI,KAAK,IAAI,EAAE;MACjB;IACF;IACA0rB,MAAM,CAAC/xB,IAAI,CAAC;MACVihC,MAAM;MACN77B,OAAO,EAAEw8B,UAAU,CAACpkC,KAAK,CAACiH,MAAM,EAAEw8B,MAAM,EAAE56B,IAAI,EAAEwK,OAAO;IACzD,CAAC,CAAC;EACJ;EACA,OAAOkhB,MAAM;AACf;AACA,SAAS6P,UAAUA,CAACn9B,MAAM,EAAEw8B,MAAM,EAAE56B,IAAI,EAAEwK,OAAO,EAAE;EACjD,MAAMlN,IAAI,GAAGc,MAAM,CAACo9B,eAAe,CAACZ,MAAM,CAAC;EAC3C,MAAMhzB,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC7H,IAAI,EAAE1C,IAAI,CAAC;EACjD,OAAOc,MAAM,CAAC0J,cAAc,CAACF,MAAM,EAAE4C,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;IAACixB,UAAU,EAAE,KAAK;IAAEC,SAAS,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;AAC3G;AAEA,SAASC,YAAYA,CAACtkC,IAAI,EAAEyH,OAAO,EAAE;EACnC,MAAM88B,eAAe,GAAGlwC,QAAQ,CAACkb,QAAQ,CAACvP,IAAI,CAAC,IAAI,CAAC,CAAC;EACrD,MAAMwkC,cAAc,GAAG,CAAC/8B,OAAO,CAAC8H,QAAQ,IAAI,CAAC,CAAC,EAAEvP,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,OAAOwkC,cAAc,CAACx1B,SAAS,IAAIvH,OAAO,CAACuH,SAAS,IAAIu1B,eAAe,CAACv1B,SAAS,IAAI,GAAG;AAC1F;AACA,SAASy1B,yBAAyBA,CAAC75B,EAAE,EAAEoE,SAAS,EAAE;EAChD,IAAIhD,IAAI,GAAGpB,EAAE;EACb,IAAIA,EAAE,KAAK,SAAS,EAAE;IACpBoB,IAAI,GAAGgD,SAAS;EAClB,CAAC,MAAM,IAAIpE,EAAE,KAAK,SAAS,EAAE;IAC3BoB,IAAI,GAAGgD,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EACtC;EACA,OAAOhD,IAAI;AACb;AACA,SAAS04B,yBAAyBA,CAAC14B,IAAI,EAAEgD,SAAS,EAAE;EAClD,OAAOhD,IAAI,KAAKgD,SAAS,GAAG,SAAS,GAAG,SAAS;AACnD;AACA,SAAS21B,gBAAgBA,CAAC7e,QAAQ,EAAE;EAClC,IAAIA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;IAC/C,OAAO,GAAG;EACZ;EACA,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;IAC/C,OAAO,GAAG;EACZ;AACF;AACA,SAAS8e,aAAaA,CAACh6B,EAAE,EAAEi6B,YAAY,EAAE;EACvC,IAAIj6B,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;IAC5B,OAAOA,EAAE;EACX;EACA,OAAOi6B,YAAY,CAAC74B,IAAI,IAAI24B,gBAAgB,CAACE,YAAY,CAAC/e,QAAQ,CAAC,IAAIlb,EAAE,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAAC68B,WAAW,CAAC,CAAC;AACnG;AACA,SAASC,gBAAgBA,CAACj+B,MAAM,EAAEW,OAAO,EAAE;EACzC,MAAMu9B,aAAa,GAAGjrC,SAAS,CAAC+M,MAAM,CAAC9G,IAAI,CAAC,IAAI;IAACoM,MAAM,EAAE,CAAC;EAAC,CAAC;EAC5D,MAAM64B,YAAY,GAAGx9B,OAAO,CAAC2E,MAAM,IAAI,CAAC,CAAC;EACzC,MAAM84B,cAAc,GAAGZ,YAAY,CAACx9B,MAAM,CAAC9G,IAAI,EAAEyH,OAAO,CAAC;EACzD,MAAM09B,QAAQ,GAAGp/B,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;EACpC,MAAML,MAAM,GAAGrG,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;EAClC1G,MAAM,CAACC,IAAI,CAACi/B,YAAY,CAAC,CAAC5kC,OAAO,CAACuK,EAAE,IAAI;IACtC,MAAMw6B,SAAS,GAAGH,YAAY,CAACr6B,EAAE,CAAC;IAClC,MAAMoB,IAAI,GAAG44B,aAAa,CAACh6B,EAAE,EAAEw6B,SAAS,CAAC;IACzC,MAAMC,SAAS,GAAGX,yBAAyB,CAAC14B,IAAI,EAAEk5B,cAAc,CAAC;IACjE,MAAMI,mBAAmB,GAAGN,aAAa,CAAC54B,MAAM,IAAI,CAAC,CAAC;IACtD+4B,QAAQ,CAACn5B,IAAI,CAAC,GAAGm5B,QAAQ,CAACn5B,IAAI,CAAC,IAAIpB,EAAE;IACrCwB,MAAM,CAACxB,EAAE,CAAC,GAAG7P,OAAO,CAACgL,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;MAACT;IAAI,CAAC,EAAEo5B,SAAS,EAAEE,mBAAmB,CAACt5B,IAAI,CAAC,EAAEs5B,mBAAmB,CAACD,SAAS,CAAC,CAAC,CAAC;EAC3H,CAAC,CAAC;EACFv+B,MAAM,CAACqD,IAAI,CAACoF,QAAQ,CAAClP,OAAO,CAACqM,OAAO,IAAI;IACtC,MAAM1M,IAAI,GAAG0M,OAAO,CAAC1M,IAAI,IAAI8G,MAAM,CAAC9G,IAAI;IACxC,MAAMgP,SAAS,GAAGtC,OAAO,CAACsC,SAAS,IAAIs1B,YAAY,CAACtkC,IAAI,EAAEyH,OAAO,CAAC;IAClE,MAAM88B,eAAe,GAAGxqC,SAAS,CAACiG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAMslC,mBAAmB,GAAGf,eAAe,CAACn4B,MAAM,IAAI,CAAC,CAAC;IACxDrG,MAAM,CAACC,IAAI,CAACs/B,mBAAmB,CAAC,CAACjlC,OAAO,CAACklC,SAAS,IAAI;MACpD,MAAMv5B,IAAI,GAAGy4B,yBAAyB,CAACc,SAAS,EAAEv2B,SAAS,CAAC;MAC5D,MAAMpE,EAAE,GAAG8B,OAAO,CAACV,IAAI,GAAG,QAAQ,CAAC,IAAIm5B,QAAQ,CAACn5B,IAAI,CAAC,IAAIA,IAAI;MAC7DI,MAAM,CAACxB,EAAE,CAAC,GAAGwB,MAAM,CAACxB,EAAE,CAAC,IAAI7E,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;MAC9C1R,OAAO,CAACqR,MAAM,CAACxB,EAAE,CAAC,EAAE,CAAC;QAACoB;MAAI,CAAC,EAAEi5B,YAAY,CAACr6B,EAAE,CAAC,EAAE06B,mBAAmB,CAACC,SAAS,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFx/B,MAAM,CAACC,IAAI,CAACoG,MAAM,CAAC,CAAC/L,OAAO,CAAC+G,GAAG,IAAI;IACjC,MAAMoB,KAAK,GAAG4D,MAAM,CAAChF,GAAG,CAAC;IACzBrM,OAAO,CAACyN,KAAK,EAAE,CAACnU,QAAQ,CAAC+X,MAAM,CAAC5D,KAAK,CAACxI,IAAI,CAAC,EAAE3L,QAAQ,CAACmU,KAAK,CAAC,CAAC;EAC/D,CAAC,CAAC;EACF,OAAO4D,MAAM;AACf;AACA,SAASo5B,WAAWA,CAAC1+B,MAAM,EAAE;EAC3B,MAAMW,OAAO,GAAGX,MAAM,CAACW,OAAO,KAAKX,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAAC;EACvDA,OAAO,CAACgU,OAAO,GAAGlnB,cAAc,CAACkT,OAAO,CAACgU,OAAO,EAAE,CAAC,CAAC,CAAC;EACrDhU,OAAO,CAAC2E,MAAM,GAAG24B,gBAAgB,CAACj+B,MAAM,EAAEW,OAAO,CAAC;AACpD;AACA,SAASg+B,UAAUA,CAAC3+B,MAAM,EAAE;EAC1BA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrB,MAAMqD,IAAI,GAAGrD,MAAM,CAACqD,IAAI,GAAGrD,MAAM,CAACqD,IAAI,IAAI;IAACoF,QAAQ,EAAE,EAAE;IAAE6B,MAAM,EAAE;EAAE,CAAC;EACpEjH,IAAI,CAACoF,QAAQ,GAAGpF,IAAI,CAACoF,QAAQ,IAAI,EAAE;EACnCpF,IAAI,CAACiH,MAAM,GAAGjH,IAAI,CAACiH,MAAM,IAAI,EAAE;EAC/Bo0B,WAAW,CAAC1+B,MAAM,CAAC;EACnB,OAAOA,MAAM;AACf;AACA,MAAM4+B,QAAQ,GAAG,IAAIlmC,GAAG,CAAC,CAAC;AAC1B,MAAMmmC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC5B,SAASC,UAAUA,CAACtyB,QAAQ,EAAEuyB,QAAQ,EAAE;EACtC,IAAI9/B,IAAI,GAAG0/B,QAAQ,CAAC5jC,GAAG,CAACyR,QAAQ,CAAC;EACjC,IAAI,CAACvN,IAAI,EAAE;IACTA,IAAI,GAAG8/B,QAAQ,CAAC,CAAC;IACjBJ,QAAQ,CAACzjC,GAAG,CAACsR,QAAQ,EAAEvN,IAAI,CAAC;IAC5B2/B,UAAU,CAACrjC,GAAG,CAAC0D,IAAI,CAAC;EACtB;EACA,OAAOA,IAAI;AACb;AACA,MAAM+/B,UAAU,GAAGA,CAAC9jC,GAAG,EAAEsW,GAAG,EAAEnR,GAAG,KAAK;EACpC,MAAMsB,IAAI,GAAG7T,gBAAgB,CAAC0jB,GAAG,EAAEnR,GAAG,CAAC;EACvC,IAAIsB,IAAI,KAAK/I,SAAS,EAAE;IACtBsC,GAAG,CAACK,GAAG,CAACoG,IAAI,CAAC;EACf;AACF,CAAC;AACD,MAAMs9B,MAAM,CAAC;EACX3mC,WAAWA,CAACyH,MAAM,EAAE;IAClB,IAAI,CAACm/B,OAAO,GAAGR,UAAU,CAAC3+B,MAAM,CAAC;IACjC,IAAI,CAACo/B,WAAW,GAAG,IAAI1mC,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC2mC,cAAc,GAAG,IAAI3mC,GAAG,CAAC,CAAC;EACjC;EACA,IAAIQ,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACimC,OAAO,CAACjmC,IAAI;EAC1B;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,CAACimC,OAAO,CAACjmC,IAAI,GAAGA,IAAI;EAC1B;EACA,IAAImK,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC87B,OAAO,CAAC97B,IAAI;EAC1B;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,CAAC87B,OAAO,CAAC97B,IAAI,GAAGA,IAAI;EAC1B;EACA,IAAI1C,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACw+B,OAAO,CAACx+B,OAAO;EAC7B;EACA,IAAIA,OAAOA,CAACA,OAAO,EAAE;IACnB,IAAI,CAACw+B,OAAO,CAACx+B,OAAO,GAAGA,OAAO;EAChC;EACA,IAAIgU,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACwqB,OAAO,CAACxqB,OAAO;EAC7B;EACAvW,MAAMA,CAAA,EAAG;IACP,MAAM4B,MAAM,GAAG,IAAI,CAACm/B,OAAO;IAC3B,IAAI,CAACG,UAAU,CAAC,CAAC;IACjBZ,WAAW,CAAC1+B,MAAM,CAAC;EACrB;EACAs/B,UAAUA,CAAA,EAAG;IACX,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC,CAAC;IACxB,IAAI,CAACF,cAAc,CAACE,KAAK,CAAC,CAAC;EAC7B;EACAh2B,gBAAgBA,CAACi2B,WAAW,EAAE;IAC5B,OAAOT,UAAU,CAACS,WAAW,EAC3B,MAAM,CAAC,CACL,YAAYA,WAAW,EAAE,EACzB,EAAE,CACH,CAAC,CAAC;EACP;EACAtyB,yBAAyBA,CAACsyB,WAAW,EAAEvyB,UAAU,EAAE;IACjD,OAAO8xB,UAAU,CAAC,GAAGS,WAAW,eAAevyB,UAAU,EAAE,EACzD,MAAM,CACJ,CACE,YAAYuyB,WAAW,gBAAgBvyB,UAAU,EAAE,EACnD,eAAeA,UAAU,EAAE,CAC5B,EACD,CACE,YAAYuyB,WAAW,EAAE,EACzB,EAAE,CACH,CACF,CAAC;EACN;EACA7yB,uBAAuBA,CAAC6yB,WAAW,EAAEjzB,WAAW,EAAE;IAChD,OAAOwyB,UAAU,CAAC,GAAGS,WAAW,IAAIjzB,WAAW,EAAE,EAC/C,MAAM,CAAC,CACL,YAAYizB,WAAW,aAAajzB,WAAW,EAAE,EACjD,YAAYizB,WAAW,EAAE,EACzB,YAAYjzB,WAAW,EAAE,EACzB,EAAE,CACH,CAAC,CAAC;EACP;EACA6wB,eAAeA,CAACZ,MAAM,EAAE;IACtB,MAAM14B,EAAE,GAAG04B,MAAM,CAAC14B,EAAE;IACpB,MAAM5K,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,OAAO6lC,UAAU,CAAC,GAAG7lC,IAAI,WAAW4K,EAAE,EAAE,EACtC,MAAM,CAAC,CACL,WAAWA,EAAE,EAAE,EACf,IAAG04B,MAAM,CAACiD,sBAAsB,IAAI,EAAE,EACvC,CAAC,CAAC;EACP;EACAC,aAAaA,CAACC,SAAS,EAAEC,UAAU,EAAE;IACnC,MAAMR,WAAW,GAAG,IAAI,CAACA,WAAW;IACpC,IAAI5yB,KAAK,GAAG4yB,WAAW,CAACpkC,GAAG,CAAC2kC,SAAS,CAAC;IACtC,IAAI,CAACnzB,KAAK,IAAIozB,UAAU,EAAE;MACxBpzB,KAAK,GAAG,IAAI9T,GAAG,CAAC,CAAC;MACjB0mC,WAAW,CAACjkC,GAAG,CAACwkC,SAAS,EAAEnzB,KAAK,CAAC;IACnC;IACA,OAAOA,KAAK;EACd;EACA/C,eAAeA,CAACk2B,SAAS,EAAEE,QAAQ,EAAED,UAAU,EAAE;IAC/C,MAAM;MAACj/B,OAAO;MAAEzH;IAAI,CAAC,GAAG,IAAI;IAC5B,MAAMsT,KAAK,GAAG,IAAI,CAACkzB,aAAa,CAACC,SAAS,EAAEC,UAAU,CAAC;IACvD,MAAMv5B,MAAM,GAAGmG,KAAK,CAACxR,GAAG,CAAC6kC,QAAQ,CAAC;IAClC,IAAIx5B,MAAM,EAAE;MACV,OAAOA,MAAM;IACf;IACA,MAAMmD,MAAM,GAAG,IAAIs1B,GAAG,CAAC,CAAC;IACxBe,QAAQ,CAACtmC,OAAO,CAAC2F,IAAI,IAAI;MACvB,IAAIygC,SAAS,EAAE;QACbn2B,MAAM,CAAChO,GAAG,CAACmkC,SAAS,CAAC;QACrBzgC,IAAI,CAAC3F,OAAO,CAAC+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAM,EAAEm2B,SAAS,EAAEr/B,GAAG,CAAC,CAAC;MACzD;MACApB,IAAI,CAAC3F,OAAO,CAAC+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAM,EAAE7I,OAAO,EAAEL,GAAG,CAAC,CAAC;MACrDpB,IAAI,CAAC3F,OAAO,CAAC+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAM,EAAEvW,SAAS,CAACiG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEoH,GAAG,CAAC,CAAC;MACnEpB,IAAI,CAAC3F,OAAO,CAAC+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAM,EAAEjc,QAAQ,EAAE+S,GAAG,CAAC,CAAC;MACtDpB,IAAI,CAAC3F,OAAO,CAAC+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAM,EAAEjW,WAAW,EAAE+M,GAAG,CAAC,CAAC;IAC3D,CAAC,CAAC;IACF,MAAMsgB,KAAK,GAAG,CAAC,GAAGpX,MAAM,CAAC;IACzB,IAAIq1B,UAAU,CAACpjC,GAAG,CAACokC,QAAQ,CAAC,EAAE;MAC5BrzB,KAAK,CAACrR,GAAG,CAAC0kC,QAAQ,EAAEjf,KAAK,CAAC;IAC5B;IACA,OAAOA,KAAK;EACd;EACAkf,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAACn/B,OAAO;MAAEzH;IAAI,CAAC,GAAG,IAAI;IAC5B,OAAO,CACLyH,OAAO,EACP1N,SAAS,CAACiG,IAAI,CAAC,IAAI,CAAC,CAAC,EACrB3L,QAAQ,CAACkb,QAAQ,CAACvP,IAAI,CAAC,IAAI,CAAC,CAAC,EAC7B;MAACA;IAAI,CAAC,EACN3L,QAAQ,EACRgG,WAAW,CACZ;EACH;EACAuZ,mBAAmBA,CAACtD,MAAM,EAAEqD,KAAK,EAAET,OAAO,EAAEQ,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE;IAC3D,MAAM0gB,MAAM,GAAG;MAACxsB,OAAO,EAAE;IAAI,CAAC;IAC9B,MAAM;MAACi/B,QAAQ;MAAEC;IAAW,CAAC,GAAGC,WAAW,CAAC,IAAI,CAACZ,cAAc,EAAE71B,MAAM,EAAEoD,QAAQ,CAAC;IAClF,IAAIjM,OAAO,GAAGo/B,QAAQ;IACtB,IAAIG,WAAW,CAACH,QAAQ,EAAElzB,KAAK,CAAC,EAAE;MAChCygB,MAAM,CAACxsB,OAAO,GAAG,KAAK;MACtBsL,OAAO,GAAG3Y,UAAU,CAAC2Y,OAAO,CAAC,GAAGA,OAAO,CAAC,CAAC,GAAGA,OAAO;MACnD,MAAM+zB,WAAW,GAAG,IAAI,CAACz2B,cAAc,CAACF,MAAM,EAAE4C,OAAO,EAAE4zB,WAAW,CAAC;MACrEr/B,OAAO,GAAGhN,cAAc,CAACosC,QAAQ,EAAE3zB,OAAO,EAAE+zB,WAAW,CAAC;IAC1D;IACA,KAAK,MAAMhjC,IAAI,IAAI0P,KAAK,EAAE;MACxBygB,MAAM,CAACnwB,IAAI,CAAC,GAAGwD,OAAO,CAACxD,IAAI,CAAC;IAC9B;IACA,OAAOmwB,MAAM;EACf;EACA5jB,cAAcA,CAACF,MAAM,EAAE4C,OAAO,EAAEQ,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAEwzB,kBAAkB,EAAE;IACnE,MAAM;MAACL;IAAQ,CAAC,GAAGE,WAAW,CAAC,IAAI,CAACZ,cAAc,EAAE71B,MAAM,EAAEoD,QAAQ,CAAC;IACrE,OAAOzf,QAAQ,CAACif,OAAO,CAAC,GACpBzY,cAAc,CAACosC,QAAQ,EAAE3zB,OAAO,EAAEvT,SAAS,EAAEunC,kBAAkB,CAAC,GAChEL,QAAQ;EACd;AACF;AACA,SAASE,WAAWA,CAACI,aAAa,EAAE72B,MAAM,EAAEoD,QAAQ,EAAE;EACpD,IAAIJ,KAAK,GAAG6zB,aAAa,CAACrlC,GAAG,CAACwO,MAAM,CAAC;EACrC,IAAI,CAACgD,KAAK,EAAE;IACVA,KAAK,GAAG,IAAI9T,GAAG,CAAC,CAAC;IACjB2nC,aAAa,CAACllC,GAAG,CAACqO,MAAM,EAAEgD,KAAK,CAAC;EAClC;EACA,MAAMC,QAAQ,GAAGG,QAAQ,CAAC0tB,IAAI,CAAC,CAAC;EAChC,IAAIj0B,MAAM,GAAGmG,KAAK,CAACxR,GAAG,CAACyR,QAAQ,CAAC;EAChC,IAAI,CAACpG,MAAM,EAAE;IACX,MAAM05B,QAAQ,GAAGlsC,eAAe,CAAC2V,MAAM,EAAEoD,QAAQ,CAAC;IAClDvG,MAAM,GAAG;MACP05B,QAAQ;MACRC,WAAW,EAAEpzB,QAAQ,CAACrH,MAAM,CAACjW,CAAC,IAAI,CAACA,CAAC,CAAC0uC,WAAW,CAAC,CAAC,CAACsC,QAAQ,CAAC,OAAO,CAAC;IACtE,CAAC;IACD9zB,KAAK,CAACrR,GAAG,CAACsR,QAAQ,EAAEpG,MAAM,CAAC;EAC7B;EACA,OAAOA,MAAM;AACf;AACA,SAAS65B,WAAWA,CAACvX,KAAK,EAAE9b,KAAK,EAAE;EACjC,MAAM;IAAC0zB,YAAY;IAAEC;EAAW,CAAC,GAAGzsC,YAAY,CAAC40B,KAAK,CAAC;EACvD,KAAK,MAAMxrB,IAAI,IAAI0P,KAAK,EAAE;IACxB,IAAK0zB,YAAY,CAACpjC,IAAI,CAAC,IAAI1J,UAAU,CAACk1B,KAAK,CAACxrB,IAAI,CAAC,CAAC,IAC5CqjC,WAAW,CAACrjC,IAAI,CAAC,IAAI9P,OAAO,CAACs7B,KAAK,CAACxrB,IAAI,CAAC,CAAE,EAAE;MAChD,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd;AAEA,IAAIsjC,OAAO,GAAG,OAAO;AAErB,MAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,CAAC;AACvE,SAASC,oBAAoBA,CAAC3hB,QAAQ,EAAE9Z,IAAI,EAAE;EAC5C,OAAO8Z,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAK0hB,eAAe,CAAC7tB,OAAO,CAACmM,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI9Z,IAAI,KAAK,GAAI;AAClH;AACA,SAAS07B,aAAaA,CAACC,EAAE,EAAEC,EAAE,EAAE;EAC7B,OAAO,UAASl0C,CAAC,EAAEQ,CAAC,EAAE;IACpB,OAAOR,CAAC,CAACi0C,EAAE,CAAC,KAAKzzC,CAAC,CAACyzC,EAAE,CAAC,GAClBj0C,CAAC,CAACk0C,EAAE,CAAC,GAAG1zC,CAAC,CAAC0zC,EAAE,CAAC,GACbl0C,CAAC,CAACi0C,EAAE,CAAC,GAAGzzC,CAAC,CAACyzC,EAAE,CAAC;EACnB,CAAC;AACH;AACA,SAASE,oBAAoBA,CAAC30B,OAAO,EAAE;EACrC,MAAMrT,KAAK,GAAGqT,OAAO,CAACrT,KAAK;EAC3B,MAAMiG,gBAAgB,GAAGjG,KAAK,CAAC4H,OAAO,CAACxB,SAAS;EAChDpG,KAAK,CAAC25B,aAAa,CAAC,aAAa,CAAC;EAClC3gC,QAAQ,CAACiN,gBAAgB,IAAIA,gBAAgB,CAACgiC,UAAU,EAAE,CAAC50B,OAAO,CAAC,EAAErT,KAAK,CAAC;AAC7E;AACA,SAASkoC,mBAAmBA,CAAC70B,OAAO,EAAE;EACpC,MAAMrT,KAAK,GAAGqT,OAAO,CAACrT,KAAK;EAC3B,MAAMiG,gBAAgB,GAAGjG,KAAK,CAAC4H,OAAO,CAACxB,SAAS;EAChDpN,QAAQ,CAACiN,gBAAgB,IAAIA,gBAAgB,CAACkiC,UAAU,EAAE,CAAC90B,OAAO,CAAC,EAAErT,KAAK,CAAC;AAC7E;AACA,SAASooC,cAAcA,CAAA,EAAG;EACxB,OAAO,OAAOnnC,MAAM,KAAK,WAAW,IAAI,OAAOutB,QAAQ,KAAK,WAAW;AACzE;AACA,SAAS6Z,SAASA,CAAC3mC,IAAI,EAAE;EACvB,IAAI0mC,cAAc,CAAC,CAAC,IAAI,OAAO1mC,IAAI,KAAK,QAAQ,EAAE;IAChDA,IAAI,GAAG8sB,QAAQ,CAAC8Z,cAAc,CAAC5mC,IAAI,CAAC;EACtC,CAAC,MAAM,IAAIA,IAAI,IAAIA,IAAI,CAACF,MAAM,EAAE;IAC9BE,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;EAChB;EACA,IAAIA,IAAI,IAAIA,IAAI,CAACmqB,MAAM,EAAE;IACvBnqB,IAAI,GAAGA,IAAI,CAACmqB,MAAM;EACpB;EACA,OAAOnqB,IAAI;AACb;AACA,MAAM6mC,SAAS,GAAG,CAAC,CAAC;AACpB,MAAMC,QAAQ,GAAIjhC,GAAG,IAAK;EACxB,MAAMskB,MAAM,GAAGwc,SAAS,CAAC9gC,GAAG,CAAC;EAC7B,OAAOrB,MAAM,CAACwB,MAAM,CAAC6gC,SAAS,CAAC,CAAC/7B,MAAM,CAAEvY,CAAC,IAAKA,CAAC,CAAC43B,MAAM,KAAKA,MAAM,CAAC,CAAC/pB,GAAG,CAAC,CAAC;AAC1E,CAAC;AACD,MAAM2mC,KAAK,CAAC;EACVjpC,WAAWA,CAACkC,IAAI,EAAEuF,MAAM,EAAE;IACxB,MAAMlG,EAAE,GAAG,IAAI;IACf,IAAI,CAACkG,MAAM,GAAGA,MAAM,GAAG,IAAIk/B,MAAM,CAACl/B,MAAM,CAAC;IACzC,MAAMyhC,aAAa,GAAGL,SAAS,CAAC3mC,IAAI,CAAC;IACrC,MAAMinC,aAAa,GAAGH,QAAQ,CAACE,aAAa,CAAC;IAC7C,IAAIC,aAAa,EAAE;MACjB,MAAM,IAAItkB,KAAK,CACb,4CAA4C,GAAGskB,aAAa,CAAC59B,EAAE,GAAG,IAAI,GAC1E,qDACE,CAAC;IACH;IACA,MAAMnD,OAAO,GAAGX,MAAM,CAAC0J,cAAc,CAAC1J,MAAM,CAAC8/B,iBAAiB,CAAC,CAAC,EAAEhmC,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC;IAClF,IAAI,CAACg4B,QAAQ,GAAG7nC,EAAE,CAAC8nC,mBAAmB,CAACH,aAAa,EAAEzhC,MAAM,CAAC;IAC7D,MAAMoM,OAAO,GAAGtS,EAAE,CAAC6nC,QAAQ,CAAChd,cAAc,CAAC8c,aAAa,EAAE9gC,OAAO,CAACgY,WAAW,CAAC;IAC9E,MAAMiM,MAAM,GAAGxY,OAAO,IAAIA,OAAO,CAACwY,MAAM;IACxC,MAAMrS,MAAM,GAAGqS,MAAM,IAAIA,MAAM,CAACrS,MAAM;IACtC,MAAMC,KAAK,GAAGoS,MAAM,IAAIA,MAAM,CAACpS,KAAK;IACpC,IAAI,CAAC1O,EAAE,GAAG3P,GAAG,CAAC,CAAC;IACf,IAAI,CAACsS,GAAG,GAAG2F,OAAO;IAClB,IAAI,CAACwY,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACpS,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACsvB,QAAQ,GAAGlhC,OAAO;IACvB,IAAI,CAACmhC,YAAY,GAAG,IAAI,CAACnpB,WAAW;IACpC,IAAI,CAACuL,OAAO,GAAG,EAAE;IACjB,IAAI,CAAC6d,SAAS,GAAG,EAAE;IACnB,IAAI,CAACj9B,OAAO,GAAGjM,SAAS;IACxB,IAAI,CAACuoB,KAAK,GAAG,EAAE;IACf,IAAI,CAAC6G,uBAAuB,GAAGpvB,SAAS;IACxC,IAAI,CAACmT,SAAS,GAAGnT,SAAS;IAC1B,IAAI,CAAC6B,OAAO,GAAG,EAAE;IACjB,IAAI,CAACsnC,UAAU,GAAGnpC,SAAS;IAC3B,IAAI,CAACopC,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAAC58B,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAAC5D,KAAK,GAAG7I,SAAS;IACtB,IAAI,CAACspC,QAAQ,GAAG,IAAIjG,aAAa,CAAC,CAAC;IACnC,IAAI,CAACjT,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACmZ,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC90B,mBAAmB,GAAG1U,SAAS;IACpC,IAAI,CAACuO,QAAQ,GAAGvO,SAAS;IACzB,IAAI,CAACypC,SAAS,GAAGjuC,QAAQ,CAAC,MAAM,IAAI,CAAC+J,MAAM,CAAC,QAAQ,CAAC,EAAEuC,OAAO,CAAC4hC,WAAW,IAAI,CAAC,CAAC;IAChFjB,SAAS,CAACxnC,EAAE,CAACgK,EAAE,CAAC,GAAGhK,EAAE;IACrB,IAAI,CAACsS,OAAO,IAAI,CAACwY,MAAM,EAAE;MACvB4d,OAAO,CAACC,KAAK,CAAC,mEAAmE,CAAC;MAClF;IACF;IACAtmC,QAAQ,CAACf,MAAM,CAACtB,EAAE,EAAE,UAAU,EAAEinC,oBAAoB,CAAC;IACrD5kC,QAAQ,CAACf,MAAM,CAACtB,EAAE,EAAE,UAAU,EAAEmnC,mBAAmB,CAAC;IACpDnnC,EAAE,CAAC4oC,WAAW,CAAC,CAAC;IAChB,IAAI5oC,EAAE,CAACuoC,QAAQ,EAAE;MACfvoC,EAAE,CAACsE,MAAM,CAAC,CAAC;IACb;EACF;EACA,IAAIua,WAAWA,CAAA,EAAG;IAChB,MAAM;MAAChY,OAAO,EAAE;QAACgY,WAAW;QAAEgqB;MAAmB,CAAC;MAAEnwB,KAAK;MAAED,MAAM;MAAEuvB;IAAY,CAAC,GAAG,IAAI;IACvF,IAAI,CAACvzC,aAAa,CAACoqB,WAAW,CAAC,EAAE;MAC/B,OAAOA,WAAW;IACpB;IACA,IAAIgqB,mBAAmB,IAAIb,YAAY,EAAE;MACvC,OAAOA,YAAY;IACrB;IACA,OAAOvvB,MAAM,GAAGC,KAAK,GAAGD,MAAM,GAAG,IAAI;EACvC;EACA,IAAIlP,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACrD,MAAM,CAACqD,IAAI;EACzB;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,CAACrD,MAAM,CAACqD,IAAI,GAAGA,IAAI;EACzB;EACA,IAAI1C,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACkhC,QAAQ;EACtB;EACA,IAAIlhC,OAAOA,CAACA,OAAO,EAAE;IACnB,IAAI,CAACX,MAAM,CAACW,OAAO,GAAGA,OAAO;EAC/B;EACA+hC,WAAWA,CAAA,EAAG;IACZ,MAAM5oC,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC44B,aAAa,CAAC,YAAY,CAAC;IAC9B,IAAI54B,EAAE,CAAC6G,OAAO,CAACiiC,UAAU,EAAE;MACzB9oC,EAAE,CAAC4F,MAAM,CAAC,CAAC;IACb,CAAC,MAAM;MACLnL,WAAW,CAACuF,EAAE,EAAEA,EAAE,CAAC6G,OAAO,CAACqnB,gBAAgB,CAAC;IAC9C;IACAluB,EAAE,CAAC+oC,UAAU,CAAC,CAAC;IACf/oC,EAAE,CAAC44B,aAAa,CAAC,WAAW,CAAC;IAC7B,OAAO54B,EAAE;EACX;EACA8nC,mBAAmBA,CAAChd,MAAM,EAAE5kB,MAAM,EAAE;IAClC,IAAIA,MAAM,CAAC2hC,QAAQ,EAAE;MACnB,OAAO,IAAI3hC,MAAM,CAAC2hC,QAAQ,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAI,CAACR,cAAc,CAAC,CAAC,IAAK,OAAO2B,eAAe,KAAK,WAAW,IAAIle,MAAM,YAAYke,eAAgB,EAAE;MAC7G,OAAO,IAAI3d,aAAa,CAAC,CAAC;IAC5B;IACA,OAAO,IAAI0D,WAAW,CAAC,CAAC;EAC1B;EACA0W,KAAKA,CAAA,EAAG;IACN9qC,WAAW,CAAC,IAAI,CAACmwB,MAAM,EAAE,IAAI,CAACne,GAAG,CAAC;IAClC,OAAO,IAAI;EACb;EACA1K,IAAIA,CAAA,EAAG;IACLI,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;IACnB,OAAO,IAAI;EACb;EACA2D,MAAMA,CAAC8S,KAAK,EAAED,MAAM,EAAE;IACpB,IAAI,CAACpW,QAAQ,CAAC9B,OAAO,CAAC,IAAI,CAAC,EAAE;MAC3B,IAAI,CAAC0oC,OAAO,CAACvwB,KAAK,EAAED,MAAM,CAAC;IAC7B,CAAC,MAAM;MACL,IAAI,CAACywB,iBAAiB,GAAG;QAACxwB,KAAK;QAAED;MAAM,CAAC;IAC1C;EACF;EACAwwB,OAAOA,CAACvwB,KAAK,EAAED,MAAM,EAAE;IACrB,MAAMzY,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAMikB,MAAM,GAAG9qB,EAAE,CAAC8qB,MAAM;IACxB,MAAMjM,WAAW,GAAGhY,OAAO,CAACgiC,mBAAmB,IAAI7oC,EAAE,CAAC6e,WAAW;IACjE,MAAMsqB,OAAO,GAAGnpC,EAAE,CAAC6nC,QAAQ,CAAC5wC,cAAc,CAAC6zB,MAAM,EAAEpS,KAAK,EAAED,MAAM,EAAEoG,WAAW,CAAC;IAC9E,MAAMuqB,QAAQ,GAAGppC,EAAE,CAACmuB,uBAAuB;IAC3C,MAAMkb,QAAQ,GAAGxiC,OAAO,CAACqnB,gBAAgB,IAAIluB,EAAE,CAAC6nC,QAAQ,CAAC1c,mBAAmB,CAAC,CAAC;IAC9E,IAAInrB,EAAE,CAAC0Y,KAAK,KAAKywB,OAAO,CAACzwB,KAAK,IAAI1Y,EAAE,CAACyY,MAAM,KAAK0wB,OAAO,CAAC1wB,MAAM,IAAI2wB,QAAQ,KAAKC,QAAQ,EAAE;MACvF;IACF;IACArpC,EAAE,CAAC0Y,KAAK,GAAGywB,OAAO,CAACzwB,KAAK;IACxB1Y,EAAE,CAACyY,MAAM,GAAG0wB,OAAO,CAAC1wB,MAAM;IAC1BzY,EAAE,CAACgoC,YAAY,GAAGhoC,EAAE,CAAC6e,WAAW;IAChCpkB,WAAW,CAACuF,EAAE,EAAEqpC,QAAQ,EAAE,IAAI,CAAC;IAC/BrpC,EAAE,CAAC44B,aAAa,CAAC,QAAQ,EAAE;MAACrxB,IAAI,EAAE4hC;IAAO,CAAC,CAAC;IAC3ClxC,QAAQ,CAAC4O,OAAO,CAACyiC,QAAQ,EAAE,CAACtpC,EAAE,EAAEmpC,OAAO,CAAC,EAAEnpC,EAAE,CAAC;IAC7C,IAAIA,EAAE,CAACuoC,QAAQ,EAAE;MACf,IAAIvoC,EAAE,CAACwoC,SAAS,CAAC,CAAC,EAAE;QAClBxoC,EAAE,CAACupC,MAAM,CAAC,CAAC;MACb;IACF;EACF;EACAC,mBAAmBA,CAAA,EAAG;IACpB,MAAM3iC,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM4iC,aAAa,GAAG5iC,OAAO,CAAC2E,MAAM,IAAI,CAAC,CAAC;IAC1CzU,IAAI,CAAC0yC,aAAa,EAAE,CAACC,WAAW,EAAEtK,MAAM,KAAK;MAC3CsK,WAAW,CAAC1/B,EAAE,GAAGo1B,MAAM;IACzB,CAAC,CAAC;EACJ;EACAuK,mBAAmBA,CAAA,EAAG;IACpB,MAAM3pC,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAM+iC,SAAS,GAAG/iC,OAAO,CAAC2E,MAAM;IAChC,MAAMA,MAAM,GAAGxL,EAAE,CAACwL,MAAM;IACxB,MAAMq+B,OAAO,GAAG1kC,MAAM,CAACC,IAAI,CAACoG,MAAM,CAAC,CAAC5J,MAAM,CAAC,CAAC+V,GAAG,EAAE3N,EAAE,KAAK;MACtD2N,GAAG,CAAC3N,EAAE,CAAC,GAAG,KAAK;MACf,OAAO2N,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,IAAInX,KAAK,GAAG,EAAE;IACd,IAAIopC,SAAS,EAAE;MACbppC,KAAK,GAAGA,KAAK,CAAC8U,MAAM,CAClBnQ,MAAM,CAACC,IAAI,CAACwkC,SAAS,CAAC,CAAC5qB,GAAG,CAAEhV,EAAE,IAAK;QACjC,MAAMi6B,YAAY,GAAG2F,SAAS,CAAC5/B,EAAE,CAAC;QAClC,MAAMoB,IAAI,GAAG44B,aAAa,CAACh6B,EAAE,EAAEi6B,YAAY,CAAC;QAC5C,MAAM6F,QAAQ,GAAG1+B,IAAI,KAAK,GAAG;QAC7B,MAAM4M,YAAY,GAAG5M,IAAI,KAAK,GAAG;QACjC,OAAO;UACLvE,OAAO,EAAEo9B,YAAY;UACrB8F,SAAS,EAAED,QAAQ,GAAG,WAAW,GAAG9xB,YAAY,GAAG,QAAQ,GAAG,MAAM;UACpEgyB,KAAK,EAAEF,QAAQ,GAAG,cAAc,GAAG9xB,YAAY,GAAG,UAAU,GAAG;QACjE,CAAC;MACH,CAAC,CACH,CAAC;IACH;IACAjhB,IAAI,CAACyJ,KAAK,EAAGG,IAAI,IAAK;MACpB,MAAMsjC,YAAY,GAAGtjC,IAAI,CAACkG,OAAO;MACjC,MAAMmD,EAAE,GAAGi6B,YAAY,CAACj6B,EAAE;MAC1B,MAAMoB,IAAI,GAAG44B,aAAa,CAACh6B,EAAE,EAAEi6B,YAAY,CAAC;MAC5C,MAAMgG,SAAS,GAAGt2C,cAAc,CAACswC,YAAY,CAAC7kC,IAAI,EAAEuB,IAAI,CAACqpC,KAAK,CAAC;MAC/D,IAAI/F,YAAY,CAAC/e,QAAQ,KAAKnmB,SAAS,IAAI8nC,oBAAoB,CAAC5C,YAAY,CAAC/e,QAAQ,EAAE9Z,IAAI,CAAC,KAAKy7B,oBAAoB,CAAClmC,IAAI,CAACopC,SAAS,CAAC,EAAE;QACrI9F,YAAY,CAAC/e,QAAQ,GAAGvkB,IAAI,CAACopC,SAAS;MACxC;MACAF,OAAO,CAAC7/B,EAAE,CAAC,GAAG,IAAI;MAClB,IAAIpC,KAAK,GAAG,IAAI;MAChB,IAAIoC,EAAE,IAAIwB,MAAM,IAAIA,MAAM,CAACxB,EAAE,CAAC,CAAC5K,IAAI,KAAK6qC,SAAS,EAAE;QACjDriC,KAAK,GAAG4D,MAAM,CAACxB,EAAE,CAAC;MACpB,CAAC,MAAM;QACL,MAAMkgC,UAAU,GAAGjI,QAAQ,CAACX,QAAQ,CAAC2I,SAAS,CAAC;QAC/CriC,KAAK,GAAG,IAAIsiC,UAAU,CAAC;UACrBlgC,EAAE;UACF5K,IAAI,EAAE6qC,SAAS;UACft9B,GAAG,EAAE3M,EAAE,CAAC2M,GAAG;UACX1N,KAAK,EAAEe;QACT,CAAC,CAAC;QACFwL,MAAM,CAAC5D,KAAK,CAACoC,EAAE,CAAC,GAAGpC,KAAK;MAC1B;MACAA,KAAK,CAAC8uB,IAAI,CAACuN,YAAY,EAAEp9B,OAAO,CAAC;IACnC,CAAC,CAAC;IACF9P,IAAI,CAAC8yC,OAAO,EAAE,CAACM,UAAU,EAAEngC,EAAE,KAAK;MAChC,IAAI,CAACmgC,UAAU,EAAE;QACf,OAAO3+B,MAAM,CAACxB,EAAE,CAAC;MACnB;IACF,CAAC,CAAC;IACFjT,IAAI,CAACyU,MAAM,EAAG5D,KAAK,IAAK;MACtB6f,OAAO,CAACphB,SAAS,CAACrG,EAAE,EAAE4H,KAAK,EAAEA,KAAK,CAACf,OAAO,CAAC;MAC3C4gB,OAAO,CAAC0C,MAAM,CAACnqB,EAAE,EAAE4H,KAAK,CAAC;IAC3B,CAAC,CAAC;EACJ;EACAwiC,mBAAmBA,CAACzgC,IAAI,EAAEb,KAAK,EAAE;IAC/B,MAAMH,QAAQ,GAAG,IAAI,CAACs/B,SAAS;IAC/B,MAAMoC,QAAQ,GAAG1gC,IAAI,CAACb,KAAK;IAC3B,IAAIuhC,QAAQ,KAAKvhC,KAAK,EAAE;MACtBH,QAAQ,CAAC0hC,QAAQ,CAAC,GAAG1hC,QAAQ,CAACG,KAAK,CAAC;MACpCH,QAAQ,CAACG,KAAK,CAAC,GAAGa,IAAI;MACtBA,IAAI,CAACb,KAAK,GAAGA,KAAK;IACpB;EACF;EACAwhC,eAAeA,CAAA,EAAG;IAChB,MAAMtqC,EAAE,GAAG,IAAI;IACf,MAAM2I,QAAQ,GAAG3I,EAAE,CAACioC,SAAS;IAC7B,MAAM/zB,OAAO,GAAGlU,EAAE,CAACuJ,IAAI,CAACoF,QAAQ,CAAClO,MAAM;IACvC,MAAMwT,OAAO,GAAGtL,QAAQ,CAAClI,MAAM;IAC/B,IAAIwT,OAAO,GAAGC,OAAO,EAAE;MACrB,KAAK,IAAI9gB,CAAC,GAAG8gB,OAAO,EAAE9gB,CAAC,GAAG6gB,OAAO,EAAE,EAAE7gB,CAAC,EAAE;QACtC4M,EAAE,CAACuqC,mBAAmB,CAACn3C,CAAC,CAAC;MAC3B;MACAuV,QAAQ,CAAC8L,MAAM,CAACP,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;IAC7C;IACAlU,EAAE,CAACooC,eAAe,GAAGz/B,QAAQ,CAACoX,KAAK,CAAC,CAAC,CAAC,CAACxK,IAAI,CAACuxB,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EAC9E;EACA0D,2BAA2BA,CAAA,EAAG;IAC5B,MAAMxqC,EAAE,GAAG,IAAI;IACf,MAAM;MAACioC,SAAS,EAAEt/B,QAAQ;MAAEY,IAAI,EAAE;QAACoF;MAAQ;IAAC,CAAC,GAAG3O,EAAE;IAClD,IAAI2I,QAAQ,CAAClI,MAAM,GAAGkO,QAAQ,CAAClO,MAAM,EAAE;MACrC,OAAOT,EAAE,CAACgL,OAAO;IACnB;IACArC,QAAQ,CAAClJ,OAAO,CAAC,CAACkK,IAAI,EAAEb,KAAK,KAAK;MAChC,IAAI6F,QAAQ,CAAClD,MAAM,CAACvV,CAAC,IAAIA,CAAC,KAAKyT,IAAI,CAACuW,QAAQ,CAAC,CAACzf,MAAM,KAAK,CAAC,EAAE;QAC1DT,EAAE,CAACuqC,mBAAmB,CAACzhC,KAAK,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ;EACA2hC,wBAAwBA,CAAA,EAAG;IACzB,MAAMzqC,EAAE,GAAG,IAAI;IACf,MAAM0qC,cAAc,GAAG,EAAE;IACzB,MAAM/7B,QAAQ,GAAG3O,EAAE,CAACuJ,IAAI,CAACoF,QAAQ;IACjC,IAAIvb,CAAC,EAAEyV,IAAI;IACX7I,EAAE,CAACwqC,2BAA2B,CAAC,CAAC;IAChC,KAAKp3C,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG8F,QAAQ,CAAClO,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;MACjD,MAAM0Y,OAAO,GAAG6C,QAAQ,CAACvb,CAAC,CAAC;MAC3B,IAAIuW,IAAI,GAAG3J,EAAE,CAAC4O,cAAc,CAACxb,CAAC,CAAC;MAC/B,MAAMgM,IAAI,GAAG0M,OAAO,CAAC1M,IAAI,IAAIY,EAAE,CAACkG,MAAM,CAAC9G,IAAI;MAC3C,IAAIuK,IAAI,CAACvK,IAAI,IAAIuK,IAAI,CAACvK,IAAI,KAAKA,IAAI,EAAE;QACnCY,EAAE,CAACuqC,mBAAmB,CAACn3C,CAAC,CAAC;QACzBuW,IAAI,GAAG3J,EAAE,CAAC4O,cAAc,CAACxb,CAAC,CAAC;MAC7B;MACAuW,IAAI,CAACvK,IAAI,GAAGA,IAAI;MAChBuK,IAAI,CAACyE,SAAS,GAAGtC,OAAO,CAACsC,SAAS,IAAIs1B,YAAY,CAACtkC,IAAI,EAAEY,EAAE,CAAC6G,OAAO,CAAC;MACpE8C,IAAI,CAACghC,KAAK,GAAG7+B,OAAO,CAAC6+B,KAAK,IAAI,CAAC;MAC/B3qC,EAAE,CAACoqC,mBAAmB,CAACzgC,IAAI,EAAEvW,CAAC,CAAC;MAC/BuW,IAAI,CAACiI,KAAK,GAAG,EAAE,GAAG9F,OAAO,CAAC8F,KAAK;MAC/BjI,IAAI,CAAC5D,OAAO,GAAG/F,EAAE,CAAC6c,gBAAgB,CAACzpB,CAAC,CAAC;MACrC,IAAIuW,IAAI,CAACkB,UAAU,EAAE;QACnBlB,IAAI,CAACkB,UAAU,CAAC8C,WAAW,CAACva,CAAC,CAAC;QAC9BuW,IAAI,CAACkB,UAAU,CAAC2C,UAAU,CAAC,CAAC;MAC9B,CAAC,MAAM;QACL,MAAMo9B,eAAe,GAAG3I,QAAQ,CAACf,aAAa,CAAC9hC,IAAI,CAAC;QACpD,MAAM;UAAC+P,kBAAkB;UAAEqD;QAAe,CAAC,GAAG/e,QAAQ,CAACkb,QAAQ,CAACvP,IAAI,CAAC;QACrE+F,MAAM,CAACqC,MAAM,CAACojC,eAAe,CAAC51B,SAAS,EAAE;UACvCxC,eAAe,EAAEyvB,QAAQ,CAACb,UAAU,CAAC5uB,eAAe,CAAC;UACrDrD,kBAAkB,EAAEA,kBAAkB,IAAI8yB,QAAQ,CAACb,UAAU,CAACjyB,kBAAkB;QAClF,CAAC,CAAC;QACFxF,IAAI,CAACkB,UAAU,GAAG,IAAI+/B,eAAe,CAAC5qC,EAAE,EAAE5M,CAAC,CAAC;QAC5Cs3C,cAAc,CAACjpC,IAAI,CAACkI,IAAI,CAACkB,UAAU,CAAC;MACtC;IACF;IACA7K,EAAE,CAACsqC,eAAe,CAAC,CAAC;IACpB,OAAOI,cAAc;EACvB;EACAG,cAAcA,CAAA,EAAG;IACf,MAAM7qC,EAAE,GAAG,IAAI;IACfjJ,IAAI,CAACiJ,EAAE,CAACuJ,IAAI,CAACoF,QAAQ,EAAE,CAAC7C,OAAO,EAAE1C,YAAY,KAAK;MAChDpJ,EAAE,CAAC4O,cAAc,CAACxF,YAAY,CAAC,CAACyB,UAAU,CAACkE,KAAK,CAAC,CAAC;IACpD,CAAC,EAAE/O,EAAE,CAAC;EACR;EACA+O,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC87B,cAAc,CAAC,CAAC;IACrB,IAAI,CAACjS,aAAa,CAAC,OAAO,CAAC;EAC7B;EACAt0B,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAMkG,MAAM,GAAGlG,EAAE,CAACkG,MAAM;IACxBA,MAAM,CAAC5B,MAAM,CAAC,CAAC;IACftE,EAAE,CAAC+nC,QAAQ,GAAG7hC,MAAM,CAAC0J,cAAc,CAAC1J,MAAM,CAAC8/B,iBAAiB,CAAC,CAAC,EAAEhmC,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC;IAChF9Y,IAAI,CAACiJ,EAAE,CAACwL,MAAM,EAAG5D,KAAK,IAAK;MACzB6f,OAAO,CAAC4C,SAAS,CAACrqB,EAAE,EAAE4H,KAAK,CAAC;IAC9B,CAAC,CAAC;IACF,MAAMkjC,aAAa,GAAG9qC,EAAE,CAACyT,mBAAmB,GAAG,CAACzT,EAAE,CAAC6G,OAAO,CAACxB,SAAS;IACpErF,EAAE,CAACwpC,mBAAmB,CAAC,CAAC;IACxBxpC,EAAE,CAAC2pC,mBAAmB,CAAC,CAAC;IACxB3pC,EAAE,CAACqoC,QAAQ,CAACzF,UAAU,CAAC,CAAC;IACxB,IAAI5iC,EAAE,CAAC44B,aAAa,CAAC,cAAc,EAAE;MAACzvB,IAAI;MAAEw5B,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MACxE;IACF;IACA,MAAM+H,cAAc,GAAG1qC,EAAE,CAACyqC,wBAAwB,CAAC,CAAC;IACpDzqC,EAAE,CAAC44B,aAAa,CAAC,sBAAsB,CAAC;IACxC,IAAIrO,UAAU,GAAG,CAAC;IAClB,KAAK,IAAIn3B,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG7I,EAAE,CAACuJ,IAAI,CAACoF,QAAQ,CAAClO,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;MAC7D,MAAM;QAACyX;MAAU,CAAC,GAAG7K,EAAE,CAAC4O,cAAc,CAACxb,CAAC,CAAC;MACzC,MAAM2b,KAAK,GAAG,CAAC+7B,aAAa,IAAIJ,cAAc,CAAC3xB,OAAO,CAAClO,UAAU,CAAC,KAAK,CAAC,CAAC;MACzEA,UAAU,CAACuE,qBAAqB,CAACL,KAAK,CAAC;MACvCwb,UAAU,GAAG3qB,IAAI,CAACmC,GAAG,CAAC,CAAC8I,UAAU,CAAC6G,cAAc,CAAC,CAAC,EAAE6Y,UAAU,CAAC;IACjE;IACAvqB,EAAE,CAAC8lB,WAAW,GAAGyE,UAAU;IAC3BvqB,EAAE,CAAC+qC,aAAa,CAACxgB,UAAU,CAAC;IAC5B,IAAI,CAACugB,aAAa,EAAE;MAClB/zC,IAAI,CAAC2zC,cAAc,EAAG7/B,UAAU,IAAK;QACnCA,UAAU,CAACkE,KAAK,CAAC,CAAC;MACpB,CAAC,CAAC;IACJ;IACA/O,EAAE,CAACgrC,eAAe,CAAC7hC,IAAI,CAAC;IACxBnJ,EAAE,CAAC44B,aAAa,CAAC,aAAa,EAAE;MAACzvB;IAAI,CAAC,CAAC;IACvCnJ,EAAE,CAACoqB,OAAO,CAAC7U,IAAI,CAACuxB,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAI9mC,EAAE,CAACkoC,UAAU,EAAE;MACjBloC,EAAE,CAACirC,aAAa,CAACjrC,EAAE,CAACkoC,UAAU,EAAE,IAAI,CAAC;IACvC;IACAloC,EAAE,CAACupC,MAAM,CAAC,CAAC;EACb;EACAwB,aAAaA,CAACxgB,UAAU,EAAE;IACxB,MAAMvqB,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC44B,aAAa,CAAC,cAAc,EAAE;MAAC+J,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAClE;IACF;IACAlb,OAAO,CAACnjB,MAAM,CAACtE,EAAE,EAAEA,EAAE,CAAC0Y,KAAK,EAAE1Y,EAAE,CAACyY,MAAM,EAAE8R,UAAU,CAAC;IACnD,MAAMtY,IAAI,GAAGjS,EAAE,CAACkS,SAAS;IACzB,MAAMg5B,MAAM,GAAGj5B,IAAI,CAACyG,KAAK,IAAI,CAAC,IAAIzG,IAAI,CAACwG,MAAM,IAAI,CAAC;IAClDzY,EAAE,CAACoqB,OAAO,GAAG,EAAE;IACfrzB,IAAI,CAACiJ,EAAE,CAACsnB,KAAK,EAAGL,GAAG,IAAK;MACtB,IAAIikB,MAAM,IAAIjkB,GAAG,CAAC/B,QAAQ,KAAK,WAAW,EAAE;QAC1C;MACF;MACA,IAAI+B,GAAG,CAAC5gB,SAAS,EAAE;QACjB4gB,GAAG,CAAC5gB,SAAS,CAAC,CAAC;MACjB;MACArG,EAAE,CAACoqB,OAAO,CAAC3oB,IAAI,CAAC,GAAGwlB,GAAG,CAACmD,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC,EAAEpqB,EAAE,CAAC;IACNA,EAAE,CAACoqB,OAAO,CAAC3qB,OAAO,CAAC,CAACkB,IAAI,EAAEmI,KAAK,KAAK;MAClCnI,IAAI,CAACwqC,IAAI,GAAGriC,KAAK;IACnB,CAAC,CAAC;IACF9I,EAAE,CAAC44B,aAAa,CAAC,aAAa,CAAC;EACjC;EACAoS,eAAeA,CAAC7hC,IAAI,EAAE;IACpB,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAMrG,UAAU,GAAG,OAAOwP,IAAI,KAAK,UAAU;IAC7C,IAAInJ,EAAE,CAAC44B,aAAa,CAAC,sBAAsB,EAAE;MAACzvB,IAAI;MAAEw5B,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAChF;IACF;IACA,KAAK,IAAIvvC,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG7I,EAAE,CAACuJ,IAAI,CAACoF,QAAQ,CAAClO,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC7D4M,EAAE,CAACorC,cAAc,CAACh4C,CAAC,EAAEuG,UAAU,GAAGwP,IAAI,CAAC;QAACC,YAAY,EAAEhW;MAAC,CAAC,CAAC,GAAG+V,IAAI,CAAC;IACnE;IACAnJ,EAAE,CAAC44B,aAAa,CAAC,qBAAqB,EAAE;MAACzvB;IAAI,CAAC,CAAC;EACjD;EACAiiC,cAAcA,CAACtiC,KAAK,EAAEK,IAAI,EAAE;IAC1B,MAAMnJ,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAAC4O,cAAc,CAAC9F,KAAK,CAAC;IACrC,MAAMgmB,IAAI,GAAG;MAACnlB,IAAI;MAAEb,KAAK;MAAEK,IAAI;MAAEw5B,UAAU,EAAE;IAAI,CAAC;IAClD,IAAI3iC,EAAE,CAAC44B,aAAa,CAAC,qBAAqB,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MAC3D;IACF;IACAnlB,IAAI,CAACkB,UAAU,CAAC1K,OAAO,CAACgJ,IAAI,CAAC;IAC7B2lB,IAAI,CAAC6T,UAAU,GAAG,KAAK;IACvB3iC,EAAE,CAAC44B,aAAa,CAAC,oBAAoB,EAAE9J,IAAI,CAAC;EAC9C;EACAya,MAAMA,CAAA,EAAG;IACP,MAAMvpC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC44B,aAAa,CAAC,cAAc,EAAE;MAAC+J,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAClE;IACF;IACA,IAAItgC,QAAQ,CAACV,GAAG,CAAC3B,EAAE,CAAC,EAAE;MACpB,IAAIA,EAAE,CAACuoC,QAAQ,IAAI,CAAClmC,QAAQ,CAAC9B,OAAO,CAACP,EAAE,CAAC,EAAE;QACxCqC,QAAQ,CAACvC,KAAK,CAACE,EAAE,CAAC;MACpB;IACF,CAAC,MAAM;MACLA,EAAE,CAACU,IAAI,CAAC,CAAC;MACTumC,oBAAoB,CAAC;QAAChoC,KAAK,EAAEe;MAAE,CAAC,CAAC;IACnC;EACF;EACAU,IAAIA,CAAA,EAAG;IACL,MAAMV,EAAE,GAAG,IAAI;IACf,IAAI5M,CAAC;IACL,IAAI4M,EAAE,CAACkpC,iBAAiB,EAAE;MACxB,MAAM;QAACxwB,KAAK;QAAED;MAAM,CAAC,GAAGzY,EAAE,CAACkpC,iBAAiB;MAC5ClpC,EAAE,CAACipC,OAAO,CAACvwB,KAAK,EAAED,MAAM,CAAC;MACzBzY,EAAE,CAACkpC,iBAAiB,GAAG,IAAI;IAC7B;IACAlpC,EAAE,CAACylC,KAAK,CAAC,CAAC;IACV,IAAIzlC,EAAE,CAAC0Y,KAAK,IAAI,CAAC,IAAI1Y,EAAE,CAACyY,MAAM,IAAI,CAAC,EAAE;MACnC;IACF;IACA,IAAIzY,EAAE,CAAC44B,aAAa,CAAC,YAAY,EAAE;MAAC+J,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAChE;IACF;IACA,MAAM0I,MAAM,GAAGrrC,EAAE,CAACoqB,OAAO;IACzB,KAAKh3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi4C,MAAM,CAAC5qC,MAAM,IAAI4qC,MAAM,CAACj4C,CAAC,CAAC,CAACkD,CAAC,IAAI,CAAC,EAAE,EAAElD,CAAC,EAAE;MACtDi4C,MAAM,CAACj4C,CAAC,CAAC,CAACsN,IAAI,CAACV,EAAE,CAACkS,SAAS,CAAC;IAC9B;IACAlS,EAAE,CAACsrC,aAAa,CAAC,CAAC;IAClB,OAAOl4C,CAAC,GAAGi4C,MAAM,CAAC5qC,MAAM,EAAE,EAAErN,CAAC,EAAE;MAC7Bi4C,MAAM,CAACj4C,CAAC,CAAC,CAACsN,IAAI,CAACV,EAAE,CAACkS,SAAS,CAAC;IAC9B;IACAlS,EAAE,CAAC44B,aAAa,CAAC,WAAW,CAAC;EAC/B;EACAhwB,sBAAsBA,CAACF,aAAa,EAAE;IACpC,MAAM1I,EAAE,GAAG,IAAI;IACf,MAAM2I,QAAQ,GAAG3I,EAAE,CAACooC,eAAe;IACnC,MAAM5U,MAAM,GAAG,EAAE;IACjB,IAAIpgC,CAAC,EAAEyV,IAAI;IACX,KAAKzV,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGF,QAAQ,CAAClI,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACjD,MAAMuW,IAAI,GAAGhB,QAAQ,CAACvV,CAAC,CAAC;MACxB,IAAI,CAACsV,aAAa,IAAIiB,IAAI,CAAC5D,OAAO,EAAE;QAClCytB,MAAM,CAAC/xB,IAAI,CAACkI,IAAI,CAAC;MACnB;IACF;IACA,OAAO6pB,MAAM;EACf;EACAhP,4BAA4BA,CAAA,EAAG;IAC7B,OAAO,IAAI,CAAC5b,sBAAsB,CAAC,IAAI,CAAC;EAC1C;EACA0iC,aAAaA,CAAA,EAAG;IACd,MAAMtrC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC44B,aAAa,CAAC,oBAAoB,EAAE;MAAC+J,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MACxE;IACF;IACA,MAAMh6B,QAAQ,GAAG3I,EAAE,CAACwkB,4BAA4B,CAAC,CAAC;IAClD,KAAK,IAAIpxB,CAAC,GAAGuV,QAAQ,CAAClI,MAAM,GAAG,CAAC,EAAErN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC7C4M,EAAE,CAACurC,YAAY,CAAC5iC,QAAQ,CAACvV,CAAC,CAAC,CAAC;IAC9B;IACA4M,EAAE,CAAC44B,aAAa,CAAC,mBAAmB,CAAC;EACvC;EACA2S,YAAYA,CAAC5hC,IAAI,EAAE;IACjB,MAAM3J,EAAE,GAAG,IAAI;IACf,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;IAClB,MAAMoF,IAAI,GAAGpI,IAAI,CAACmI,KAAK;IACvB,MAAMG,IAAI,GAAGjS,EAAE,CAACkS,SAAS;IACzB,MAAM4c,IAAI,GAAG;MACXnlB,IAAI;MACJb,KAAK,EAAEa,IAAI,CAACb,KAAK;MACjB65B,UAAU,EAAE;IACd,CAAC;IACD,IAAI3iC,EAAE,CAAC44B,aAAa,CAAC,mBAAmB,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MACzD;IACF;IACAn6B,QAAQ,CAACgY,GAAG,EAAE;MACZpE,IAAI,EAAEwJ,IAAI,CAACxJ,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG0J,IAAI,CAAC1J,IAAI,GAAGwJ,IAAI,CAACxJ,IAAI;MACrDF,KAAK,EAAE0J,IAAI,CAAC1J,KAAK,KAAK,KAAK,GAAGrI,EAAE,CAAC0Y,KAAK,GAAGzG,IAAI,CAAC5J,KAAK,GAAG0J,IAAI,CAAC1J,KAAK;MAChED,GAAG,EAAE2J,IAAI,CAAC3J,GAAG,KAAK,KAAK,GAAG,CAAC,GAAG6J,IAAI,CAAC7J,GAAG,GAAG2J,IAAI,CAAC3J,GAAG;MACjDE,MAAM,EAAEyJ,IAAI,CAACzJ,MAAM,KAAK,KAAK,GAAGtI,EAAE,CAACyY,MAAM,GAAGxG,IAAI,CAAC3J,MAAM,GAAGyJ,IAAI,CAACzJ;IACjE,CAAC,CAAC;IACFqB,IAAI,CAACkB,UAAU,CAACnK,IAAI,CAAC,CAAC;IACtB7L,UAAU,CAAC8X,GAAG,CAAC;IACfmiB,IAAI,CAAC6T,UAAU,GAAG,KAAK;IACvB3iC,EAAE,CAAC44B,aAAa,CAAC,kBAAkB,EAAE9J,IAAI,CAAC;EAC5C;EACA0c,yBAAyBA,CAACx4C,CAAC,EAAEmW,IAAI,EAAEtC,OAAO,EAAEgf,gBAAgB,EAAE;IAC5D,MAAM9gB,MAAM,GAAG0hB,WAAW,CAACC,KAAK,CAACvd,IAAI,CAAC;IACtC,IAAI,OAAOpE,MAAM,KAAK,UAAU,EAAE;MAChC,OAAOA,MAAM,CAAC,IAAI,EAAE/R,CAAC,EAAE6T,OAAO,EAAEgf,gBAAgB,CAAC;IACnD;IACA,OAAO,EAAE;EACX;EACAjX,cAAcA,CAACxF,YAAY,EAAE;IAC3B,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM8L,OAAO,GAAG9L,EAAE,CAACuJ,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC;IAC9C,MAAMT,QAAQ,GAAG3I,EAAE,CAACioC,SAAS;IAC7B,IAAIt+B,IAAI,GAAGhB,QAAQ,CAAC8C,MAAM,CAACvV,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACgqB,QAAQ,KAAKpU,OAAO,CAAC,CAAC/K,GAAG,CAAC,CAAC;IAClE,IAAI,CAAC4I,IAAI,EAAE;MACTA,IAAI,GAAGhB,QAAQ,CAACS,YAAY,CAAC,GAAG;QAC9BhK,IAAI,EAAE,IAAI;QACVmK,IAAI,EAAE,EAAE;QACRuC,OAAO,EAAE,IAAI;QACbjB,UAAU,EAAE,IAAI;QAChB2U,MAAM,EAAE,IAAI;QACZzR,OAAO,EAAE,IAAI;QACbE,OAAO,EAAE,IAAI;QACb08B,KAAK,EAAE7+B,OAAO,IAAIA,OAAO,CAAC6+B,KAAK,IAAI,CAAC;QACpC7hC,KAAK,EAAEM,YAAY;QACnB8W,QAAQ,EAAEpU,OAAO;QACjBM,OAAO,EAAE,EAAE;QACX8D,OAAO,EAAE;MACX,CAAC;IACH;IACA,OAAOvG,IAAI;EACb;EACAkG,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACvC,QAAQ,KAAK,IAAI,CAACA,QAAQ,GAAG;MAACrO,KAAK,EAAE,IAAI;MAAEG,IAAI,EAAE;IAAO,CAAC,CAAC;EACxE;EACA2iB,sBAAsBA,CAAA,EAAG;IACvB,OAAO,IAAI,CAACyC,4BAA4B,CAAC,CAAC,CAAC/jB,MAAM;EACnD;EACAoc,gBAAgBA,CAACzT,YAAY,EAAE;IAC7B,MAAM0C,OAAO,GAAG,IAAI,CAACvC,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC;IAChD,IAAI,CAAC0C,OAAO,EAAE;MACZ,OAAO,KAAK;IACd;IACA,MAAMnC,IAAI,GAAG,IAAI,CAACiF,cAAc,CAACxF,YAAY,CAAC;IAC9C,OAAO,OAAOO,IAAI,CAAC6V,MAAM,KAAK,SAAS,GAAG,CAAC7V,IAAI,CAAC6V,MAAM,GAAG,CAAC1T,OAAO,CAAC0T,MAAM;EAC1E;EACAisB,oBAAoBA,CAACriC,YAAY,EAAErD,OAAO,EAAE;IAC1C,MAAM4D,IAAI,GAAG,IAAI,CAACiF,cAAc,CAACxF,YAAY,CAAC;IAC9CO,IAAI,CAAC6V,MAAM,GAAG,CAACzZ,OAAO;EACxB;EACA4Z,oBAAoBA,CAAC7W,KAAK,EAAE;IAC1B,IAAI,CAACw/B,cAAc,CAACx/B,KAAK,CAAC,GAAG,CAAC,IAAI,CAACw/B,cAAc,CAACx/B,KAAK,CAAC;EAC1D;EACA0Q,iBAAiBA,CAAC1Q,KAAK,EAAE;IACvB,OAAO,CAAC,IAAI,CAACw/B,cAAc,CAACx/B,KAAK,CAAC;EACpC;EACA4iC,wBAAwBA,CAACtiC,YAAY,EAAErD,OAAO,EAAE;IAC9C,MAAM/F,EAAE,GAAG,IAAI;IACf,MAAMmJ,IAAI,GAAGpD,OAAO,GAAG,MAAM,GAAG,MAAM;IACtC,MAAM4D,IAAI,GAAG3J,EAAE,CAAC4O,cAAc,CAACxF,YAAY,CAAC;IAC5C,MAAMlK,KAAK,GAAGyK,IAAI,CAACkB,UAAU,CAACqI,kBAAkB,CAACnU,SAAS,EAAEoK,IAAI,CAAC;IACjEnJ,EAAE,CAACyrC,oBAAoB,CAACriC,YAAY,EAAErD,OAAO,CAAC;IAC9C7G,KAAK,CAACoF,MAAM,CAACqF,IAAI,EAAE;MAAC5D;IAAO,CAAC,CAAC;IAC7B/F,EAAE,CAACsE,MAAM,CAAEqI,GAAG,IAAKA,GAAG,CAACvD,YAAY,KAAKA,YAAY,GAAGD,IAAI,GAAGpK,SAAS,CAAC;EAC1E;EACAiH,IAAIA,CAACoD,YAAY,EAAE;IACjB,IAAI,CAACsiC,wBAAwB,CAACtiC,YAAY,EAAE,KAAK,CAAC;EACpD;EACAvD,IAAIA,CAACuD,YAAY,EAAE;IACjB,IAAI,CAACsiC,wBAAwB,CAACtiC,YAAY,EAAE,IAAI,CAAC;EACnD;EACAmhC,mBAAmBA,CAACnhC,YAAY,EAAE;IAChC,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM2J,IAAI,GAAG3J,EAAE,CAACioC,SAAS,IAAIjoC,EAAE,CAACioC,SAAS,CAAC7+B,YAAY,CAAC;IACvD,IAAIO,IAAI,IAAIA,IAAI,CAACkB,UAAU,EAAE;MAC3BlB,IAAI,CAACkB,UAAU,CAACmE,QAAQ,CAAC,CAAC;MAC1B,OAAOhP,EAAE,CAACioC,SAAS,CAAC7+B,YAAY,CAAC;IACnC;EACF;EACAuiC,OAAOA,CAAA,EAAG;IACR,MAAM3rC,EAAE,GAAG,IAAI;IACf,MAAM;MAAC8qB,MAAM;MAAEne;IAAG,CAAC,GAAG3M,EAAE;IACxB,IAAI5M,CAAC,EAAEyV,IAAI;IACX7I,EAAE,CAACiC,IAAI,CAAC,CAAC;IACTI,QAAQ,CAACF,MAAM,CAACnC,EAAE,CAAC;IACnB,KAAK5M,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG7I,EAAE,CAACuJ,IAAI,CAACoF,QAAQ,CAAClO,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACzD4M,EAAE,CAACuqC,mBAAmB,CAACn3C,CAAC,CAAC;IAC3B;IACA4M,EAAE,CAACkG,MAAM,CAACs/B,UAAU,CAAC,CAAC;IACtB,IAAI1a,MAAM,EAAE;MACV9qB,EAAE,CAAC4rC,YAAY,CAAC,CAAC;MACjBjxC,WAAW,CAACmwB,MAAM,EAAEne,GAAG,CAAC;MACxB3M,EAAE,CAAC6nC,QAAQ,CAAC9c,cAAc,CAACpe,GAAG,CAAC;MAC/B3M,EAAE,CAAC8qB,MAAM,GAAG,IAAI;MAChB9qB,EAAE,CAAC2M,GAAG,GAAG,IAAI;IACf;IACA3M,EAAE,CAAC44B,aAAa,CAAC,SAAS,CAAC;IAC3B,OAAO4O,SAAS,CAACxnC,EAAE,CAACgK,EAAE,CAAC;EACzB;EACA6hC,aAAaA,CAAC,GAAG/c,IAAI,EAAE;IACrB,OAAO,IAAI,CAAChE,MAAM,CAACghB,SAAS,CAAC,GAAGhd,IAAI,CAAC;EACvC;EACAia,UAAUA,CAAA,EAAG;IACX,MAAM/oC,EAAE,GAAG,IAAI;IACf,MAAMV,SAAS,GAAGU,EAAE,CAACmoC,UAAU;IAC/B,MAAMN,QAAQ,GAAG7nC,EAAE,CAAC6nC,QAAQ;IAC5B,MAAMkE,IAAI,GAAGA,CAAC3sC,IAAI,EAAE6rB,QAAQ,KAAK;MAC/B4c,QAAQ,CAAC7c,gBAAgB,CAAChrB,EAAE,EAAEZ,IAAI,EAAE6rB,QAAQ,CAAC;MAC7C3rB,SAAS,CAACF,IAAI,CAAC,GAAG6rB,QAAQ;IAC5B,CAAC;IACD,MAAM+gB,OAAO,GAAGA,CAAC5sC,IAAI,EAAE6rB,QAAQ,KAAK;MAClC,IAAI3rB,SAAS,CAACF,IAAI,CAAC,EAAE;QACnByoC,QAAQ,CAAC3c,mBAAmB,CAAClrB,EAAE,EAAEZ,IAAI,EAAE6rB,QAAQ,CAAC;QAChD,OAAO3rB,SAAS,CAACF,IAAI,CAAC;MACxB;IACF,CAAC;IACD,IAAI6rB,QAAQ,GAAG,SAAAA,CAASj4B,CAAC,EAAEkD,CAAC,EAAEE,CAAC,EAAE;MAC/BpD,CAAC,CAACsoB,OAAO,GAAGplB,CAAC;MACblD,CAAC,CAACuoB,OAAO,GAAGnlB,CAAC;MACb4J,EAAE,CAACirC,aAAa,CAACj4C,CAAC,CAAC;IACrB,CAAC;IACD+D,IAAI,CAACiJ,EAAE,CAAC6G,OAAO,CAAColC,MAAM,EAAG7sC,IAAI,IAAK2sC,IAAI,CAAC3sC,IAAI,EAAE6rB,QAAQ,CAAC,CAAC;IACvD,IAAIjrB,EAAE,CAAC6G,OAAO,CAACiiC,UAAU,EAAE;MACzB7d,QAAQ,GAAGA,CAACvS,KAAK,EAAED,MAAM,KAAK;QAC5B,IAAIzY,EAAE,CAAC8qB,MAAM,EAAE;UACb9qB,EAAE,CAAC4F,MAAM,CAAC8S,KAAK,EAAED,MAAM,CAAC;QAC1B;MACF,CAAC;MACD,IAAIyzB,QAAQ;MACZ,MAAM3D,QAAQ,GAAGA,CAAA,KAAM;QACrByD,OAAO,CAAC,QAAQ,EAAEzD,QAAQ,CAAC;QAC3BvoC,EAAE,CAACuoC,QAAQ,GAAG,IAAI;QAClBvoC,EAAE,CAAC4F,MAAM,CAAC,CAAC;QACXmmC,IAAI,CAAC,QAAQ,EAAE9gB,QAAQ,CAAC;QACxB8gB,IAAI,CAAC,QAAQ,EAAEG,QAAQ,CAAC;MAC1B,CAAC;MACDA,QAAQ,GAAGA,CAAA,KAAM;QACflsC,EAAE,CAACuoC,QAAQ,GAAG,KAAK;QACnByD,OAAO,CAAC,QAAQ,EAAE/gB,QAAQ,CAAC;QAC3B8gB,IAAI,CAAC,QAAQ,EAAExD,QAAQ,CAAC;MAC1B,CAAC;MACD,IAAIV,QAAQ,CAACzc,UAAU,CAACprB,EAAE,CAAC8qB,MAAM,CAAC,EAAE;QAClCyd,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM;QACL2D,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,MAAM;MACLlsC,EAAE,CAACuoC,QAAQ,GAAG,IAAI;IACpB;EACF;EACAqD,YAAYA,CAAA,EAAG;IACb,MAAM5rC,EAAE,GAAG,IAAI;IACf,MAAMV,SAAS,GAAGU,EAAE,CAACmoC,UAAU;IAC/B,IAAI,CAAC7oC,SAAS,EAAE;MACd;IACF;IACA,OAAOU,EAAE,CAACmoC,UAAU;IACpBpxC,IAAI,CAACuI,SAAS,EAAE,CAAC2rB,QAAQ,EAAE7rB,IAAI,KAAK;MAClCY,EAAE,CAAC6nC,QAAQ,CAAC3c,mBAAmB,CAAClrB,EAAE,EAAEZ,IAAI,EAAE6rB,QAAQ,CAAC;IACrD,CAAC,CAAC;EACJ;EACAkhB,gBAAgBA,CAAC3rC,KAAK,EAAE2I,IAAI,EAAEqpB,OAAO,EAAE;IACrC,MAAM4Z,MAAM,GAAG5Z,OAAO,GAAG,KAAK,GAAG,QAAQ;IACzC,IAAI7oB,IAAI,EAAEhJ,IAAI,EAAEvN,CAAC,EAAEyV,IAAI;IACvB,IAAIM,IAAI,KAAK,SAAS,EAAE;MACtBQ,IAAI,GAAG,IAAI,CAACiF,cAAc,CAACpO,KAAK,CAAC,CAAC,CAAC,CAAC4I,YAAY,CAAC;MACjDO,IAAI,CAACkB,UAAU,CAAC,GAAG,GAAGuhC,MAAM,GAAG,mBAAmB,CAAC,CAAC,CAAC;IACvD;IACA,KAAKh5C,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGrI,KAAK,CAACC,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC9CuN,IAAI,GAAGH,KAAK,CAACpN,CAAC,CAAC;MACf,MAAMyX,UAAU,GAAGlK,IAAI,IAAI,IAAI,CAACiO,cAAc,CAACjO,IAAI,CAACyI,YAAY,CAAC,CAACyB,UAAU;MAC5E,IAAIA,UAAU,EAAE;QACdA,UAAU,CAACuhC,MAAM,GAAG,YAAY,CAAC,CAACzrC,IAAI,CAACqL,OAAO,EAAErL,IAAI,CAACyI,YAAY,EAAEzI,IAAI,CAACmI,KAAK,CAAC;MAChF;IACF;EACF;EACAujC,iBAAiBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACzrC,OAAO,IAAI,EAAE;EAC3B;EACA0rC,iBAAiBA,CAACC,cAAc,EAAE;IAChC,MAAMvsC,EAAE,GAAG,IAAI;IACf,MAAMwsC,UAAU,GAAGxsC,EAAE,CAACY,OAAO,IAAI,EAAE;IACnC,MAAMyD,MAAM,GAAGkoC,cAAc,CAACvtB,GAAG,CAAC,CAAC;MAAC5V,YAAY;MAAEN;IAAK,CAAC,KAAK;MAC3D,MAAMa,IAAI,GAAG3J,EAAE,CAAC4O,cAAc,CAACxF,YAAY,CAAC;MAC5C,IAAI,CAACO,IAAI,EAAE;QACT,MAAM,IAAI2Z,KAAK,CAAC,4BAA4B,GAAGla,YAAY,CAAC;MAC9D;MACA,OAAO;QACLA,YAAY;QACZ4C,OAAO,EAAErC,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QACzBA;MACF,CAAC;IACH,CAAC,CAAC;IACF,MAAM4Y,OAAO,GAAG,CAAC7mB,cAAc,CAACwJ,MAAM,EAAEmoC,UAAU,CAAC;IACnD,IAAI9qB,OAAO,EAAE;MACX1hB,EAAE,CAACY,OAAO,GAAGyD,MAAM;MACnBrE,EAAE,CAACysC,kBAAkB,CAACpoC,MAAM,EAAEmoC,UAAU,CAAC;IAC3C;EACF;EACA5T,aAAaA,CAAC2J,IAAI,EAAEzT,IAAI,EAAE;IACxB,OAAO,IAAI,CAACuZ,QAAQ,CAAC/F,MAAM,CAAC,IAAI,EAAEC,IAAI,EAAEzT,IAAI,CAAC;EAC/C;EACA2d,kBAAkBA,CAACpoC,MAAM,EAAEmoC,UAAU,EAAEE,MAAM,EAAE;IAC7C,MAAM1sC,EAAE,GAAG,IAAI;IACf,MAAM2sC,YAAY,GAAG3sC,EAAE,CAAC6G,OAAO,CAAC+lC,KAAK;IACrC,MAAM/oB,IAAI,GAAGA,CAAC/wB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,CAAC2Y,MAAM,CAACvV,CAAC,IAAI,CAAC5C,CAAC,CAAC4vC,IAAI,CAAC9sC,CAAC,IAAIF,CAAC,CAACkT,YAAY,KAAKhT,CAAC,CAACgT,YAAY,IAAIlT,CAAC,CAAC4S,KAAK,KAAK1S,CAAC,CAAC0S,KAAK,CAAC,CAAC;IAC5G,MAAM+jC,WAAW,GAAGhpB,IAAI,CAAC2oB,UAAU,EAAEnoC,MAAM,CAAC;IAC5C,MAAMyoC,SAAS,GAAGJ,MAAM,GAAGroC,MAAM,GAAGwf,IAAI,CAACxf,MAAM,EAAEmoC,UAAU,CAAC;IAC5D,IAAIK,WAAW,CAACpsC,MAAM,EAAE;MACtBT,EAAE,CAACmsC,gBAAgB,CAACU,WAAW,EAAEF,YAAY,CAACxjC,IAAI,EAAE,KAAK,CAAC;IAC5D;IACA,IAAI2jC,SAAS,CAACrsC,MAAM,IAAIksC,YAAY,CAACxjC,IAAI,EAAE;MACzCnJ,EAAE,CAACmsC,gBAAgB,CAACW,SAAS,EAAEH,YAAY,CAACxjC,IAAI,EAAE,IAAI,CAAC;IACzD;EACF;EACA8hC,aAAaA,CAACj4C,CAAC,EAAE05C,MAAM,EAAE;IACvB,MAAM1sC,EAAE,GAAG,IAAI;IACf,MAAM8uB,IAAI,GAAG;MAACvtB,KAAK,EAAEvO,CAAC;MAAE05C,MAAM;MAAE/J,UAAU,EAAE;IAAI,CAAC;IACjD,IAAI3iC,EAAE,CAAC44B,aAAa,CAAC,aAAa,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MACnD;IACF;IACA,MAAMpN,OAAO,GAAG1hB,EAAE,CAAC+sC,YAAY,CAAC/5C,CAAC,EAAE05C,MAAM,CAAC;IAC1C5d,IAAI,CAAC6T,UAAU,GAAG,KAAK;IACvB3iC,EAAE,CAAC44B,aAAa,CAAC,YAAY,EAAE9J,IAAI,CAAC;IACpC,IAAIpN,OAAO,IAAIoN,IAAI,CAACpN,OAAO,EAAE;MAC3B1hB,EAAE,CAACupC,MAAM,CAAC,CAAC;IACb;IACA,OAAOvpC,EAAE;EACX;EACA+sC,YAAYA,CAAC/5C,CAAC,EAAE05C,MAAM,EAAE;IACtB,MAAM1sC,EAAE,GAAG,IAAI;IACf,MAAM;MAACY,OAAO,EAAE4rC,UAAU,GAAG,EAAE;MAAE3lC;IAAO,CAAC,GAAG7G,EAAE;IAC9C,MAAM2sC,YAAY,GAAG9lC,OAAO,CAAC+lC,KAAK;IAClC,MAAM/mB,gBAAgB,GAAG6mB,MAAM;IAC/B,IAAIroC,MAAM,GAAG,EAAE;IACf,IAAIqd,OAAO,GAAG,KAAK;IACnB,IAAIsrB,SAAS,GAAG,IAAI;IACpB,IAAIh6C,CAAC,CAACoM,IAAI,KAAK,UAAU,EAAE;MACzBiF,MAAM,GAAGrE,EAAE,CAACwrC,yBAAyB,CAACx4C,CAAC,EAAE25C,YAAY,CAACxjC,IAAI,EAAEwjC,YAAY,EAAE9mB,gBAAgB,CAAC;MAC3FmnB,SAAS,GAAGh6C,CAAC,CAACoM,IAAI,KAAK,OAAO,GAAGY,EAAE,CAACkoC,UAAU,GAAGl1C,CAAC;IACpD;IACAgN,EAAE,CAACkoC,UAAU,GAAG,IAAI;IACpBjwC,QAAQ,CAAC4O,OAAO,CAAComC,OAAO,EAAE,CAACj6C,CAAC,EAAEqR,MAAM,EAAErE,EAAE,CAAC,EAAEA,EAAE,CAAC;IAC9C,IAAIhN,CAAC,CAACoM,IAAI,KAAK,SAAS,IAAIpM,CAAC,CAACoM,IAAI,KAAK,OAAO,IAAIpM,CAAC,CAACoM,IAAI,KAAK,aAAa,EAAE;MAC1E,IAAI3I,cAAc,CAACzD,CAAC,EAAEgN,EAAE,CAACkS,SAAS,EAAElS,EAAE,CAAC8lB,WAAW,CAAC,EAAE;QACnD7tB,QAAQ,CAAC4O,OAAO,CAAC4Y,OAAO,EAAE,CAACzsB,CAAC,EAAEqR,MAAM,EAAErE,EAAE,CAAC,EAAEA,EAAE,CAAC;MAChD;IACF;IACA0hB,OAAO,GAAG,CAAC7mB,cAAc,CAACwJ,MAAM,EAAEmoC,UAAU,CAAC;IAC7C,IAAI9qB,OAAO,IAAIgrB,MAAM,EAAE;MACrB1sC,EAAE,CAACY,OAAO,GAAGyD,MAAM;MACnBrE,EAAE,CAACysC,kBAAkB,CAACpoC,MAAM,EAAEmoC,UAAU,EAAEE,MAAM,CAAC;IACnD;IACA1sC,EAAE,CAACkoC,UAAU,GAAG8E,SAAS;IACzB,OAAOtrB,OAAO;EAChB;AACF;AACA,MAAMwrB,iBAAiB,GAAGA,CAAA,KAAMn2C,IAAI,CAAC2wC,KAAK,CAACF,SAAS,EAAGvoC,KAAK,IAAKA,KAAK,CAACopC,QAAQ,CAACzF,UAAU,CAAC,CAAC,CAAC;AAC7F,MAAMuK,UAAU,GAAG,IAAI;AACvBhoC,MAAM,CAACioC,gBAAgB,CAAC1F,KAAK,EAAE;EAC7Bj0C,QAAQ,EAAE;IACR05C,UAAU;IACV7lC,KAAK,EAAE7T;EACT,CAAC;EACD+zC,SAAS,EAAE;IACT2F,UAAU;IACV7lC,KAAK,EAAEkgC;EACT,CAAC;EACDruC,SAAS,EAAE;IACTg0C,UAAU;IACV7lC,KAAK,EAAEnO;EACT,CAAC;EACD8oC,QAAQ,EAAE;IACRkL,UAAU;IACV7lC,KAAK,EAAE26B;EACT,CAAC;EACD0E,OAAO,EAAE;IACPwG,UAAU;IACV7lC,KAAK,EAAEq/B;EACT,CAAC;EACDc,QAAQ,EAAE;IACR0F,UAAU;IACV7lC,KAAK,EAAEmgC;EACT,CAAC;EACDhI,QAAQ,EAAE;IACR0N,UAAU;IACV7lC,KAAK,EAAEA,CAAC,GAAG9G,KAAK,KAAK;MACnByhC,QAAQ,CAACvgC,GAAG,CAAC,GAAGlB,KAAK,CAAC;MACtB0sC,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EACDnN,UAAU,EAAE;IACVoN,UAAU;IACV7lC,KAAK,EAAEA,CAAC,GAAG9G,KAAK,KAAK;MACnByhC,QAAQ,CAAC9/B,MAAM,CAAC,GAAG3B,KAAK,CAAC;MACzB0sC,iBAAiB,CAAC,CAAC;IACrB;EACF;AACF,CAAC,CAAC;AAEF,SAASG,OAAOA,CAAC1gC,GAAG,EAAEX,OAAO,EAAE;EAC7B,MAAM;IAACwP,UAAU;IAAEC,QAAQ;IAAE6xB,WAAW;IAAEp3C,CAAC;IAAEE,CAAC;IAAEqmB,WAAW;IAAED;EAAW,CAAC,GAAGxQ,OAAO;EACnF,IAAIuhC,WAAW,GAAGD,WAAW,GAAG7wB,WAAW;EAC3C9P,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACf/xB,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,GAAG+xB,WAAW,EAAE9xB,QAAQ,GAAG8xB,WAAW,CAAC;EAC5E,IAAI/wB,WAAW,GAAG8wB,WAAW,EAAE;IAC7BC,WAAW,GAAGD,WAAW,GAAG9wB,WAAW;IACvC7P,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEf,QAAQ,GAAG8xB,WAAW,EAAE/xB,UAAU,GAAG+xB,WAAW,EAAE,IAAI,CAAC;EACpF,CAAC,MAAM;IACL5gC,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEk3C,WAAW,EAAE7xB,QAAQ,GAAG5lB,OAAO,EAAE2lB,UAAU,GAAG3lB,OAAO,CAAC;EACtE;EACA8W,GAAG,CAAC6gC,SAAS,CAAC,CAAC;EACf7gC,GAAG,CAACoF,IAAI,CAAC,CAAC;AACZ;AACA,SAAS07B,OAAOA,CAAC9gC,GAAG,EAAEX,OAAO,EAAE;EAC7B,MAAM;IAAC9V,CAAC;IAAEE,CAAC;IAAEolB,UAAU;IAAEC,QAAQ;IAAE6xB;EAAW,CAAC,GAAGthC,OAAO;EACzD,MAAMyQ,WAAW,GAAG7c,IAAI,CAACmC,GAAG,CAACiK,OAAO,CAACyQ,WAAW,GAAG6wB,WAAW,EAAE,CAAC,CAAC;EAClE,MAAM9wB,WAAW,GAAGxQ,OAAO,CAACwQ,WAAW,GAAG8wB,WAAW;EACrD3gC,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACf/xB,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,EAAEC,QAAQ,CAAC;EAChD9O,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEf,QAAQ,EAAED,UAAU,EAAE,IAAI,CAAC;EACtD7O,GAAG,CAAC6gC,SAAS,CAAC,CAAC;AACjB;AACA,SAASE,OAAOA,CAAC/gC,GAAG,EAAEX,OAAO,EAAE;EAC7B,IAAIA,OAAO,CAAC2hC,WAAW,EAAE;IACvB3hC,OAAO,CAACyP,QAAQ,GAAGzP,OAAO,CAACwP,UAAU,GAAGjmB,GAAG;IAC3Ck4C,OAAO,CAAC9gC,GAAG,EAAEX,OAAO,CAAC;IACrB,KAAK,IAAI5Y,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4Y,OAAO,CAAC2hC,WAAW,EAAE,EAAEv6C,CAAC,EAAE;MAC5CuZ,GAAG,CAACsW,IAAI,CAAC,CAAC;IACZ;EACF;EACA,IAAI,CAACnK,KAAK,CAAC9M,OAAO,CAACkP,aAAa,CAAC,EAAE;IACjClP,OAAO,CAACyP,QAAQ,GAAGzP,OAAO,CAACwP,UAAU,GAAGxP,OAAO,CAACkP,aAAa,GAAG3lB,GAAG;EACrE;EACAk4C,OAAO,CAAC9gC,GAAG,EAAEX,OAAO,CAAC;EACrBW,GAAG,CAACsW,IAAI,CAAC,CAAC;AACZ;AACA,SAAS2qB,qBAAqBA,CAACjhC,GAAG,EAAEX,OAAO,EAAE6hC,KAAK,EAAE;EAClD,MAAM;IAAC33C,CAAC;IAAEE,CAAC;IAAEolB,UAAU;IAAEC,QAAQ;IAAE6xB;EAAW,CAAC,GAAGthC,OAAO;EACzD,MAAMyQ,WAAW,GAAG7c,IAAI,CAACmC,GAAG,CAACiK,OAAO,CAACyQ,WAAW,GAAG6wB,WAAW,EAAE,CAAC,CAAC;EAClE,MAAM9wB,WAAW,GAAGxQ,OAAO,CAACwQ,WAAW,GAAG8wB,WAAW;EACrD,IAAIl6C,CAAC;EACL,IAAIy6C,KAAK,EAAE;IACT7hC,OAAO,CAACyP,QAAQ,GAAGzP,OAAO,CAACwP,UAAU,GAAGjmB,GAAG;IAC3C83C,OAAO,CAAC1gC,GAAG,EAAEX,OAAO,CAAC;IACrBA,OAAO,CAACyP,QAAQ,GAAGA,QAAQ;IAC3B,IAAIzP,OAAO,CAACyP,QAAQ,KAAKzP,OAAO,CAACwP,UAAU,EAAE;MAC3CxP,OAAO,CAACyP,QAAQ,IAAIlmB,GAAG;MACvByW,OAAO,CAAC2hC,WAAW,EAAE;IACvB;EACF;EACAhhC,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACf/xB,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEhB,UAAU,GAAGjmB,GAAG,EAAEimB,UAAU,EAAE,IAAI,CAAC;EAC9D,KAAKpoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4Y,OAAO,CAAC2hC,WAAW,EAAE,EAAEv6C,CAAC,EAAE;IACxCuZ,GAAG,CAACkyB,MAAM,CAAC,CAAC;EACd;EACAlyB,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACf/xB,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,EAAEA,UAAU,GAAGjmB,GAAG,CAAC;EACxD,KAAKnC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4Y,OAAO,CAAC2hC,WAAW,EAAE,EAAEv6C,CAAC,EAAE;IACxCuZ,GAAG,CAACkyB,MAAM,CAAC,CAAC;EACd;AACF;AACA,SAAShO,UAAUA,CAAClkB,GAAG,EAAEX,OAAO,EAAE;EAChC,MAAM;IAAC9V,CAAC;IAAEE,CAAC;IAAEolB,UAAU;IAAEC,QAAQ;IAAE6xB,WAAW;IAAEzmC;EAAO,CAAC,GAAGmF,OAAO;EAClE,MAAMyQ,WAAW,GAAGzQ,OAAO,CAACyQ,WAAW;EACvC,MAAMD,WAAW,GAAGxQ,OAAO,CAACwQ,WAAW,GAAG8wB,WAAW;EACrD,MAAMO,KAAK,GAAGhnC,OAAO,CAAC0X,WAAW,KAAK,OAAO;EAC7C,IAAI,CAAC1X,OAAO,CAAC2X,WAAW,EAAE;IACxB;EACF;EACA,IAAIqvB,KAAK,EAAE;IACTlhC,GAAG,CAAC4S,SAAS,GAAG1Y,OAAO,CAAC2X,WAAW,GAAG,CAAC;IACvC7R,GAAG,CAACmhC,QAAQ,GAAG,OAAO;EACxB,CAAC,MAAM;IACLnhC,GAAG,CAAC4S,SAAS,GAAG1Y,OAAO,CAAC2X,WAAW;IACnC7R,GAAG,CAACmhC,QAAQ,GAAG,OAAO;EACxB;EACA,IAAI9hC,OAAO,CAAC2hC,WAAW,EAAE;IACvBC,qBAAqB,CAACjhC,GAAG,EAAEX,OAAO,EAAE6hC,KAAK,CAAC;EAC5C;EACA,IAAIA,KAAK,EAAE;IACTR,OAAO,CAAC1gC,GAAG,EAAEX,OAAO,CAAC;EACvB;EACAW,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACf/xB,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,EAAEC,QAAQ,CAAC;EAChD9O,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEf,QAAQ,EAAED,UAAU,EAAE,IAAI,CAAC;EACtD7O,GAAG,CAAC6gC,SAAS,CAAC,CAAC;EACf7gC,GAAG,CAACkyB,MAAM,CAAC,CAAC;AACd;AACA,MAAMkP,UAAU,SAASxe,OAAO,CAAC;EAC/B9wB,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0D,OAAO,GAAG9H,SAAS;IACxB,IAAI,CAACmc,aAAa,GAAGnc,SAAS;IAC9B,IAAI,CAACyc,UAAU,GAAGzc,SAAS;IAC3B,IAAI,CAAC0c,QAAQ,GAAG1c,SAAS;IACzB,IAAI,CAACyd,WAAW,GAAGzd,SAAS;IAC5B,IAAI,CAAC0d,WAAW,GAAG1d,SAAS;IAC5B,IAAI,CAACuuC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACK,WAAW,GAAG,CAAC;IACpB,IAAIxqC,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACA6iB,OAAOA,CAACgoB,MAAM,EAAEC,MAAM,EAAEpoB,gBAAgB,EAAE;IACxC,MAAMpL,KAAK,GAAG,IAAI,CAACgV,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IACzD,MAAM;MAAC5J,KAAK;MAAEoK;IAAQ,CAAC,GAAGtrB,iBAAiB,CAAC0f,KAAK,EAAE;MAACvkB,CAAC,EAAE83C,MAAM;MAAE53C,CAAC,EAAE63C;IAAM,CAAC,CAAC;IAC1E,MAAM;MAACzyB,UAAU;MAAEC,QAAQ;MAAEe,WAAW;MAAEC,WAAW;MAAEvB;IAAa,CAAC,GAAG,IAAI,CAACuU,QAAQ,CAAC,CACpF,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAE5J,gBAAgB,CAAC;IACpB,MAAMqoB,aAAa,GAAGhzB,aAAa,IAAI3lB,GAAG,IAAII,aAAa,CAACsmB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC;IACxF,MAAM0yB,YAAY,GAAI9nB,QAAQ,IAAI7J,WAAW,IAAI6J,QAAQ,IAAI5J,WAAY;IACzE,OAAQyxB,aAAa,IAAIC,YAAY;EACvC;EACA/nB,cAAcA,CAACP,gBAAgB,EAAE;IAC/B,MAAM;MAAC3vB,CAAC;MAAEE,CAAC;MAAEolB,UAAU;MAAEC,QAAQ;MAAEe,WAAW;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACgT,QAAQ,CAAC,CAC3E,GAAG,EACH,GAAG,EACH,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,CACd,EAAE5J,gBAAgB,CAAC;IACpB,MAAMuoB,SAAS,GAAG,CAAC5yB,UAAU,GAAGC,QAAQ,IAAI,CAAC;IAC7C,MAAM4yB,UAAU,GAAG,CAAC7xB,WAAW,GAAGC,WAAW,IAAI,CAAC;IAClD,OAAO;MACLvmB,CAAC,EAAEA,CAAC,GAAG0J,IAAI,CAAC+b,GAAG,CAACyyB,SAAS,CAAC,GAAGC,UAAU;MACvCj4C,CAAC,EAAEA,CAAC,GAAGwJ,IAAI,CAACic,GAAG,CAACuyB,SAAS,CAAC,GAAGC;IAC/B,CAAC;EACH;EACA7e,eAAeA,CAAC3J,gBAAgB,EAAE;IAChC,OAAO,IAAI,CAACO,cAAc,CAACP,gBAAgB,CAAC;EAC9C;EACAnlB,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM3M,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAMsT,MAAM,GAAGtT,OAAO,CAACsT,MAAM,IAAI,CAAC;IAClCna,EAAE,CAACstC,WAAW,GAAIzmC,OAAO,CAAC0X,WAAW,KAAK,OAAO,GAAI,IAAI,GAAG,CAAC;IAC7Dve,EAAE,CAAC2tC,WAAW,GAAG/tC,IAAI,CAACgE,KAAK,CAAC5D,EAAE,CAACkb,aAAa,GAAG3lB,GAAG,CAAC;IACnD,IAAIyK,EAAE,CAACkb,aAAa,KAAK,CAAC,IAAIlb,EAAE,CAACwc,WAAW,GAAG,CAAC,IAAIxc,EAAE,CAACyc,WAAW,GAAG,CAAC,EAAE;MACtE;IACF;IACA9P,GAAG,CAACqxB,IAAI,CAAC,CAAC;IACV,IAAI7jB,MAAM,IAAIna,EAAE,CAACkb,aAAa,GAAG3lB,GAAG,EAAE;MACpC,MAAM64C,SAAS,GAAG,CAACpuC,EAAE,CAACwb,UAAU,GAAGxb,EAAE,CAACyb,QAAQ,IAAI,CAAC;MACnD9O,GAAG,CAAC2hC,SAAS,CAAC1uC,IAAI,CAAC+b,GAAG,CAACyyB,SAAS,CAAC,GAAGj0B,MAAM,EAAEva,IAAI,CAACic,GAAG,CAACuyB,SAAS,CAAC,GAAGj0B,MAAM,CAAC;IAC3E;IACAxN,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACuY,eAAe;IACvCzS,GAAG,CAAC0S,WAAW,GAAGxY,OAAO,CAACyY,WAAW;IACrCouB,OAAO,CAAC/gC,GAAG,EAAE3M,EAAE,CAAC;IAChB6wB,UAAU,CAAClkB,GAAG,EAAE3M,EAAE,CAAC;IACnB2M,GAAG,CAACuxB,OAAO,CAAC,CAAC;EACf;AACF;AACA6P,UAAU,CAAC/jC,EAAE,GAAG,KAAK;AACrB+jC,UAAU,CAACt6C,QAAQ,GAAG;EACpB8qB,WAAW,EAAE,QAAQ;EACrBe,WAAW,EAAE,MAAM;EACnBd,WAAW,EAAE,CAAC;EACdrE,MAAM,EAAE,CAAC;EACT8B,KAAK,EAAEld;AACT,CAAC;AACDgvC,UAAU,CAACle,aAAa,GAAG;EACzBzQ,eAAe,EAAE;AACnB,CAAC;AAED,SAASmvB,QAAQA,CAAC5hC,GAAG,EAAE6hC,EAAE,EAAE;EACzB7hC,GAAG,CAAC8hC,OAAO,GAAGD,EAAE,CAACE,cAAc;EAC/B/hC,GAAG,CAAC6xB,WAAW,CAACgQ,EAAE,CAACrd,UAAU,CAAC;EAC9BxkB,GAAG,CAAC8xB,cAAc,GAAG+P,EAAE,CAACpd,gBAAgB;EACxCzkB,GAAG,CAACmhC,QAAQ,GAAGU,EAAE,CAACG,eAAe;EACjChiC,GAAG,CAAC4S,SAAS,GAAGivB,EAAE,CAAChwB,WAAW;EAC9B7R,GAAG,CAAC0S,WAAW,GAAGmvB,EAAE,CAAClvB,WAAW;AAClC;AACA,SAASsf,MAAMA,CAACjyB,GAAG,EAAEiiC,QAAQ,EAAExrC,MAAM,EAAE;EACrCuJ,GAAG,CAACiyB,MAAM,CAACx7B,MAAM,CAAClN,CAAC,EAAEkN,MAAM,CAAChN,CAAC,CAAC;AAChC;AACA,SAASy4C,aAAaA,CAAChoC,OAAO,EAAE;EAC9B,IAAIA,OAAO,CAACioC,OAAO,EAAE;IACnB,OAAOjzC,cAAc;EACvB;EACA,IAAIgL,OAAO,CAACkoC,OAAO,EAAE;IACnB,OAAOhzC,cAAc;EACvB;EACA,OAAO6iC,MAAM;AACf;AACA,SAASoQ,QAAQA,CAACx0B,MAAM,EAAEy0B,OAAO,EAAEvnB,MAAM,EAAE;EACzCA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrB,MAAM1X,KAAK,GAAGwK,MAAM,CAAC/Z,MAAM;EAC3B,MAAMX,KAAK,GAAGF,IAAI,CAACmC,GAAG,CAAC2lB,MAAM,CAAC5nB,KAAK,IAAI,CAAC,EAAEmvC,OAAO,CAACnvC,KAAK,CAAC;EACxD,MAAMkI,GAAG,GAAGpI,IAAI,CAACC,GAAG,CAAC6nB,MAAM,CAAC1f,GAAG,IAAIgI,KAAK,GAAG,CAAC,EAAEi/B,OAAO,CAACjnC,GAAG,CAAC;EAC1D,OAAO;IACLgI,KAAK;IACLlQ,KAAK;IACLiE,IAAI,EAAEkrC,OAAO,CAAClrC,IAAI;IAClB8E,IAAI,EAAEb,GAAG,GAAGlI,KAAK,GAAGkQ,KAAK,GAAGhI,GAAG,GAAGlI,KAAK,GAAGkI,GAAG,GAAGlI;EAClD,CAAC;AACH;AACA,SAASovC,WAAWA,CAACviC,GAAG,EAAEsT,IAAI,EAAEgvB,OAAO,EAAEvnB,MAAM,EAAE;EAC/C,MAAM;IAAClN,MAAM;IAAE3T;EAAO,CAAC,GAAGoZ,IAAI;EAC9B,MAAM;IAACjQ,KAAK;IAAElQ,KAAK;IAAEiE,IAAI;IAAE8E;EAAI,CAAC,GAAGmmC,QAAQ,CAACx0B,MAAM,EAAEy0B,OAAO,EAAEvnB,MAAM,CAAC;EACpE,MAAMynB,UAAU,GAAGN,aAAa,CAAChoC,OAAO,CAAC;EACzC,IAAI;IAACwN,IAAI,GAAG,IAAI;IAAEtM;EAAO,CAAC,GAAG2f,MAAM,IAAI,CAAC,CAAC;EACzC,IAAIt0B,CAAC,EAAEqnB,KAAK,EAAEtK,IAAI;EAClB,KAAK/c,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAC1BqnB,KAAK,GAAGD,MAAM,CAAC,CAAC1a,KAAK,IAAIiI,OAAO,GAAGc,IAAI,GAAGzV,CAAC,GAAGA,CAAC,CAAC,IAAI4c,KAAK,CAAC;IAC1D,IAAIyK,KAAK,CAACE,IAAI,EAAE;MACd;IACF,CAAC,MAAM,IAAItG,IAAI,EAAE;MACf1H,GAAG,CAACgyB,MAAM,CAAClkB,KAAK,CAACvkB,CAAC,EAAEukB,KAAK,CAACrkB,CAAC,CAAC;MAC5Bie,IAAI,GAAG,KAAK;IACd,CAAC,MAAM;MACL86B,UAAU,CAACxiC,GAAG,EAAEwD,IAAI,EAAEsK,KAAK,EAAE1S,OAAO,EAAElB,OAAO,CAACioC,OAAO,CAAC;IACxD;IACA3+B,IAAI,GAAGsK,KAAK;EACd;EACA,IAAI1W,IAAI,EAAE;IACR0W,KAAK,GAAGD,MAAM,CAAC,CAAC1a,KAAK,IAAIiI,OAAO,GAAGc,IAAI,GAAG,CAAC,CAAC,IAAImH,KAAK,CAAC;IACtDm/B,UAAU,CAACxiC,GAAG,EAAEwD,IAAI,EAAEsK,KAAK,EAAE1S,OAAO,EAAElB,OAAO,CAACioC,OAAO,CAAC;EACxD;EACA,OAAO,CAAC,CAAC/qC,IAAI;AACf;AACA,SAASqrC,eAAeA,CAACziC,GAAG,EAAEsT,IAAI,EAAEgvB,OAAO,EAAEvnB,MAAM,EAAE;EACnD,MAAMlN,MAAM,GAAGyF,IAAI,CAACzF,MAAM;EAC1B,MAAM;IAACxK,KAAK;IAAElQ,KAAK;IAAE+I;EAAI,CAAC,GAAGmmC,QAAQ,CAACx0B,MAAM,EAAEy0B,OAAO,EAAEvnB,MAAM,CAAC;EAC9D,MAAM;IAACrT,IAAI,GAAG,IAAI;IAAEtM;EAAO,CAAC,GAAG2f,MAAM,IAAI,CAAC,CAAC;EAC3C,IAAI2nB,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIl8C,CAAC,EAAEqnB,KAAK,EAAE80B,KAAK,EAAEjzB,IAAI,EAAEF,IAAI,EAAEozB,KAAK;EACtC,MAAMC,UAAU,GAAI3mC,KAAK,IAAK,CAAChJ,KAAK,IAAIiI,OAAO,GAAGc,IAAI,GAAGC,KAAK,GAAGA,KAAK,CAAC,IAAIkH,KAAK;EAChF,MAAM0/B,KAAK,GAAGA,CAAA,KAAM;IAClB,IAAIpzB,IAAI,KAAKF,IAAI,EAAE;MACjBzP,GAAG,CAACiyB,MAAM,CAACyQ,IAAI,EAAEjzB,IAAI,CAAC;MACtBzP,GAAG,CAACiyB,MAAM,CAACyQ,IAAI,EAAE/yB,IAAI,CAAC;MACtB3P,GAAG,CAACiyB,MAAM,CAACyQ,IAAI,EAAEG,KAAK,CAAC;IACzB;EACF,CAAC;EACD,IAAIn7B,IAAI,EAAE;IACRoG,KAAK,GAAGD,MAAM,CAACi1B,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7B9iC,GAAG,CAACgyB,MAAM,CAAClkB,KAAK,CAACvkB,CAAC,EAAEukB,KAAK,CAACrkB,CAAC,CAAC;EAC9B;EACA,KAAKhD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IAC1BqnB,KAAK,GAAGD,MAAM,CAACi1B,UAAU,CAACr8C,CAAC,CAAC,CAAC;IAC7B,IAAIqnB,KAAK,CAACE,IAAI,EAAE;MACd;IACF;IACA,MAAMzkB,CAAC,GAAGukB,KAAK,CAACvkB,CAAC;IACjB,MAAME,CAAC,GAAGqkB,KAAK,CAACrkB,CAAC;IACjB,MAAMu5C,MAAM,GAAGz5C,CAAC,GAAG,CAAC;IACpB,IAAIy5C,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAIn5C,CAAC,GAAGkmB,IAAI,EAAE;QACZA,IAAI,GAAGlmB,CAAC;MACV,CAAC,MAAM,IAAIA,CAAC,GAAGgmB,IAAI,EAAE;QACnBA,IAAI,GAAGhmB,CAAC;MACV;MACAi5C,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAGn5C,CAAC,IAAI,EAAEo5C,MAAM;IACvC,CAAC,MAAM;MACLI,KAAK,CAAC,CAAC;MACP/iC,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,EAAEE,CAAC,CAAC;MAChBm5C,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACVhzB,IAAI,GAAGF,IAAI,GAAGhmB,CAAC;IACjB;IACAo5C,KAAK,GAAGp5C,CAAC;EACX;EACAs5C,KAAK,CAAC,CAAC;AACT;AACA,SAASE,iBAAiBA,CAAC3vB,IAAI,EAAE;EAC/B,MAAMnY,IAAI,GAAGmY,IAAI,CAACpZ,OAAO;EACzB,MAAMsqB,UAAU,GAAGrpB,IAAI,CAACqpB,UAAU,IAAIrpB,IAAI,CAACqpB,UAAU,CAAC1wB,MAAM;EAC5D,MAAMovC,WAAW,GAAG,CAAC5vB,IAAI,CAACK,UAAU,IAAI,CAACL,IAAI,CAACnc,KAAK,IAAI,CAACgE,IAAI,CAACinC,OAAO,IAAI,CAACjnC,IAAI,CAACgnC,OAAO,IAAI,CAAC3d,UAAU;EACpG,OAAO0e,WAAW,GAAGT,eAAe,GAAGF,WAAW;AACpD;AACA,SAASY,uBAAuBA,CAACjpC,OAAO,EAAE;EACxC,IAAIA,OAAO,CAACioC,OAAO,EAAE;IACnB,OAAOvzC,qBAAqB;EAC9B;EACA,IAAIsL,OAAO,CAACkoC,OAAO,EAAE;IACnB,OAAOtzC,oBAAoB;EAC7B;EACA,OAAOE,YAAY;AACrB;AACA,SAASo0C,mBAAmBA,CAACpjC,GAAG,EAAEsT,IAAI,EAAEngB,KAAK,EAAEkQ,KAAK,EAAE;EACpD,IAAIggC,IAAI,GAAG/vB,IAAI,CAACgwB,KAAK;EACrB,IAAI,CAACD,IAAI,EAAE;IACTA,IAAI,GAAG/vB,IAAI,CAACgwB,KAAK,GAAG,IAAIC,MAAM,CAAC,CAAC;IAChC,IAAIjwB,IAAI,CAAC+vB,IAAI,CAACA,IAAI,EAAElwC,KAAK,EAAEkQ,KAAK,CAAC,EAAE;MACjCggC,IAAI,CAACxC,SAAS,CAAC,CAAC;IAClB;EACF;EACA7gC,GAAG,CAACkyB,MAAM,CAACmR,IAAI,CAAC;AAClB;AACA,SAASG,gBAAgBA,CAACxjC,GAAG,EAAEsT,IAAI,EAAEngB,KAAK,EAAEkQ,KAAK,EAAE;EACjDrD,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACf,IAAIze,IAAI,CAAC+vB,IAAI,CAACrjC,GAAG,EAAE7M,KAAK,EAAEkQ,KAAK,CAAC,EAAE;IAChCrD,GAAG,CAAC6gC,SAAS,CAAC,CAAC;EACjB;EACA7gC,GAAG,CAACkyB,MAAM,CAAC,CAAC;AACd;AACA,MAAMuR,SAAS,GAAG,OAAOF,MAAM,KAAK,UAAU;AAC9C,MAAMG,UAAU,GAAGD,SAAS,GAAGL,mBAAmB,GAAGI,gBAAgB;AACrE,MAAMG,WAAW,SAAS/gB,OAAO,CAAC;EAChC9wB,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAACqd,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAC3Z,OAAO,GAAG9H,SAAS;IACxB,IAAI,CAAC+E,KAAK,GAAG/E,SAAS;IACtB,IAAI,CAAC+jB,SAAS,GAAG/jB,SAAS;IAC1B,IAAI,CAACkxC,KAAK,GAAGlxC,SAAS;IACtB,IAAI,CAACwxC,OAAO,GAAGxxC,SAAS;IACxB,IAAI,CAACyxC,SAAS,GAAGzxC,SAAS;IAC1B,IAAI,CAACuhB,UAAU,GAAG,KAAK;IACvB,IAAI,CAACmwB,cAAc,GAAG,KAAK;IAC3B,IAAIttC,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACA6d,mBAAmBA,CAAC9O,SAAS,EAAE;IAC7B,MAAMlS,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,IAAIA,OAAO,CAACkoC,OAAO,IAAI,CAACloC,OAAO,CAACioC,OAAO,IAAI,CAAC9uC,EAAE,CAACywC,cAAc,EAAE;MAC7D,MAAM1sC,IAAI,GAAG8C,OAAO,CAAC4Z,QAAQ,GAAGzgB,EAAE,CAAC8D,KAAK,GAAG9D,EAAE,CAAC8iB,SAAS;MACvD7nB,0BAA0B,CAAC+E,EAAE,CAACuwC,OAAO,EAAE1pC,OAAO,EAAEqL,SAAS,EAAEnO,IAAI,CAAC;MAChE/D,EAAE,CAACywC,cAAc,GAAG,IAAI;IAC1B;EACF;EACA,IAAIj2B,MAAMA,CAACA,MAAM,EAAE;IACjB,MAAMxa,EAAE,GAAG,IAAI;IACfA,EAAE,CAACuwC,OAAO,GAAG/1B,MAAM;IACnB,OAAOxa,EAAE,CAACwwC,SAAS;IACnB,OAAOxwC,EAAE,CAACiwC,KAAK;IACfjwC,EAAE,CAACywC,cAAc,GAAG,KAAK;EAC3B;EACA,IAAIj2B,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAAC+1B,OAAO;EACrB;EACA,IAAIG,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACF,SAAS,KAAK,IAAI,CAACA,SAAS,GAAGr1C,gBAAgB,CAAC,IAAI,CAAC,CAAC;EACpE;EACAw3B,KAAKA,CAAA,EAAG;IACN,MAAM+d,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,MAAMl2B,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,OAAOk2B,QAAQ,CAACjwC,MAAM,IAAI+Z,MAAM,CAACk2B,QAAQ,CAAC,CAAC,CAAC,CAAC5wC,KAAK,CAAC;EACrD;EACA8Y,IAAIA,CAAA,EAAG;IACL,MAAM83B,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,MAAMl2B,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMxK,KAAK,GAAG0gC,QAAQ,CAACjwC,MAAM;IAC7B,OAAOuP,KAAK,IAAIwK,MAAM,CAACk2B,QAAQ,CAAC1gC,KAAK,GAAG,CAAC,CAAC,CAAChI,GAAG,CAAC;EACjD;EACA2oC,WAAWA,CAACl2B,KAAK,EAAE0lB,QAAQ,EAAE;IAC3B,MAAMngC,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAMS,KAAK,GAAGmT,KAAK,CAAC0lB,QAAQ,CAAC;IAC7B,MAAM3lB,MAAM,GAAGxa,EAAE,CAACwa,MAAM;IACxB,MAAMk2B,QAAQ,GAAGr1C,cAAc,CAAC2E,EAAE,EAAE;MAACmgC,QAAQ;MAAErgC,KAAK,EAAEwH,KAAK;MAAEU,GAAG,EAAEV;IAAK,CAAC,CAAC;IACzE,IAAI,CAACopC,QAAQ,CAACjwC,MAAM,EAAE;MACpB;IACF;IACA,MAAM+yB,MAAM,GAAG,EAAE;IACjB,MAAMod,YAAY,GAAGd,uBAAuB,CAACjpC,OAAO,CAAC;IACrD,IAAIzT,CAAC,EAAEyV,IAAI;IACX,KAAKzV,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG6nC,QAAQ,CAACjwC,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACjD,MAAM;QAAC0M,KAAK;QAAEkI;MAAG,CAAC,GAAG0oC,QAAQ,CAACt9C,CAAC,CAAC;MAChC,MAAMkrC,EAAE,GAAG9jB,MAAM,CAAC1a,KAAK,CAAC;MACxB,MAAMy+B,EAAE,GAAG/jB,MAAM,CAACxS,GAAG,CAAC;MACtB,IAAIs2B,EAAE,KAAKC,EAAE,EAAE;QACb/K,MAAM,CAAC/xB,IAAI,CAAC68B,EAAE,CAAC;QACf;MACF;MACA,MAAMtpC,CAAC,GAAG4K,IAAI,CAACgW,GAAG,CAAC,CAACtO,KAAK,GAAGg3B,EAAE,CAAC6B,QAAQ,CAAC,KAAK5B,EAAE,CAAC4B,QAAQ,CAAC,GAAG7B,EAAE,CAAC6B,QAAQ,CAAC,CAAC,CAAC;MAC1E,MAAM0Q,YAAY,GAAGD,YAAY,CAACtS,EAAE,EAAEC,EAAE,EAAEvpC,CAAC,EAAE6R,OAAO,CAACioC,OAAO,CAAC;MAC7D+B,YAAY,CAAC1Q,QAAQ,CAAC,GAAG1lB,KAAK,CAAC0lB,QAAQ,CAAC;MACxC3M,MAAM,CAAC/xB,IAAI,CAACovC,YAAY,CAAC;IAC3B;IACA,OAAOrd,MAAM,CAAC/yB,MAAM,KAAK,CAAC,GAAG+yB,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;EACjD;EACA0b,WAAWA,CAACviC,GAAG,EAAEsiC,OAAO,EAAEvnB,MAAM,EAAE;IAChC,MAAMopB,aAAa,GAAGlB,iBAAiB,CAAC,IAAI,CAAC;IAC7C,OAAOkB,aAAa,CAACnkC,GAAG,EAAE,IAAI,EAAEsiC,OAAO,EAAEvnB,MAAM,CAAC;EAClD;EACAsoB,IAAIA,CAACrjC,GAAG,EAAE7M,KAAK,EAAEkQ,KAAK,EAAE;IACtB,MAAMhQ,EAAE,GAAG,IAAI;IACf,MAAM0wC,QAAQ,GAAG1wC,EAAE,CAAC0wC,QAAQ;IAC5B,MAAM7nC,IAAI,GAAG6nC,QAAQ,CAACjwC,MAAM;IAC5B,MAAMqwC,aAAa,GAAGlB,iBAAiB,CAAC5vC,EAAE,CAAC;IAC3C,IAAI+D,IAAI,GAAG/D,EAAE,CAAC8D,KAAK;IACnBhE,KAAK,GAAGA,KAAK,IAAI,CAAC;IAClBkQ,KAAK,GAAGA,KAAK,IAAKhQ,EAAE,CAACwa,MAAM,CAAC/Z,MAAM,GAAGX,KAAM;IAC3C,KAAK,IAAI1M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC7B2Q,IAAI,IAAI+sC,aAAa,CAACnkC,GAAG,EAAE3M,EAAE,EAAE0wC,QAAQ,CAACt9C,CAAC,CAAC,EAAE;QAAC0M,KAAK;QAAEkI,GAAG,EAAElI,KAAK,GAAGkQ,KAAK,GAAG;MAAC,CAAC,CAAC;IAC9E;IACA,OAAO,CAAC,CAACjM,IAAI;EACf;EACArD,IAAIA,CAACiM,GAAG,EAAEuF,SAAS,EAAEpS,KAAK,EAAEkQ,KAAK,EAAE;IACjC,MAAMhQ,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO,IAAI,CAAC,CAAC;IAChC,MAAM2T,MAAM,GAAGxa,EAAE,CAACwa,MAAM,IAAI,EAAE;IAC9B,IAAI,CAACA,MAAM,CAAC/Z,MAAM,IAAI,CAACoG,OAAO,CAAC2X,WAAW,EAAE;MAC1C;IACF;IACA7R,GAAG,CAACqxB,IAAI,CAAC,CAAC;IACVuQ,QAAQ,CAAC5hC,GAAG,EAAE9F,OAAO,CAAC;IACtBwpC,UAAU,CAAC1jC,GAAG,EAAE3M,EAAE,EAAEF,KAAK,EAAEkQ,KAAK,CAAC;IACjCrD,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACb,IAAIl+B,EAAE,CAACwgB,QAAQ,EAAE;MACfxgB,EAAE,CAACywC,cAAc,GAAG,KAAK;MACzBzwC,EAAE,CAACiwC,KAAK,GAAGlxC,SAAS;IACtB;EACF;AACF;AACAuxC,WAAW,CAACtmC,EAAE,GAAG,MAAM;AACvBsmC,WAAW,CAAC78C,QAAQ,GAAG;EACrBi7C,cAAc,EAAE,MAAM;EACtBvd,UAAU,EAAE,EAAE;EACdC,gBAAgB,EAAE,CAAC;EACnBud,eAAe,EAAE,OAAO;EACxBnwB,WAAW,EAAE,CAAC;EACduyB,eAAe,EAAE,IAAI;EACrBC,sBAAsB,EAAE,SAAS;EACjC/tB,IAAI,EAAE,KAAK;EACXxC,QAAQ,EAAE,KAAK;EACfquB,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;AACDuB,WAAW,CAACzgB,aAAa,GAAG;EAC1BzQ,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AACDgxB,WAAW,CAAC72C,WAAW,GAAG;EACxBgM,WAAW,EAAE,IAAI;EACjBD,UAAU,EAAGE,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;AAC1D,CAAC;AAED,SAASurC,SAASA,CAAClsB,EAAE,EAAEgC,GAAG,EAAE3b,IAAI,EAAEya,gBAAgB,EAAE;EAClD,MAAMhf,OAAO,GAAGke,EAAE,CAACle,OAAO;EAC1B,MAAM;IAAC,CAACuE,IAAI,GAAG9D;EAAK,CAAC,GAAGyd,EAAE,CAAC0K,QAAQ,CAAC,CAACrkB,IAAI,CAAC,EAAEya,gBAAgB,CAAC;EAC7D,OAAQjmB,IAAI,CAACgW,GAAG,CAACmR,GAAG,GAAGzf,KAAK,CAAC,GAAGT,OAAO,CAAC+T,MAAM,GAAG/T,OAAO,CAACqqC,SAAS;AACpE;AACA,MAAMC,YAAY,SAAS5hB,OAAO,CAAC;EACjC9wB,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0D,OAAO,GAAG9H,SAAS;IACxB,IAAI,CAAC4b,IAAI,GAAG5b,SAAS;IACrB,IAAI,CAACkD,IAAI,GAAGlD,SAAS;IACrB,IAAIoE,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACA6iB,OAAOA,CAACorB,MAAM,EAAEC,MAAM,EAAExrB,gBAAgB,EAAE;IACxC,MAAMhf,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM;MAAC3Q,CAAC;MAAEE;IAAC,CAAC,GAAG,IAAI,CAACq5B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IAC1D,OAASjmB,IAAI,CAAC+lB,GAAG,CAACyrB,MAAM,GAAGl7C,CAAC,EAAE,CAAC,CAAC,GAAG0J,IAAI,CAAC+lB,GAAG,CAAC0rB,MAAM,GAAGj7C,CAAC,EAAE,CAAC,CAAC,GAAIwJ,IAAI,CAAC+lB,GAAG,CAAC9e,OAAO,CAACqqC,SAAS,GAAGrqC,OAAO,CAAC+T,MAAM,EAAE,CAAC,CAAC;EAC/G;EACA02B,QAAQA,CAACF,MAAM,EAAEvrB,gBAAgB,EAAE;IACjC,OAAOorB,SAAS,CAAC,IAAI,EAAEG,MAAM,EAAE,GAAG,EAAEvrB,gBAAgB,CAAC;EACvD;EACA0rB,QAAQA,CAACF,MAAM,EAAExrB,gBAAgB,EAAE;IACjC,OAAOorB,SAAS,CAAC,IAAI,EAAEI,MAAM,EAAE,GAAG,EAAExrB,gBAAgB,CAAC;EACvD;EACAO,cAAcA,CAACP,gBAAgB,EAAE;IAC/B,MAAM;MAAC3vB,CAAC;MAAEE;IAAC,CAAC,GAAG,IAAI,CAACq5B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IAC1D,OAAO;MAAC3vB,CAAC;MAAEE;IAAC,CAAC;EACf;EACAmR,IAAIA,CAACV,OAAO,EAAE;IACZA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;IACvC,IAAI+T,MAAM,GAAG/T,OAAO,CAAC+T,MAAM,IAAI,CAAC;IAChCA,MAAM,GAAGhb,IAAI,CAACmC,GAAG,CAAC6Y,MAAM,EAAEA,MAAM,IAAI/T,OAAO,CAAC2qC,WAAW,IAAI,CAAC,CAAC;IAC7D,MAAMhzB,WAAW,GAAG5D,MAAM,IAAI/T,OAAO,CAAC2X,WAAW,IAAI,CAAC;IACtD,OAAO,CAAC5D,MAAM,GAAG4D,WAAW,IAAI,CAAC;EACnC;EACA9d,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM3M,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,IAAI7G,EAAE,CAAC2a,IAAI,IAAI9T,OAAO,CAAC+T,MAAM,GAAG,GAAG,EAAE;MACnC;IACF;IACAjO,GAAG,CAAC0S,WAAW,GAAGxY,OAAO,CAACyY,WAAW;IACrC3S,GAAG,CAAC4S,SAAS,GAAG1Y,OAAO,CAAC2X,WAAW;IACnC7R,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACuY,eAAe;IACvCnjB,SAAS,CAAC0Q,GAAG,EAAE9F,OAAO,EAAE7G,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC5J,CAAC,CAAC;EACrC;EACA4uB,QAAQA,CAAA,EAAG;IACT,MAAMne,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;IAClC,OAAOA,OAAO,CAAC+T,MAAM,GAAG/T,OAAO,CAACqqC,SAAS;EAC3C;AACF;AACAC,YAAY,CAACnnC,EAAE,GAAG,OAAO;AACzBmnC,YAAY,CAAC19C,QAAQ,GAAG;EACtB+qB,WAAW,EAAE,CAAC;EACd0yB,SAAS,EAAE,CAAC;EACZzyB,gBAAgB,EAAE,CAAC;EACnB+yB,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE,QAAQ;EACpB72B,MAAM,EAAE,CAAC;EACTK,QAAQ,EAAE;AACZ,CAAC;AACDk2B,YAAY,CAACthB,aAAa,GAAG;EAC3BzQ,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,SAASoyB,YAAYA,CAACC,GAAG,EAAE9rB,gBAAgB,EAAE;EAC3C,MAAM;IAAC3vB,CAAC;IAAEE,CAAC;IAAEyhB,IAAI;IAAEa,KAAK;IAAED;EAAM,CAAC,GAAGk5B,GAAG,CAACliB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE5J,gBAAgB,CAAC;EACzG,IAAItd,IAAI,EAAEF,KAAK,EAAED,GAAG,EAAEE,MAAM,EAAEspC,IAAI;EAClC,IAAID,GAAG,CAAC55B,UAAU,EAAE;IAClB65B,IAAI,GAAGn5B,MAAM,GAAG,CAAC;IACjBlQ,IAAI,GAAG3I,IAAI,CAACC,GAAG,CAAC3J,CAAC,EAAE2hB,IAAI,CAAC;IACxBxP,KAAK,GAAGzI,IAAI,CAACmC,GAAG,CAAC7L,CAAC,EAAE2hB,IAAI,CAAC;IACzBzP,GAAG,GAAGhS,CAAC,GAAGw7C,IAAI;IACdtpC,MAAM,GAAGlS,CAAC,GAAGw7C,IAAI;EACnB,CAAC,MAAM;IACLA,IAAI,GAAGl5B,KAAK,GAAG,CAAC;IAChBnQ,IAAI,GAAGrS,CAAC,GAAG07C,IAAI;IACfvpC,KAAK,GAAGnS,CAAC,GAAG07C,IAAI;IAChBxpC,GAAG,GAAGxI,IAAI,CAACC,GAAG,CAACzJ,CAAC,EAAEyhB,IAAI,CAAC;IACvBvP,MAAM,GAAG1I,IAAI,CAACmC,GAAG,CAAC3L,CAAC,EAAEyhB,IAAI,CAAC;EAC5B;EACA,OAAO;IAACtP,IAAI;IAAEH,GAAG;IAAEC,KAAK;IAAEC;EAAM,CAAC;AACnC;AACA,SAASupC,kBAAkBA,CAACF,GAAG,EAAE;EAC/B,IAAI5d,IAAI,GAAG4d,GAAG,CAAC9qC,OAAO,CAACirC,aAAa;EACpC,MAAMltC,GAAG,GAAG,CAAC,CAAC;EACd,IAAI,CAACmvB,IAAI,EAAE;IACT,OAAOnvB,GAAG;EACZ;EACAmvB,IAAI,GAAG4d,GAAG,CAAC55B,UAAU,GACjBg6B,SAAS,CAAChe,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE4d,GAAG,CAAC95B,IAAI,GAAG85B,GAAG,CAACz7C,CAAC,CAAC,GAClD67C,SAAS,CAAChe,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE4d,GAAG,CAAC95B,IAAI,GAAG85B,GAAG,CAACv7C,CAAC,CAAC;EACtDwO,GAAG,CAACmvB,IAAI,CAAC,GAAG,IAAI;EAChB,OAAOnvB,GAAG;AACZ;AACA,SAASmtC,SAASA,CAAChe,IAAI,EAAEjhC,CAAC,EAAEQ,CAAC,EAAEyU,OAAO,EAAE;EACtC,IAAIA,OAAO,EAAE;IACXgsB,IAAI,GAAGie,IAAI,CAACje,IAAI,EAAEjhC,CAAC,EAAEQ,CAAC,CAAC;IACvBygC,IAAI,GAAGke,QAAQ,CAACle,IAAI,EAAEzgC,CAAC,EAAER,CAAC,CAAC;EAC7B,CAAC,MAAM;IACLihC,IAAI,GAAGke,QAAQ,CAACle,IAAI,EAAEjhC,CAAC,EAAEQ,CAAC,CAAC;EAC7B;EACA,OAAOygC,IAAI;AACb;AACA,SAASie,IAAIA,CAACE,IAAI,EAAE9qB,EAAE,EAAE+qB,EAAE,EAAE;EAC1B,OAAOD,IAAI,KAAK9qB,EAAE,GAAG+qB,EAAE,GAAGD,IAAI,KAAKC,EAAE,GAAG/qB,EAAE,GAAG8qB,IAAI;AACnD;AACA,SAASD,QAAQA,CAACv+C,CAAC,EAAEoM,KAAK,EAAEkI,GAAG,EAAE;EAC/B,OAAOtU,CAAC,KAAK,OAAO,GAAGoM,KAAK,GAAGpM,CAAC,KAAK,KAAK,GAAGsU,GAAG,GAAGtU,CAAC;AACtD;AACA,SAAS0+C,WAAWA,CAACz3B,IAAI,EAAErT,KAAK,EAAEzH,GAAG,EAAEkC,GAAG,EAAE;EAC1C,OAAO4Y,IAAI,GAAG,CAAC,GAAG/a,IAAI,CAACmC,GAAG,CAACnC,IAAI,CAACC,GAAG,CAACyH,KAAK,EAAEvF,GAAG,CAAC,EAAElC,GAAG,CAAC;AACvD;AACA,SAASwyC,gBAAgBA,CAACV,GAAG,EAAEW,IAAI,EAAEC,IAAI,EAAE;EACzC,MAAMjrC,KAAK,GAAGqqC,GAAG,CAAC9qC,OAAO,CAAC2X,WAAW;EACrC,MAAM7D,IAAI,GAAGk3B,kBAAkB,CAACF,GAAG,CAAC;EACpC,MAAMv8C,CAAC,GAAG+G,MAAM,CAACmL,KAAK,CAAC;EACvB,OAAO;IACLtS,CAAC,EAAEo9C,WAAW,CAACz3B,IAAI,CAACvS,GAAG,EAAEhT,CAAC,CAACgT,GAAG,EAAE,CAAC,EAAEmqC,IAAI,CAAC;IACxC3/C,CAAC,EAAEw/C,WAAW,CAACz3B,IAAI,CAACtS,KAAK,EAAEjT,CAAC,CAACiT,KAAK,EAAE,CAAC,EAAEiqC,IAAI,CAAC;IAC5Ch/C,CAAC,EAAE8+C,WAAW,CAACz3B,IAAI,CAACrS,MAAM,EAAElT,CAAC,CAACkT,MAAM,EAAE,CAAC,EAAEiqC,IAAI,CAAC;IAC9Cz+C,CAAC,EAAEs+C,WAAW,CAACz3B,IAAI,CAACpS,IAAI,EAAEnT,CAAC,CAACmT,IAAI,EAAE,CAAC,EAAE+pC,IAAI;EAC3C,CAAC;AACH;AACA,SAASE,iBAAiBA,CAACb,GAAG,EAAEW,IAAI,EAAEC,IAAI,EAAE;EAC1C,MAAMjrC,KAAK,GAAGqqC,GAAG,CAAC9qC,OAAO,CAAC4rC,YAAY;EACtC,MAAMr9C,CAAC,GAAGiH,aAAa,CAACiL,KAAK,CAAC;EAC9B,MAAMorC,IAAI,GAAG9yC,IAAI,CAACC,GAAG,CAACyyC,IAAI,EAAEC,IAAI,CAAC;EACjC,MAAM53B,IAAI,GAAGk3B,kBAAkB,CAACF,GAAG,CAAC;EACpC,OAAO;IACLgB,OAAO,EAAEP,WAAW,CAACz3B,IAAI,CAACvS,GAAG,IAAIuS,IAAI,CAACpS,IAAI,EAAEnT,CAAC,CAACu9C,OAAO,EAAE,CAAC,EAAED,IAAI,CAAC;IAC/DE,QAAQ,EAAER,WAAW,CAACz3B,IAAI,CAACvS,GAAG,IAAIuS,IAAI,CAACtS,KAAK,EAAEjT,CAAC,CAACw9C,QAAQ,EAAE,CAAC,EAAEF,IAAI,CAAC;IAClEG,UAAU,EAAET,WAAW,CAACz3B,IAAI,CAACrS,MAAM,IAAIqS,IAAI,CAACpS,IAAI,EAAEnT,CAAC,CAACy9C,UAAU,EAAE,CAAC,EAAEH,IAAI,CAAC;IACxEI,WAAW,EAAEV,WAAW,CAACz3B,IAAI,CAACrS,MAAM,IAAIqS,IAAI,CAACtS,KAAK,EAAEjT,CAAC,CAAC09C,WAAW,EAAE,CAAC,EAAEJ,IAAI;EAC5E,CAAC;AACH;AACA,SAASK,aAAaA,CAACpB,GAAG,EAAE;EAC1B,MAAMhhB,MAAM,GAAG+gB,YAAY,CAACC,GAAG,CAAC;EAChC,MAAMj5B,KAAK,GAAGiY,MAAM,CAACtoB,KAAK,GAAGsoB,MAAM,CAACpoB,IAAI;EACxC,MAAMkQ,MAAM,GAAGkY,MAAM,CAACroB,MAAM,GAAGqoB,MAAM,CAACvoB,GAAG;EACzC,MAAMyY,MAAM,GAAGwxB,gBAAgB,CAACV,GAAG,EAAEj5B,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC3D,MAAMmC,MAAM,GAAG43B,iBAAiB,CAACb,GAAG,EAAEj5B,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC5D,OAAO;IACLu6B,KAAK,EAAE;MACL98C,CAAC,EAAEy6B,MAAM,CAACpoB,IAAI;MACdnS,CAAC,EAAEu6B,MAAM,CAACvoB,GAAG;MACbpS,CAAC,EAAE0iB,KAAK;MACRtkB,CAAC,EAAEqkB,MAAM;MACTmC;IACF,CAAC;IACDizB,KAAK,EAAE;MACL33C,CAAC,EAAEy6B,MAAM,CAACpoB,IAAI,GAAGsY,MAAM,CAAC/sB,CAAC;MACzBsC,CAAC,EAAEu6B,MAAM,CAACvoB,GAAG,GAAGyY,MAAM,CAAC7rB,CAAC;MACxBgB,CAAC,EAAE0iB,KAAK,GAAGmI,MAAM,CAAC/sB,CAAC,GAAG+sB,MAAM,CAACjuB,CAAC;MAC9BwB,CAAC,EAAEqkB,MAAM,GAAGoI,MAAM,CAAC7rB,CAAC,GAAG6rB,MAAM,CAACvtB,CAAC;MAC/BsnB,MAAM,EAAE;QACN+3B,OAAO,EAAE/yC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE6Y,MAAM,CAAC+3B,OAAO,GAAG/yC,IAAI,CAACmC,GAAG,CAAC8e,MAAM,CAAC7rB,CAAC,EAAE6rB,MAAM,CAAC/sB,CAAC,CAAC,CAAC;QACnE8+C,QAAQ,EAAEhzC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE6Y,MAAM,CAACg4B,QAAQ,GAAGhzC,IAAI,CAACmC,GAAG,CAAC8e,MAAM,CAAC7rB,CAAC,EAAE6rB,MAAM,CAACjuB,CAAC,CAAC,CAAC;QACrEigD,UAAU,EAAEjzC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE6Y,MAAM,CAACi4B,UAAU,GAAGjzC,IAAI,CAACmC,GAAG,CAAC8e,MAAM,CAACvtB,CAAC,EAAEutB,MAAM,CAAC/sB,CAAC,CAAC,CAAC;QACzEg/C,WAAW,EAAElzC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE6Y,MAAM,CAACk4B,WAAW,GAAGlzC,IAAI,CAACmC,GAAG,CAAC8e,MAAM,CAACvtB,CAAC,EAAEutB,MAAM,CAACjuB,CAAC,CAAC;MAC5E;IACF;EACF,CAAC;AACH;AACA,SAASozB,OAAOA,CAAC2rB,GAAG,EAAEz7C,CAAC,EAAEE,CAAC,EAAEyvB,gBAAgB,EAAE;EAC5C,MAAMotB,KAAK,GAAG/8C,CAAC,KAAK,IAAI;EACxB,MAAMg9C,KAAK,GAAG98C,CAAC,KAAK,IAAI;EACxB,MAAM+8C,QAAQ,GAAGF,KAAK,IAAIC,KAAK;EAC/B,MAAMviB,MAAM,GAAGghB,GAAG,IAAI,CAACwB,QAAQ,IAAIzB,YAAY,CAACC,GAAG,EAAE9rB,gBAAgB,CAAC;EACtE,OAAO8K,MAAM,KACTsiB,KAAK,IAAI/8C,CAAC,IAAIy6B,MAAM,CAACpoB,IAAI,IAAIrS,CAAC,IAAIy6B,MAAM,CAACtoB,KAAK,CAAC,KAC/C6qC,KAAK,IAAI98C,CAAC,IAAIu6B,MAAM,CAACvoB,GAAG,IAAIhS,CAAC,IAAIu6B,MAAM,CAACroB,MAAM,CAAC;AACrD;AACA,SAAS8qC,SAASA,CAACx4B,MAAM,EAAE;EACzB,OAAOA,MAAM,CAAC+3B,OAAO,IAAI/3B,MAAM,CAACg4B,QAAQ,IAAIh4B,MAAM,CAACi4B,UAAU,IAAIj4B,MAAM,CAACk4B,WAAW;AACrF;AACA,SAASO,kBAAkBA,CAAC1mC,GAAG,EAAE2mC,IAAI,EAAE;EACrC,MAAM;IAACp9C,CAAC;IAAEE,CAAC;IAAEJ,CAAC;IAAE5B,CAAC;IAAEwmB;EAAM,CAAC,GAAG04B,IAAI;EACjC3mC,GAAG,CAACyR,GAAG,CAACloB,CAAC,GAAG0kB,MAAM,CAAC+3B,OAAO,EAAEv8C,CAAC,GAAGwkB,MAAM,CAAC+3B,OAAO,EAAE/3B,MAAM,CAAC+3B,OAAO,EAAE,CAAC98C,OAAO,EAAEE,EAAE,EAAE,IAAI,CAAC;EACnF4W,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,EAAEE,CAAC,GAAGhC,CAAC,GAAGwmB,MAAM,CAACi4B,UAAU,CAAC;EACxClmC,GAAG,CAACyR,GAAG,CAACloB,CAAC,GAAG0kB,MAAM,CAACi4B,UAAU,EAAEz8C,CAAC,GAAGhC,CAAC,GAAGwmB,MAAM,CAACi4B,UAAU,EAAEj4B,MAAM,CAACi4B,UAAU,EAAE98C,EAAE,EAAEF,OAAO,EAAE,IAAI,CAAC;EAC/F8W,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,GAAGF,CAAC,GAAG4kB,MAAM,CAACk4B,WAAW,EAAE18C,CAAC,GAAGhC,CAAC,CAAC;EAC7CuY,GAAG,CAACyR,GAAG,CAACloB,CAAC,GAAGF,CAAC,GAAG4kB,MAAM,CAACk4B,WAAW,EAAE18C,CAAC,GAAGhC,CAAC,GAAGwmB,MAAM,CAACk4B,WAAW,EAAEl4B,MAAM,CAACk4B,WAAW,EAAEj9C,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EACrG8W,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,GAAGF,CAAC,EAAEI,CAAC,GAAGwkB,MAAM,CAACg4B,QAAQ,CAAC;EACtCjmC,GAAG,CAACyR,GAAG,CAACloB,CAAC,GAAGF,CAAC,GAAG4kB,MAAM,CAACg4B,QAAQ,EAAEx8C,CAAC,GAAGwkB,MAAM,CAACg4B,QAAQ,EAAEh4B,MAAM,CAACg4B,QAAQ,EAAE,CAAC,EAAE,CAAC/8C,OAAO,EAAE,IAAI,CAAC;EACzF8W,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,GAAG0kB,MAAM,CAAC+3B,OAAO,EAAEv8C,CAAC,CAAC;AACnC;AACA,SAASm9C,iBAAiBA,CAAC5mC,GAAG,EAAE2mC,IAAI,EAAE;EACpC3mC,GAAG,CAAC2mC,IAAI,CAACA,IAAI,CAACp9C,CAAC,EAAEo9C,IAAI,CAACl9C,CAAC,EAAEk9C,IAAI,CAACt9C,CAAC,EAAEs9C,IAAI,CAACl/C,CAAC,CAAC;AAC1C;AACA,MAAMo/C,UAAU,SAASjkB,OAAO,CAAC;EAC/B9wB,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0D,OAAO,GAAG9H,SAAS;IACxB,IAAI,CAACgZ,UAAU,GAAGhZ,SAAS;IAC3B,IAAI,CAAC8Y,IAAI,GAAG9Y,SAAS;IACrB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAIoE,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACAzC,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM9F,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM;MAACgnC,KAAK;MAAEmF;IAAK,CAAC,GAAGD,aAAa,CAAC,IAAI,CAAC;IAC1C,MAAMU,WAAW,GAAGL,SAAS,CAACJ,KAAK,CAACp4B,MAAM,CAAC,GAAGy4B,kBAAkB,GAAGE,iBAAiB;IACpF5mC,GAAG,CAACqxB,IAAI,CAAC,CAAC;IACV,IAAIgV,KAAK,CAACh9C,CAAC,KAAK63C,KAAK,CAAC73C,CAAC,IAAIg9C,KAAK,CAAC5+C,CAAC,KAAKy5C,KAAK,CAACz5C,CAAC,EAAE;MAC9CuY,GAAG,CAAC+xB,SAAS,CAAC,CAAC;MACf+U,WAAW,CAAC9mC,GAAG,EAAEqmC,KAAK,CAAC;MACvBrmC,GAAG,CAACoF,IAAI,CAAC,CAAC;MACV0hC,WAAW,CAAC9mC,GAAG,EAAEkhC,KAAK,CAAC;MACvBlhC,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACyY,WAAW;MACnC3S,GAAG,CAACsW,IAAI,CAAC,SAAS,CAAC;IACrB;IACAtW,GAAG,CAAC+xB,SAAS,CAAC,CAAC;IACf+U,WAAW,CAAC9mC,GAAG,EAAEkhC,KAAK,CAAC;IACvBlhC,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACuY,eAAe;IACvCzS,GAAG,CAACsW,IAAI,CAAC,CAAC;IACVtW,GAAG,CAACuxB,OAAO,CAAC,CAAC;EACf;EACAlY,OAAOA,CAACorB,MAAM,EAAEC,MAAM,EAAExrB,gBAAgB,EAAE;IACxC,OAAOG,OAAO,CAAC,IAAI,EAAEorB,MAAM,EAAEC,MAAM,EAAExrB,gBAAgB,CAAC;EACxD;EACAyrB,QAAQA,CAACF,MAAM,EAAEvrB,gBAAgB,EAAE;IACjC,OAAOG,OAAO,CAAC,IAAI,EAAEorB,MAAM,EAAE,IAAI,EAAEvrB,gBAAgB,CAAC;EACtD;EACA0rB,QAAQA,CAACF,MAAM,EAAExrB,gBAAgB,EAAE;IACjC,OAAOG,OAAO,CAAC,IAAI,EAAE,IAAI,EAAEqrB,MAAM,EAAExrB,gBAAgB,CAAC;EACtD;EACAO,cAAcA,CAACP,gBAAgB,EAAE;IAC/B,MAAM;MAAC3vB,CAAC;MAAEE,CAAC;MAAEyhB,IAAI;MAAEE;IAAU,CAAC,GAAG,IAAI,CAAC0X,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE5J,gBAAgB,CAAC;IAClG,OAAO;MACL3vB,CAAC,EAAE6hB,UAAU,GAAG,CAAC7hB,CAAC,GAAG2hB,IAAI,IAAI,CAAC,GAAG3hB,CAAC;MAClCE,CAAC,EAAE2hB,UAAU,GAAG3hB,CAAC,GAAG,CAACA,CAAC,GAAGyhB,IAAI,IAAI;IACnC,CAAC;EACH;EACAmN,QAAQA,CAAC5Z,IAAI,EAAE;IACb,OAAOA,IAAI,KAAK,GAAG,GAAG,IAAI,CAACsN,KAAK,GAAG,CAAC,GAAG,IAAI,CAACD,MAAM,GAAG,CAAC;EACxD;AACF;AACA+6B,UAAU,CAACxpC,EAAE,GAAG,KAAK;AACrBwpC,UAAU,CAAC//C,QAAQ,GAAG;EACpBq+C,aAAa,EAAE,OAAO;EACtBtzB,WAAW,EAAE,CAAC;EACdi0B,YAAY,EAAE,CAAC;EACfhB,UAAU,EAAE1yC;AACd,CAAC;AACDy0C,UAAU,CAAC3jB,aAAa,GAAG;EACzBzQ,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,IAAItN,QAAQ,GAAG,aAAa7M,MAAM,CAAC8N,MAAM,CAAC;EAC1CmQ,SAAS,EAAE,IAAI;EACf2qB,UAAU,EAAEA,UAAU;EACtBuC,WAAW,EAAEA,WAAW;EACxBa,YAAY,EAAEA,YAAY;EAC1BqC,UAAU,EAAEA;AACZ,CAAC,CAAC;AAEF,SAASE,cAAcA,CAACnqC,IAAI,EAAEse,cAAc,EAAEhhB,OAAO,EAAE;EACrD,MAAM8sC,OAAO,GAAG9sC,OAAO,CAAC8sC,OAAO,IAAI9rB,cAAc;EACjD,MAAM+rB,SAAS,GAAG,EAAE;EACpB,MAAMC,WAAW,GAAG,CAACtqC,IAAI,CAAC9I,MAAM,GAAG,CAAC,KAAKkzC,OAAO,GAAG,CAAC,CAAC;EACrD,IAAIG,YAAY,GAAG,CAAC;EACpB,IAAIhhD,CAAC,GAAG,CAAC;EACT,IAAIM,CAAC,EAAE2gD,YAAY,EAAEC,OAAO,EAAE/hC,IAAI,EAAEgiC,KAAK;EACzCL,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGvqC,IAAI,CAACzW,CAAC,CAAC;EACnC,KAAKM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGugD,OAAO,GAAG,CAAC,EAAEvgD,CAAC,EAAE,EAAE;IAChC,IAAIi8C,IAAI,GAAG,CAAC;IACZ,IAAI6E,IAAI,GAAG,CAAC;IACZ,IAAI1/C,CAAC;IACL,MAAM2/C,aAAa,GAAGv0C,IAAI,CAACgE,KAAK,CAAC,CAACxQ,CAAC,GAAG,CAAC,IAAIygD,WAAW,CAAC,GAAG,CAAC;IAC3D,MAAMO,WAAW,GAAGx0C,IAAI,CAACC,GAAG,CAACD,IAAI,CAACgE,KAAK,CAAC,CAACxQ,CAAC,GAAG,CAAC,IAAIygD,WAAW,CAAC,GAAG,CAAC,EAAEtqC,IAAI,CAAC9I,MAAM,CAAC;IAChF,MAAM4zC,cAAc,GAAGD,WAAW,GAAGD,aAAa;IAClD,KAAK3/C,CAAC,GAAG2/C,aAAa,EAAE3/C,CAAC,GAAG4/C,WAAW,EAAE5/C,CAAC,EAAE,EAAE;MAC5C66C,IAAI,GAAG9lC,IAAI,CAAC/U,CAAC,CAAC,CAAC0B,CAAC;MAChBg+C,IAAI,GAAG3qC,IAAI,CAAC/U,CAAC,CAAC,CAAC4B,CAAC;IAClB;IACAi5C,IAAI,IAAIgF,cAAc;IACtBH,IAAI,IAAIG,cAAc;IACtB,MAAMC,SAAS,GAAG10C,IAAI,CAACgE,KAAK,CAACxQ,CAAC,GAAGygD,WAAW,CAAC,GAAG,CAAC;IACjD,MAAMU,OAAO,GAAG30C,IAAI,CAACgE,KAAK,CAAC,CAACxQ,CAAC,GAAG,CAAC,IAAIygD,WAAW,CAAC,GAAG,CAAC;IACrD,MAAM;MAAC39C,CAAC,EAAEs+C,OAAO;MAAEp+C,CAAC,EAAEq+C;IAAO,CAAC,GAAGlrC,IAAI,CAACzW,CAAC,CAAC;IACxCkhD,OAAO,GAAG/hC,IAAI,GAAG,CAAC,CAAC;IACnB,KAAKzd,CAAC,GAAG8/C,SAAS,EAAE9/C,CAAC,GAAG+/C,OAAO,EAAE//C,CAAC,EAAE,EAAE;MACpCyd,IAAI,GAAG,GAAG,GAAGrS,IAAI,CAACgW,GAAG,CACnB,CAAC4+B,OAAO,GAAGnF,IAAI,KAAK9lC,IAAI,CAAC/U,CAAC,CAAC,CAAC4B,CAAC,GAAGq+C,OAAO,CAAC,GACxC,CAACD,OAAO,GAAGjrC,IAAI,CAAC/U,CAAC,CAAC,CAAC0B,CAAC,KAAKg+C,IAAI,GAAGO,OAAO,CACzC,CAAC;MACD,IAAIxiC,IAAI,GAAG+hC,OAAO,EAAE;QAClBA,OAAO,GAAG/hC,IAAI;QACd8hC,YAAY,GAAGxqC,IAAI,CAAC/U,CAAC,CAAC;QACtBy/C,KAAK,GAAGz/C,CAAC;MACX;IACF;IACAo/C,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGC,YAAY;IACxCjhD,CAAC,GAAGmhD,KAAK;EACX;EACAL,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGvqC,IAAI,CAACA,IAAI,CAAC9I,MAAM,GAAG,CAAC,CAAC;EACjD,OAAOmzC,SAAS;AAClB;AACA,SAASc,gBAAgBA,CAACnrC,IAAI,EAAEse,cAAc,EAAE;EAC9C,IAAIwnB,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIl8C,CAAC,EAAEqnB,KAAK,EAAEvkB,CAAC,EAAEE,CAAC,EAAEm5C,KAAK,EAAEoF,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEv4B,IAAI,EAAEF,IAAI;EACrE,MAAMw3B,SAAS,GAAG,EAAE;EACpB,MAAMkB,IAAI,GAAGvrC,IAAI,CAAC,CAAC,CAAC,CAACrT,CAAC;EACtB,MAAM6+C,IAAI,GAAGxrC,IAAI,CAACA,IAAI,CAAC9I,MAAM,GAAG,CAAC,CAAC,CAACvK,CAAC;EACpC,MAAM8+C,EAAE,GAAGD,IAAI,GAAGD,IAAI;EACtB,KAAK1hD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmW,IAAI,CAAC9I,MAAM,EAAE,EAAErN,CAAC,EAAE;IAChCqnB,KAAK,GAAGlR,IAAI,CAACnW,CAAC,CAAC;IACf8C,CAAC,GAAG,CAACukB,KAAK,CAACvkB,CAAC,GAAG4+C,IAAI,IAAIE,EAAE,GAAGntB,cAAc;IAC1CzxB,CAAC,GAAGqkB,KAAK,CAACrkB,CAAC;IACX,MAAMu5C,MAAM,GAAGz5C,CAAC,GAAG,CAAC;IACpB,IAAIy5C,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAIn5C,CAAC,GAAGkmB,IAAI,EAAE;QACZA,IAAI,GAAGlmB,CAAC;QACRu+C,QAAQ,GAAGvhD,CAAC;MACd,CAAC,MAAM,IAAIgD,CAAC,GAAGgmB,IAAI,EAAE;QACnBA,IAAI,GAAGhmB,CAAC;QACRw+C,QAAQ,GAAGxhD,CAAC;MACd;MACAi8C,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAG50B,KAAK,CAACvkB,CAAC,IAAI,EAAEo5C,MAAM;IAC7C,CAAC,MAAM;MACL,MAAM2F,SAAS,GAAG7hD,CAAC,GAAG,CAAC;MACvB,IAAI,CAACqB,aAAa,CAACkgD,QAAQ,CAAC,IAAI,CAAClgD,aAAa,CAACmgD,QAAQ,CAAC,EAAE;QACxD,MAAMM,kBAAkB,GAAGt1C,IAAI,CAACC,GAAG,CAAC80C,QAAQ,EAAEC,QAAQ,CAAC;QACvD,MAAMO,kBAAkB,GAAGv1C,IAAI,CAACmC,GAAG,CAAC4yC,QAAQ,EAAEC,QAAQ,CAAC;QACvD,IAAIM,kBAAkB,KAAKL,UAAU,IAAIK,kBAAkB,KAAKD,SAAS,EAAE;UACzErB,SAAS,CAACnyC,IAAI,CAAC;YACb,GAAG8H,IAAI,CAAC2rC,kBAAkB,CAAC;YAC3Bh/C,CAAC,EAAEm5C;UACL,CAAC,CAAC;QACJ;QACA,IAAI8F,kBAAkB,KAAKN,UAAU,IAAIM,kBAAkB,KAAKF,SAAS,EAAE;UACzErB,SAAS,CAACnyC,IAAI,CAAC;YACb,GAAG8H,IAAI,CAAC4rC,kBAAkB,CAAC;YAC3Bj/C,CAAC,EAAEm5C;UACL,CAAC,CAAC;QACJ;MACF;MACA,IAAIj8C,CAAC,GAAG,CAAC,IAAI6hD,SAAS,KAAKJ,UAAU,EAAE;QACrCjB,SAAS,CAACnyC,IAAI,CAAC8H,IAAI,CAAC0rC,SAAS,CAAC,CAAC;MACjC;MACArB,SAAS,CAACnyC,IAAI,CAACgZ,KAAK,CAAC;MACrB80B,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACVhzB,IAAI,GAAGF,IAAI,GAAGhmB,CAAC;MACfu+C,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAGzhD,CAAC;IACtC;EACF;EACA,OAAOwgD,SAAS;AAClB;AACA,IAAIwB,iBAAiB,GAAG;EACtBprC,EAAE,EAAE,YAAY;EAChBvW,QAAQ,EAAE;IACR4hD,SAAS,EAAE,SAAS;IACpB7iB,OAAO,EAAE;EACX,CAAC;EACD8iB,oBAAoB,EAAEA,CAACr2C,KAAK,EAAE6vB,IAAI,EAAEjoB,OAAO,KAAK;IAC9C,IAAI,CAACA,OAAO,CAAC2rB,OAAO,EAAE;MACpB;IACF;IACA,MAAM3K,cAAc,GAAG5oB,KAAK,CAACyZ,KAAK;IAClCzZ,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAAClP,OAAO,CAAC,CAACqM,OAAO,EAAE1C,YAAY,KAAK;MACrD,MAAM;QAAC4D,KAAK;QAAEoB;MAAS,CAAC,GAAGtC,OAAO;MAClC,MAAMnC,IAAI,GAAG1K,KAAK,CAAC2P,cAAc,CAACxF,YAAY,CAAC;MAC/C,MAAMG,IAAI,GAAGyD,KAAK,IAAIlB,OAAO,CAACvC,IAAI;MAClC,IAAIxW,OAAO,CAAC,CAACqb,SAAS,EAAEnP,KAAK,CAAC4H,OAAO,CAACuH,SAAS,CAAC,CAAC,KAAK,GAAG,EAAE;QACzD;MACF;MACA,IAAIzE,IAAI,CAACvK,IAAI,KAAK,MAAM,EAAE;QACxB;MACF;MACA,MAAMm2C,KAAK,GAAGt2C,KAAK,CAACuM,MAAM,CAAC7B,IAAI,CAACoE,OAAO,CAAC;MACxC,IAAIwnC,KAAK,CAACn2C,IAAI,KAAK,QAAQ,IAAIm2C,KAAK,CAACn2C,IAAI,KAAK,MAAM,EAAE;QACpD;MACF;MACA,IAAIH,KAAK,CAAC4H,OAAO,CAACiJ,OAAO,EAAE;QACzB;MACF;MACA,IAAIvG,IAAI,CAAC9I,MAAM,IAAI,CAAC,GAAGonB,cAAc,EAAE;QACrC;MACF;MACA,IAAIpzB,aAAa,CAACuY,KAAK,CAAC,EAAE;QACxBlB,OAAO,CAACkB,KAAK,GAAGzD,IAAI;QACpB,OAAOuC,OAAO,CAACvC,IAAI;QACnBpE,MAAM,CAACqwC,cAAc,CAAC1pC,OAAO,EAAE,MAAM,EAAE;UACrC2pC,YAAY,EAAE,IAAI;UAClBtI,UAAU,EAAE,IAAI;UAChBjsC,GAAG,EAAE,SAAAA,CAAA,EAAW;YACd,OAAO,IAAI,CAACof,UAAU;UACxB,CAAC;UACDjf,GAAG,EAAE,SAAAA,CAAS7N,CAAC,EAAE;YACf,IAAI,CAACwZ,KAAK,GAAGxZ,CAAC;UAChB;QACF,CAAC,CAAC;MACJ;MACA,IAAIogD,SAAS;MACb,QAAQ/sC,OAAO,CAACwuC,SAAS;QACzB,KAAK,MAAM;UACTzB,SAAS,GAAGF,cAAc,CAACnqC,IAAI,EAAEse,cAAc,EAAEhhB,OAAO,CAAC;UACzD;QACF,KAAK,SAAS;UACZ+sC,SAAS,GAAGc,gBAAgB,CAACnrC,IAAI,EAAEse,cAAc,CAAC;UAClD;QACF;UACE,MAAM,IAAIvE,KAAK,CAAC,qCAAqCzc,OAAO,CAACwuC,SAAS,GAAG,CAAC;MAC5E;MACAvpC,OAAO,CAACwU,UAAU,GAAGszB,SAAS;IAChC,CAAC,CAAC;EACJ,CAAC;EACDjI,OAAOA,CAAC1sC,KAAK,EAAE;IACbA,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAAClP,OAAO,CAAEqM,OAAO,IAAK;MACvC,IAAIA,OAAO,CAACwU,UAAU,EAAE;QACtB,MAAM/W,IAAI,GAAGuC,OAAO,CAACkB,KAAK;QAC1B,OAAOlB,OAAO,CAACwU,UAAU;QACzB,OAAOxU,OAAO,CAACkB,KAAK;QACpB7H,MAAM,CAACqwC,cAAc,CAAC1pC,OAAO,EAAE,MAAM,EAAE;UAACxE,KAAK,EAAEiC;QAAI,CAAC,CAAC;MACvD;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAED,SAASmsC,cAAcA,CAACz2C,KAAK,EAAE6J,KAAK,EAAE;EACpC,MAAMa,IAAI,GAAG1K,KAAK,CAAC2P,cAAc,CAAC9F,KAAK,CAAC;EACxC,MAAM/C,OAAO,GAAG4D,IAAI,IAAI1K,KAAK,CAAC4d,gBAAgB,CAAC/T,KAAK,CAAC;EACrD,OAAO/C,OAAO,GAAG4D,IAAI,CAACmC,OAAO,GAAG,IAAI;AACtC;AACA,SAAS6pC,eAAeA,CAAC11B,IAAI,EAAE;EAC7B,MAAMpZ,OAAO,GAAGoZ,IAAI,CAACpZ,OAAO;EAC5B,MAAM+uC,UAAU,GAAG/uC,OAAO,CAACoc,IAAI;EAC/B,IAAIA,IAAI,GAAGtvB,cAAc,CAACiiD,UAAU,IAAIA,UAAU,CAACxyC,MAAM,EAAEwyC,UAAU,CAAC;EACtE,IAAI3yB,IAAI,KAAKlkB,SAAS,EAAE;IACtBkkB,IAAI,GAAG,CAAC,CAACpc,OAAO,CAACuY,eAAe;EAClC;EACA,IAAI6D,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,IAAI,EAAE;IACnC,OAAO,KAAK;EACd;EACA,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,QAAQ;EACjB;EACA,OAAOA,IAAI;AACb;AACA,SAAS4yB,UAAUA,CAAC51B,IAAI,EAAEnX,KAAK,EAAEkH,KAAK,EAAE;EACtC,MAAMiT,IAAI,GAAG0yB,eAAe,CAAC11B,IAAI,CAAC;EAClC,IAAI5sB,QAAQ,CAAC4vB,IAAI,CAAC,EAAE;IAClB,OAAOnK,KAAK,CAACmK,IAAI,CAAC3b,KAAK,CAAC,GAAG,KAAK,GAAG2b,IAAI;EACzC;EACA,IAAI7f,MAAM,GAAG0yC,UAAU,CAAC7yB,IAAI,CAAC;EAC7B,IAAI9uB,cAAc,CAACiP,MAAM,CAAC,IAAIxD,IAAI,CAACgE,KAAK,CAACR,MAAM,CAAC,KAAKA,MAAM,EAAE;IAC3D,IAAI6f,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACtC7f,MAAM,GAAG0F,KAAK,GAAG1F,MAAM;IACzB;IACA,IAAIA,MAAM,KAAK0F,KAAK,IAAI1F,MAAM,GAAG,CAAC,IAAIA,MAAM,IAAI4M,KAAK,EAAE;MACrD,OAAO,KAAK;IACd;IACA,OAAO5M,MAAM;EACf;EACA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC2V,OAAO,CAACkK,IAAI,CAAC,IAAI,CAAC,IAAIA,IAAI;AACvE;AACA,SAAS8yB,qBAAqBA,CAAC9d,MAAM,EAAE;EACrC,MAAM;IAACrwB,KAAK,GAAG,CAAC,CAAC;IAAEqb;EAAI,CAAC,GAAGgV,MAAM;EACjC,IAAI70B,MAAM,GAAG,IAAI;EACjB,IAAI2U,UAAU;EACd,IAAIkL,IAAI,KAAK,OAAO,EAAE;IACpB7f,MAAM,GAAGwE,KAAK,CAACU,MAAM;EACvB,CAAC,MAAM,IAAI2a,IAAI,KAAK,KAAK,EAAE;IACzB7f,MAAM,GAAGwE,KAAK,CAACQ,GAAG;EACpB,CAAC,MAAM,IAAI/U,QAAQ,CAAC4vB,IAAI,CAAC,EAAE;IACzB7f,MAAM,GAAGwE,KAAK,CAACiO,gBAAgB,CAACoN,IAAI,CAAC3b,KAAK,CAAC;EAC7C,CAAC,MAAM,IAAIM,KAAK,CAACkQ,YAAY,EAAE;IAC7B1U,MAAM,GAAGwE,KAAK,CAACkQ,YAAY,CAAC,CAAC;EAC/B;EACA,IAAI3jB,cAAc,CAACiP,MAAM,CAAC,EAAE;IAC1B2U,UAAU,GAAGnQ,KAAK,CAACoQ,YAAY,CAAC,CAAC;IACjC,OAAO;MACL9hB,CAAC,EAAE6hB,UAAU,GAAG3U,MAAM,GAAG,IAAI;MAC7BhN,CAAC,EAAE2hB,UAAU,GAAG,IAAI,GAAG3U;IACzB,CAAC;EACH;EACA,OAAO,IAAI;AACb;AACA,MAAM4yC,SAAS,CAAC;EACdv3C,WAAWA,CAACqJ,IAAI,EAAE;IAChB,IAAI,CAAC5R,CAAC,GAAG4R,IAAI,CAAC5R,CAAC;IACf,IAAI,CAACE,CAAC,GAAG0R,IAAI,CAAC1R,CAAC;IACf,IAAI,CAACwkB,MAAM,GAAG9S,IAAI,CAAC8S,MAAM;EAC3B;EACAs0B,WAAWA,CAACviC,GAAG,EAAEgkB,MAAM,EAAE7oB,IAAI,EAAE;IAC7B,MAAM;MAAC5R,CAAC;MAAEE,CAAC;MAAEwkB;IAAM,CAAC,GAAG,IAAI;IAC3B+V,MAAM,GAAGA,MAAM,IAAI;MAAC7wB,KAAK,EAAE,CAAC;MAAEkI,GAAG,EAAEzS;IAAG,CAAC;IACvCoX,GAAG,CAACyR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEwkB,MAAM,EAAE+V,MAAM,CAAC3oB,GAAG,EAAE2oB,MAAM,CAAC7wB,KAAK,EAAE,IAAI,CAAC;IACrD,OAAO,CAACgI,IAAI,CAAC6oB,MAAM;EACrB;EACAggB,WAAWA,CAACl2B,KAAK,EAAE;IACjB,MAAM;MAACvkB,CAAC;MAAEE,CAAC;MAAEwkB;IAAM,CAAC,GAAG,IAAI;IAC3B,MAAMqB,KAAK,GAAGxB,KAAK,CAACwB,KAAK;IACzB,OAAO;MACL/lB,CAAC,EAAEA,CAAC,GAAG0J,IAAI,CAAC+b,GAAG,CAACM,KAAK,CAAC,GAAGrB,MAAM;MAC/BxkB,CAAC,EAAEA,CAAC,GAAGwJ,IAAI,CAACic,GAAG,CAACI,KAAK,CAAC,GAAGrB,MAAM;MAC/BqB;IACF,CAAC;EACH;AACF;AACA,SAASg6B,uBAAuBA,CAAChe,MAAM,EAAE;EACvC,MAAM;IAACrwB,KAAK;IAAEqb;EAAI,CAAC,GAAGgV,MAAM;EAC5B,MAAMpxB,OAAO,GAAGe,KAAK,CAACf,OAAO;EAC7B,MAAMpG,MAAM,GAAGmH,KAAK,CAAC6I,SAAS,CAAC,CAAC,CAAChQ,MAAM;EACvC,MAAM2C,MAAM,GAAG,EAAE;EACjB,MAAMtD,KAAK,GAAG+G,OAAO,CAACkB,OAAO,GAAGH,KAAK,CAAC7F,GAAG,GAAG6F,KAAK,CAAC/H,GAAG;EACrD,MAAMmI,GAAG,GAAGnB,OAAO,CAACkB,OAAO,GAAGH,KAAK,CAAC/H,GAAG,GAAG+H,KAAK,CAAC7F,GAAG;EACnD,IAAI3O,CAAC,EAAEolB,MAAM,EAAElR,KAAK;EACpB,IAAI2b,IAAI,KAAK,OAAO,EAAE;IACpB3b,KAAK,GAAGxH,KAAK;EACf,CAAC,MAAM,IAAImjB,IAAI,KAAK,KAAK,EAAE;IACzB3b,KAAK,GAAGU,GAAG;EACb,CAAC,MAAM,IAAI3U,QAAQ,CAAC4vB,IAAI,CAAC,EAAE;IACzB3b,KAAK,GAAG2b,IAAI,CAAC3b,KAAK;EACpB,CAAC,MAAM;IACLA,KAAK,GAAGM,KAAK,CAAC4zB,YAAY,CAAC,CAAC;EAC9B;EACA,IAAI30B,OAAO,CAACuT,IAAI,CAACsI,QAAQ,EAAE;IACzBlK,MAAM,GAAG5Q,KAAK,CAACob,wBAAwB,CAAC,CAAC,EAAEljB,KAAK,CAAC;IACjD,OAAO,IAAIk2C,SAAS,CAAC;MACnB9/C,CAAC,EAAEsiB,MAAM,CAACtiB,CAAC;MACXE,CAAC,EAAEoiB,MAAM,CAACpiB,CAAC;MACXwkB,MAAM,EAAEhT,KAAK,CAAC2a,6BAA6B,CAACjb,KAAK;IACnD,CAAC,CAAC;EACJ;EACA,KAAKlU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqN,MAAM,EAAE,EAAErN,CAAC,EAAE;IAC3BgQ,MAAM,CAAC3B,IAAI,CAACmG,KAAK,CAACob,wBAAwB,CAAC5vB,CAAC,EAAEkU,KAAK,CAAC,CAAC;EACvD;EACA,OAAOlE,MAAM;AACf;AACA,SAAS8yC,eAAeA,CAACje,MAAM,EAAE;EAC/B,MAAMrwB,KAAK,GAAGqwB,MAAM,CAACrwB,KAAK,IAAI,CAAC,CAAC;EAChC,IAAIA,KAAK,CAACob,wBAAwB,EAAE;IAClC,OAAOizB,uBAAuB,CAAChe,MAAM,CAAC;EACxC;EACA,OAAO8d,qBAAqB,CAAC9d,MAAM,CAAC;AACtC;AACA,SAASke,kBAAkBA,CAACC,QAAQ,EAAEn2B,IAAI,EAAE;EAC1C,MAAM;IAAC/pB,CAAC,GAAG,IAAI;IAAEE,CAAC,GAAG;EAAI,CAAC,GAAGggD,QAAQ,IAAI,CAAC,CAAC;EAC3C,MAAMC,UAAU,GAAGp2B,IAAI,CAACzF,MAAM;EAC9B,MAAMA,MAAM,GAAG,EAAE;EACjByF,IAAI,CAACywB,QAAQ,CAACjxC,OAAO,CAAEwvC,OAAO,IAAK;IACjC,MAAMtc,KAAK,GAAG0jB,UAAU,CAACpH,OAAO,CAACnvC,KAAK,CAAC;IACvC,MAAM8Y,IAAI,GAAGy9B,UAAU,CAACpH,OAAO,CAACjnC,GAAG,CAAC;IACpC,IAAI5R,CAAC,KAAK,IAAI,EAAE;MACdokB,MAAM,CAAC/Y,IAAI,CAAC;QAACvL,CAAC,EAAEy8B,KAAK,CAACz8B,CAAC;QAAEE;MAAC,CAAC,CAAC;MAC5BokB,MAAM,CAAC/Y,IAAI,CAAC;QAACvL,CAAC,EAAE0iB,IAAI,CAAC1iB,CAAC;QAAEE;MAAC,CAAC,CAAC;IAC7B,CAAC,MAAM,IAAIF,CAAC,KAAK,IAAI,EAAE;MACrBskB,MAAM,CAAC/Y,IAAI,CAAC;QAACvL,CAAC;QAAEE,CAAC,EAAEu8B,KAAK,CAACv8B;MAAC,CAAC,CAAC;MAC5BokB,MAAM,CAAC/Y,IAAI,CAAC;QAACvL,CAAC;QAAEE,CAAC,EAAEwiB,IAAI,CAACxiB;MAAC,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAOokB,MAAM;AACf;AACA,SAAS87B,cAAcA,CAACre,MAAM,EAAE;EAC9B,MAAM;IAACh5B,KAAK;IAAE2I,KAAK;IAAEkB,KAAK;IAAEmX;EAAI,CAAC,GAAGgY,MAAM;EAC1C,MAAMzd,MAAM,GAAG,EAAE;EACjB,MAAMk2B,QAAQ,GAAGzwB,IAAI,CAACywB,QAAQ;EAC9B,MAAM6F,YAAY,GAAGt2B,IAAI,CAACzF,MAAM;EAChC,MAAMg8B,UAAU,GAAGC,aAAa,CAACx3C,KAAK,EAAE6J,KAAK,CAAC;EAC9C0tC,UAAU,CAAC/0C,IAAI,CAACi1C,kBAAkB,CAAC;IAACxgD,CAAC,EAAE,IAAI;IAAEE,CAAC,EAAEwR,KAAK,CAACU;EAAM,CAAC,EAAE2X,IAAI,CAAC,CAAC;EACrE,KAAK,IAAI7sB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs9C,QAAQ,CAACjwC,MAAM,EAAErN,CAAC,EAAE,EAAE;IACxC,MAAM67C,OAAO,GAAGyB,QAAQ,CAACt9C,CAAC,CAAC;IAC3B,KAAK,IAAIoB,CAAC,GAAGy6C,OAAO,CAACnvC,KAAK,EAAEtL,CAAC,IAAIy6C,OAAO,CAACjnC,GAAG,EAAExT,CAAC,EAAE,EAAE;MACjDmiD,cAAc,CAACn8B,MAAM,EAAE+7B,YAAY,CAAC/hD,CAAC,CAAC,EAAEgiD,UAAU,CAAC;IACrD;EACF;EACA,OAAO,IAAIlG,WAAW,CAAC;IAAC91B,MAAM;IAAE3T,OAAO,EAAE,CAAC;EAAC,CAAC,CAAC;AAC/C;AACA,MAAM+vC,2BAA2B,GAAIjtC,IAAI,IAAKA,IAAI,CAACvK,IAAI,KAAK,MAAM,IAAI,CAACuK,IAAI,CAAC6V,MAAM;AAClF,SAASi3B,aAAaA,CAACx3C,KAAK,EAAE6J,KAAK,EAAE;EACnC,MAAM+tC,KAAK,GAAG,EAAE;EAChB,MAAMzhC,KAAK,GAAGnW,KAAK,CAACulB,4BAA4B,CAAC,CAAC;EAClD,KAAK,IAAIpxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgiB,KAAK,CAAC3U,MAAM,EAAErN,CAAC,EAAE,EAAE;IACrC,MAAMuW,IAAI,GAAGyL,KAAK,CAAChiB,CAAC,CAAC;IACrB,IAAIuW,IAAI,CAACb,KAAK,KAAKA,KAAK,EAAE;MACxB;IACF;IACA,IAAI8tC,2BAA2B,CAACjtC,IAAI,CAAC,EAAE;MACrCktC,KAAK,CAACC,OAAO,CAACntC,IAAI,CAACmC,OAAO,CAAC;IAC7B;EACF;EACA,OAAO+qC,KAAK;AACd;AACA,SAASF,cAAcA,CAACn8B,MAAM,EAAEu8B,WAAW,EAAEP,UAAU,EAAE;EACvD,MAAMQ,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIxiD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgiD,UAAU,CAAC/1C,MAAM,EAAEjM,CAAC,EAAE,EAAE;IAC1C,MAAMyrB,IAAI,GAAGu2B,UAAU,CAAChiD,CAAC,CAAC;IAC1B,MAAM;MAACm+B,KAAK;MAAE/Z,IAAI;MAAE6B;IAAK,CAAC,GAAGw8B,SAAS,CAACh3B,IAAI,EAAE82B,WAAW,EAAE,GAAG,CAAC;IAC9D,IAAI,CAACt8B,KAAK,IAAKkY,KAAK,IAAI/Z,IAAK,EAAE;MAC7B;IACF;IACA,IAAI+Z,KAAK,EAAE;MACTqkB,SAAS,CAACF,OAAO,CAACr8B,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLD,MAAM,CAAC/Y,IAAI,CAACgZ,KAAK,CAAC;MAClB,IAAI,CAAC7B,IAAI,EAAE;QACT;MACF;IACF;EACF;EACA4B,MAAM,CAAC/Y,IAAI,CAAC,GAAGu1C,SAAS,CAAC;AAC3B;AACA,SAASC,SAASA,CAACh3B,IAAI,EAAE82B,WAAW,EAAE5W,QAAQ,EAAE;EAC9C,MAAM1lB,KAAK,GAAGwF,IAAI,CAAC0wB,WAAW,CAACoG,WAAW,EAAE5W,QAAQ,CAAC;EACrD,IAAI,CAAC1lB,KAAK,EAAE;IACV,OAAO,CAAC,CAAC;EACX;EACA,MAAMy8B,UAAU,GAAGz8B,KAAK,CAAC0lB,QAAQ,CAAC;EAClC,MAAMuQ,QAAQ,GAAGzwB,IAAI,CAACywB,QAAQ;EAC9B,MAAM2F,UAAU,GAAGp2B,IAAI,CAACzF,MAAM;EAC9B,IAAImY,KAAK,GAAG,KAAK;EACjB,IAAI/Z,IAAI,GAAG,KAAK;EAChB,KAAK,IAAIxlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs9C,QAAQ,CAACjwC,MAAM,EAAErN,CAAC,EAAE,EAAE;IACxC,MAAM67C,OAAO,GAAGyB,QAAQ,CAACt9C,CAAC,CAAC;IAC3B,MAAM+jD,UAAU,GAAGd,UAAU,CAACpH,OAAO,CAACnvC,KAAK,CAAC,CAACqgC,QAAQ,CAAC;IACtD,MAAMiX,SAAS,GAAGf,UAAU,CAACpH,OAAO,CAACjnC,GAAG,CAAC,CAACm4B,QAAQ,CAAC;IACnD,IAAI+W,UAAU,IAAIC,UAAU,IAAID,UAAU,IAAIE,SAAS,EAAE;MACvDzkB,KAAK,GAAGukB,UAAU,KAAKC,UAAU;MACjCv+B,IAAI,GAAGs+B,UAAU,KAAKE,SAAS;MAC/B;IACF;EACF;EACA,OAAO;IAACzkB,KAAK;IAAE/Z,IAAI;IAAE6B;EAAK,CAAC;AAC7B;AACA,SAAS48B,SAASA,CAACpf,MAAM,EAAE;EACzB,MAAM;IAACh5B,KAAK;IAAEgkB,IAAI;IAAEhD;EAAI,CAAC,GAAGgY,MAAM;EAClC,IAAI9jC,cAAc,CAAC8uB,IAAI,CAAC,EAAE;IACxB,OAAOyyB,cAAc,CAACz2C,KAAK,EAAEgkB,IAAI,CAAC;EACpC;EACA,IAAIA,IAAI,KAAK,OAAO,EAAE;IACpB,OAAOqzB,cAAc,CAACre,MAAM,CAAC;EAC/B;EACA,MAAMme,QAAQ,GAAGF,eAAe,CAACje,MAAM,CAAC;EACxC,IAAIme,QAAQ,YAAYJ,SAAS,EAAE;IACjC,OAAOI,QAAQ;EACjB;EACA,OAAOM,kBAAkB,CAACN,QAAQ,EAAEn2B,IAAI,CAAC;AAC3C;AACA,SAASy2B,kBAAkBA,CAACN,QAAQ,EAAEn2B,IAAI,EAAE;EAC1C,IAAIzF,MAAM,GAAG,EAAE;EACf,IAAI1W,KAAK,GAAG,KAAK;EACjB,IAAIvQ,OAAO,CAAC6iD,QAAQ,CAAC,EAAE;IACrBtyC,KAAK,GAAG,IAAI;IACZ0W,MAAM,GAAG47B,QAAQ;EACnB,CAAC,MAAM;IACL57B,MAAM,GAAG27B,kBAAkB,CAACC,QAAQ,EAAEn2B,IAAI,CAAC;EAC7C;EACA,OAAOzF,MAAM,CAAC/Z,MAAM,GAAG,IAAI6vC,WAAW,CAAC;IACrC91B,MAAM;IACN3T,OAAO,EAAE;MAACkoC,OAAO,EAAE;IAAC,CAAC;IACrBjrC,KAAK;IACLgf,SAAS,EAAEhf;EACb,CAAC,CAAC,GAAG,IAAI;AACX;AACA,SAASwzC,aAAaA,CAACC,OAAO,EAAEzuC,KAAK,EAAE0uC,SAAS,EAAE;EAChD,MAAMvf,MAAM,GAAGsf,OAAO,CAACzuC,KAAK,CAAC;EAC7B,IAAIma,IAAI,GAAGgV,MAAM,CAAChV,IAAI;EACtB,MAAMw0B,OAAO,GAAG,CAAC3uC,KAAK,CAAC;EACvB,IAAI1F,MAAM;EACV,IAAI,CAACo0C,SAAS,EAAE;IACd,OAAOv0B,IAAI;EACb;EACA,OAAOA,IAAI,KAAK,KAAK,IAAIw0B,OAAO,CAAC1+B,OAAO,CAACkK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IACrD,IAAI,CAAC9uB,cAAc,CAAC8uB,IAAI,CAAC,EAAE;MACzB,OAAOA,IAAI;IACb;IACA7f,MAAM,GAAGm0C,OAAO,CAACt0B,IAAI,CAAC;IACtB,IAAI,CAAC7f,MAAM,EAAE;MACX,OAAO,KAAK;IACd;IACA,IAAIA,MAAM,CAAC2C,OAAO,EAAE;MAClB,OAAOkd,IAAI;IACb;IACAw0B,OAAO,CAACh2C,IAAI,CAACwhB,IAAI,CAAC;IAClBA,IAAI,GAAG7f,MAAM,CAAC6f,IAAI;EACpB;EACA,OAAO,KAAK;AACd;AACA,SAASnR,KAAKA,CAACnF,GAAG,EAAEvJ,MAAM,EAAEs0C,KAAK,EAAE;EACjC/qC,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACft7B,MAAM,CAAC4sC,IAAI,CAACrjC,GAAG,CAAC;EAChBA,GAAG,CAACiyB,MAAM,CAACx7B,MAAM,CAACwV,IAAI,CAAC,CAAC,CAAC1iB,CAAC,EAAEwhD,KAAK,CAAC;EAClC/qC,GAAG,CAACiyB,MAAM,CAACx7B,MAAM,CAACuvB,KAAK,CAAC,CAAC,CAACz8B,CAAC,EAAEwhD,KAAK,CAAC;EACnC/qC,GAAG,CAAC6gC,SAAS,CAAC,CAAC;EACf7gC,GAAG,CAACoF,IAAI,CAAC,CAAC;AACZ;AACA,SAAS4lC,SAASA,CAACxX,QAAQ,EAAExN,KAAK,EAAE/Z,IAAI,EAAE7U,IAAI,EAAE;EAC9C,IAAIA,IAAI,EAAE;IACR;EACF;EACA,IAAIjE,KAAK,GAAG6yB,KAAK,CAACwN,QAAQ,CAAC;EAC3B,IAAIn4B,GAAG,GAAG4Q,IAAI,CAACunB,QAAQ,CAAC;EACxB,IAAIA,QAAQ,KAAK,OAAO,EAAE;IACxBrgC,KAAK,GAAGrD,eAAe,CAACqD,KAAK,CAAC;IAC9BkI,GAAG,GAAGvL,eAAe,CAACuL,GAAG,CAAC;EAC5B;EACA,OAAO;IAACm4B,QAAQ;IAAErgC,KAAK;IAAEkI;EAAG,CAAC;AAC/B;AACA,SAAS4vC,QAAQA,CAAC9kD,CAAC,EAAEQ,CAAC,EAAE+P,IAAI,EAAE3D,EAAE,EAAE;EAChC,IAAI5M,CAAC,IAAIQ,CAAC,EAAE;IACV,OAAOoM,EAAE,CAAC5M,CAAC,CAACuQ,IAAI,CAAC,EAAE/P,CAAC,CAAC+P,IAAI,CAAC,CAAC;EAC7B;EACA,OAAOvQ,CAAC,GAAGA,CAAC,CAACuQ,IAAI,CAAC,GAAG/P,CAAC,GAAGA,CAAC,CAAC+P,IAAI,CAAC,GAAG,CAAC;AACtC;AACA,SAASmtC,SAASA,CAACvwB,IAAI,EAAE7c,MAAM,EAAE+8B,QAAQ,EAAE;EACzC,MAAMuQ,QAAQ,GAAGzwB,IAAI,CAACywB,QAAQ;EAC9B,MAAMl2B,MAAM,GAAGyF,IAAI,CAACzF,MAAM;EAC1B,MAAMq9B,OAAO,GAAGz0C,MAAM,CAACoX,MAAM;EAC7B,MAAMimB,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIrtC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs9C,QAAQ,CAACjwC,MAAM,EAAErN,CAAC,EAAE,EAAE;IACxC,MAAM67C,OAAO,GAAGyB,QAAQ,CAACt9C,CAAC,CAAC;IAC3B,MAAMu9B,MAAM,GAAGgnB,SAAS,CAACxX,QAAQ,EAAE3lB,MAAM,CAACy0B,OAAO,CAACnvC,KAAK,CAAC,EAAE0a,MAAM,CAACy0B,OAAO,CAACjnC,GAAG,CAAC,EAAEinC,OAAO,CAAClrC,IAAI,CAAC;IAC5F,IAAI,CAACX,MAAM,CAACstC,QAAQ,EAAE;MACpBjQ,KAAK,CAACh/B,IAAI,CAAC;QACTw2B,MAAM,EAAEgX,OAAO;QACf7rC,MAAM,EAAEutB,MAAM;QACd7wB,KAAK,EAAE0a,MAAM,CAACy0B,OAAO,CAACnvC,KAAK,CAAC;QAC5BkI,GAAG,EAAEwS,MAAM,CAACy0B,OAAO,CAACjnC,GAAG;MACzB,CAAC,CAAC;MACF;IACF;IACA,MAAM8vC,IAAI,GAAGz8C,cAAc,CAAC+H,MAAM,EAAEutB,MAAM,CAAC;IAC3C,KAAK,IAAIn8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsjD,IAAI,CAACr3C,MAAM,EAAE,EAAEjM,CAAC,EAAE;MACpC,MAAMujD,GAAG,GAAGD,IAAI,CAACtjD,CAAC,CAAC;MACnB,MAAMwjD,SAAS,GAAGL,SAAS,CAACxX,QAAQ,EAAE0X,OAAO,CAACE,GAAG,CAACj4C,KAAK,CAAC,EAAE+3C,OAAO,CAACE,GAAG,CAAC/vC,GAAG,CAAC,EAAE+vC,GAAG,CAACh0C,IAAI,CAAC;MACrF,MAAMk0C,WAAW,GAAG17C,aAAa,CAAC0yC,OAAO,EAAEz0B,MAAM,EAAEw9B,SAAS,CAAC;MAC7D,KAAK,IAAItjD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGujD,WAAW,CAACx3C,MAAM,EAAE/L,CAAC,EAAE,EAAE;QAC3C+rC,KAAK,CAACh/B,IAAI,CAAC;UACTw2B,MAAM,EAAEggB,WAAW,CAACvjD,CAAC,CAAC;UACtB0O,MAAM,EAAE20C,GAAG;UACXj4C,KAAK,EAAE;YACL,CAACqgC,QAAQ,GAAGyX,QAAQ,CAACjnB,MAAM,EAAEqnB,SAAS,EAAE,OAAO,EAAEp4C,IAAI,CAACmC,GAAG;UAC3D,CAAC;UACDiG,GAAG,EAAE;YACH,CAACm4B,QAAQ,GAAGyX,QAAQ,CAACjnB,MAAM,EAAEqnB,SAAS,EAAE,KAAK,EAAEp4C,IAAI,CAACC,GAAG;UACzD;QACF,CAAC,CAAC;MACJ;IACF;EACF;EACA,OAAO4gC,KAAK;AACd;AACA,SAASyX,UAAUA,CAACvrC,GAAG,EAAE/E,KAAK,EAAE+oB,MAAM,EAAE;EACtC,MAAM;IAACvoB,GAAG;IAAEE;EAAM,CAAC,GAAGV,KAAK,CAAC3I,KAAK,CAACiT,SAAS;EAC3C,MAAM;IAACiuB,QAAQ;IAAErgC,KAAK;IAAEkI;EAAG,CAAC,GAAG2oB,MAAM,IAAI,CAAC,CAAC;EAC3C,IAAIwP,QAAQ,KAAK,GAAG,EAAE;IACpBxzB,GAAG,CAAC+xB,SAAS,CAAC,CAAC;IACf/xB,GAAG,CAAC2mC,IAAI,CAACxzC,KAAK,EAAEsI,GAAG,EAAEJ,GAAG,GAAGlI,KAAK,EAAEwI,MAAM,GAAGF,GAAG,CAAC;IAC/CuE,GAAG,CAACoF,IAAI,CAAC,CAAC;EACZ;AACF;AACA,SAASomC,kBAAkBA,CAACxrC,GAAG,EAAEvJ,MAAM,EAAEqX,KAAK,EAAE0lB,QAAQ,EAAE;EACxD,MAAMiY,iBAAiB,GAAGh1C,MAAM,CAACutC,WAAW,CAACl2B,KAAK,EAAE0lB,QAAQ,CAAC;EAC7D,IAAIiY,iBAAiB,EAAE;IACrBzrC,GAAG,CAACiyB,MAAM,CAACwZ,iBAAiB,CAACliD,CAAC,EAAEkiD,iBAAiB,CAAChiD,CAAC,CAAC;EACtD;AACF;AACA,SAASiiD,KAAKA,CAAC1rC,GAAG,EAAExJ,GAAG,EAAE;EACvB,MAAM;IAAC8c,IAAI;IAAE7c,MAAM;IAAE+8B,QAAQ;IAAEhtC,KAAK;IAAEyU;EAAK,CAAC,GAAGzE,GAAG;EAClD,MAAMutC,QAAQ,GAAGF,SAAS,CAACvwB,IAAI,EAAE7c,MAAM,EAAE+8B,QAAQ,CAAC;EAClDxzB,GAAG,CAACwS,SAAS,GAAGhsB,KAAK;EACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG6nC,QAAQ,CAACjwC,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACrD,MAAM;MAAC6kC,MAAM,EAAEqgB,GAAG;MAAEl1C,MAAM,EAAEm1C,GAAG;MAAEz4C,KAAK;MAAEkI;IAAG,CAAC,GAAG0oC,QAAQ,CAACt9C,CAAC,CAAC;IAC1DuZ,GAAG,CAACqxB,IAAI,CAAC,CAAC;IACVka,UAAU,CAACvrC,GAAG,EAAE/E,KAAK,EAAE+vC,SAAS,CAACxX,QAAQ,EAAErgC,KAAK,EAAEkI,GAAG,CAAC,CAAC;IACvD2E,GAAG,CAAC+xB,SAAS,CAAC,CAAC;IACf,MAAM8Z,QAAQ,GAAG,CAAC,CAACv4B,IAAI,CAACivB,WAAW,CAACviC,GAAG,EAAE2rC,GAAG,CAAC;IAC7C,IAAIE,QAAQ,EAAE;MACZ7rC,GAAG,CAAC6gC,SAAS,CAAC,CAAC;IACjB,CAAC,MAAM;MACL2K,kBAAkB,CAACxrC,GAAG,EAAEvJ,MAAM,EAAE4E,GAAG,EAAEm4B,QAAQ,CAAC;IAChD;IACA,MAAMsY,UAAU,GAAG,CAAC,CAACr1C,MAAM,CAAC8rC,WAAW,CAACviC,GAAG,EAAE4rC,GAAG,EAAE;MAAClkC,IAAI,EAAEmkC,QAAQ;MAAEzwC,OAAO,EAAE;IAAI,CAAC,CAAC;IAClF,MAAMhE,IAAI,GAAGy0C,QAAQ,IAAIC,UAAU;IACnC,IAAI,CAAC10C,IAAI,EAAE;MACTo0C,kBAAkB,CAACxrC,GAAG,EAAEvJ,MAAM,EAAEtD,KAAK,EAAEqgC,QAAQ,CAAC;IAClD;IACAxzB,GAAG,CAAC6gC,SAAS,CAAC,CAAC;IACf7gC,GAAG,CAACsW,IAAI,CAAClf,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC;IACtC4I,GAAG,CAACuxB,OAAO,CAAC,CAAC;EACf;AACF;AACA,SAASwa,MAAMA,CAAC/rC,GAAG,EAAExJ,GAAG,EAAE;EACxB,MAAM;IAAC8c,IAAI;IAAE7c,MAAM;IAAEu1C,KAAK;IAAE9B,KAAK;IAAE5kC,IAAI;IAAErK;EAAK,CAAC,GAAGzE,GAAG;EACrD,MAAMg9B,QAAQ,GAAGlgB,IAAI,CAACnc,KAAK,GAAG,OAAO,GAAG,GAAG;EAC3C6I,GAAG,CAACqxB,IAAI,CAAC,CAAC;EACV,IAAImC,QAAQ,KAAK,GAAG,IAAI0W,KAAK,KAAK8B,KAAK,EAAE;IACvC7mC,KAAK,CAACnF,GAAG,EAAEvJ,MAAM,EAAE6O,IAAI,CAAC7J,GAAG,CAAC;IAC5BiwC,KAAK,CAAC1rC,GAAG,EAAE;MAACsT,IAAI;MAAE7c,MAAM;MAAEjQ,KAAK,EAAEwlD,KAAK;MAAE/wC,KAAK;MAAEu4B;IAAQ,CAAC,CAAC;IACzDxzB,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACbvxB,GAAG,CAACqxB,IAAI,CAAC,CAAC;IACVlsB,KAAK,CAACnF,GAAG,EAAEvJ,MAAM,EAAE6O,IAAI,CAAC3J,MAAM,CAAC;EACjC;EACA+vC,KAAK,CAAC1rC,GAAG,EAAE;IAACsT,IAAI;IAAE7c,MAAM;IAAEjQ,KAAK,EAAE0jD,KAAK;IAAEjvC,KAAK;IAAEu4B;EAAQ,CAAC,CAAC;EACzDxzB,GAAG,CAACuxB,OAAO,CAAC,CAAC;AACf;AACA,IAAI0a,aAAa,GAAG;EAClB5uC,EAAE,EAAE,QAAQ;EACZ6uC,mBAAmBA,CAAC55C,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IACzC,MAAMmJ,KAAK,GAAG,CAAC/Q,KAAK,CAACsK,IAAI,CAACoF,QAAQ,IAAI,EAAE,EAAElO,MAAM;IAChD,MAAM+2C,SAAS,GAAG3wC,OAAO,CAAC2wC,SAAS;IACnC,MAAMD,OAAO,GAAG,EAAE;IAClB,IAAI5tC,IAAI,EAAEvW,CAAC,EAAE6sB,IAAI,EAAEgY,MAAM;IACzB,KAAK7kC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4c,KAAK,EAAE,EAAE5c,CAAC,EAAE;MAC1BuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAc,CAACxb,CAAC,CAAC;MAC9B6sB,IAAI,GAAGtW,IAAI,CAACmC,OAAO;MACnBmsB,MAAM,GAAG,IAAI;MACb,IAAIhY,IAAI,IAAIA,IAAI,CAACpZ,OAAO,IAAIoZ,IAAI,YAAYqwB,WAAW,EAAE;QACvDrY,MAAM,GAAG;UACPlyB,OAAO,EAAE9G,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC;UAClC0V,KAAK,EAAE1V,CAAC;UACR6vB,IAAI,EAAE4yB,UAAU,CAAC51B,IAAI,EAAE7sB,CAAC,EAAE4c,KAAK,CAAC;UAChC/Q,KAAK;UACL2I,KAAK,EAAE+B,IAAI,CAACuB,MAAM;UAClB+U;QACF,CAAC;MACH;MACAtW,IAAI,CAACovC,OAAO,GAAG9gB,MAAM;MACrBsf,OAAO,CAAC91C,IAAI,CAACw2B,MAAM,CAAC;IACtB;IACA,KAAK7kC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4c,KAAK,EAAE,EAAE5c,CAAC,EAAE;MAC1B6kC,MAAM,GAAGsf,OAAO,CAACnkD,CAAC,CAAC;MACnB,IAAI,CAAC6kC,MAAM,IAAIA,MAAM,CAAChV,IAAI,KAAK,KAAK,EAAE;QACpC;MACF;MACAgV,MAAM,CAAChV,IAAI,GAAGq0B,aAAa,CAACC,OAAO,EAAEnkD,CAAC,EAAEokD,SAAS,CAAC;IACpD;EACF,CAAC;EACDwB,kBAAkBA,CAAC/5C,KAAK,EAAE;IACxB,MAAM0J,QAAQ,GAAG1J,KAAK,CAACulB,4BAA4B,CAAC,CAAC;IACrD,MAAMvS,IAAI,GAAGhT,KAAK,CAACiT,SAAS;IAC5B,IAAI9e,CAAC,EAAEuW,IAAI;IACX,KAAKvW,CAAC,GAAGuV,QAAQ,CAAClI,MAAM,GAAG,CAAC,EAAErN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MACzCuW,IAAI,GAAGhB,QAAQ,CAACvV,CAAC,CAAC,CAAC2lD,OAAO;MAC1B,IAAIpvC,IAAI,EAAE;QACRA,IAAI,CAACsW,IAAI,CAACe,mBAAmB,CAAC/O,IAAI,CAAC;MACrC;IACF;EACF,CAAC;EACDgnC,iBAAiBA,CAACh6C,KAAK,EAAE6vB,IAAI,EAAE;IAC7B,MAAM7c,IAAI,GAAGhT,KAAK,CAACiT,SAAS;IAC5B,MAAMvF,GAAG,GAAG1N,KAAK,CAAC0N,GAAG;IACrB,MAAMsrB,MAAM,GAAGnJ,IAAI,CAACnlB,IAAI,CAACovC,OAAO;IAChC,IAAI,CAAC9gB,MAAM,IAAIA,MAAM,CAAChV,IAAI,KAAK,KAAK,EAAE;MACpC;IACF;IACA,MAAM7f,MAAM,GAAGi0C,SAAS,CAACpf,MAAM,CAAC;IAChC,MAAM;MAAChY,IAAI;MAAErY;IAAK,CAAC,GAAGqwB,MAAM;IAC5B,MAAMihB,QAAQ,GAAGj5B,IAAI,CAACpZ,OAAO;IAC7B,MAAM+uC,UAAU,GAAGsD,QAAQ,CAACj2B,IAAI;IAChC,MAAM9vB,KAAK,GAAG+lD,QAAQ,CAAC95B,eAAe;IACtC,MAAM;MAACu5B,KAAK,GAAGxlD,KAAK;MAAE0jD,KAAK,GAAG1jD;IAAK,CAAC,GAAGyiD,UAAU,IAAI,CAAC,CAAC;IACvD,IAAIxyC,MAAM,IAAI6c,IAAI,CAACzF,MAAM,CAAC/Z,MAAM,EAAE;MAChC9L,QAAQ,CAACgY,GAAG,EAAEsF,IAAI,CAAC;MACnBymC,MAAM,CAAC/rC,GAAG,EAAE;QAACsT,IAAI;QAAE7c,MAAM;QAAEu1C,KAAK;QAAE9B,KAAK;QAAE5kC,IAAI;QAAErK;MAAK,CAAC,CAAC;MACtD/S,UAAU,CAAC8X,GAAG,CAAC;IACjB;EACF,CAAC;EACDlZ,QAAQ,EAAE;IACR+jD,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAM2B,UAAU,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;EAC1C,IAAI;IAACC,SAAS,GAAGD,QAAQ;IAAEE,QAAQ,GAAGF;EAAQ,CAAC,GAAGD,SAAS;EAC3D,IAAIA,SAAS,CAACI,aAAa,EAAE;IAC3BF,SAAS,GAAG15C,IAAI,CAACC,GAAG,CAACy5C,SAAS,EAAED,QAAQ,CAAC;IACzCE,QAAQ,GAAG35C,IAAI,CAACC,GAAG,CAAC05C,QAAQ,EAAEF,QAAQ,CAAC;EACzC;EACA,OAAO;IACLE,QAAQ;IACRD,SAAS;IACTG,UAAU,EAAE75C,IAAI,CAACmC,GAAG,CAACs3C,QAAQ,EAAEC,SAAS;EAC1C,CAAC;AACH,CAAC;AACD,MAAMI,UAAU,GAAGA,CAAC5mD,CAAC,EAAEQ,CAAC,KAAKR,CAAC,KAAK,IAAI,IAAIQ,CAAC,KAAK,IAAI,IAAIR,CAAC,CAACsW,YAAY,KAAK9V,CAAC,CAAC8V,YAAY,IAAItW,CAAC,CAACgW,KAAK,KAAKxV,CAAC,CAACwV,KAAK;AACjH,MAAM6wC,MAAM,SAASpqB,OAAO,CAAC;EAC3B9wB,WAAWA,CAACyH,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0zC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC96C,KAAK,GAAGiH,MAAM,CAACjH,KAAK;IACzB,IAAI,CAAC4H,OAAO,GAAGX,MAAM,CAACW,OAAO;IAC7B,IAAI,CAAC8F,GAAG,GAAGzG,MAAM,CAACyG,GAAG;IACrB,IAAI,CAACqtC,WAAW,GAAGj7C,SAAS;IAC5B,IAAI,CAACk7C,WAAW,GAAGl7C,SAAS;IAC5B,IAAI,CAACm7C,UAAU,GAAGn7C,SAAS;IAC3B,IAAI,CAACue,SAAS,GAAGve,SAAS;IAC1B,IAAI,CAACse,QAAQ,GAAGte,SAAS;IACzB,IAAI,CAACqJ,GAAG,GAAGrJ,SAAS;IACpB,IAAI,CAACuJ,MAAM,GAAGvJ,SAAS;IACvB,IAAI,CAACwJ,IAAI,GAAGxJ,SAAS;IACrB,IAAI,CAACsJ,KAAK,GAAGtJ,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC02B,QAAQ,GAAG12B,SAAS;IACzB,IAAI,CAACmmB,QAAQ,GAAGnmB,SAAS;IACzB,IAAI,CAAC6f,MAAM,GAAG7f,SAAS;IACvB,IAAI,CAAC6oB,QAAQ,GAAG7oB,SAAS;EAC3B;EACAuF,MAAMA,CAAC+Y,QAAQ,EAAEC,SAAS,EAAE2Z,OAAO,EAAE;IACnC,MAAMj3B,EAAE,GAAG,IAAI;IACfA,EAAE,CAACqd,QAAQ,GAAGA,QAAQ;IACtBrd,EAAE,CAACsd,SAAS,GAAGA,SAAS;IACxBtd,EAAE,CAACy1B,QAAQ,GAAGwB,OAAO;IACrBj3B,EAAE,CAACo3B,aAAa,CAAC,CAAC;IAClBp3B,EAAE,CAACm6C,WAAW,CAAC,CAAC;IAChBn6C,EAAE,CAACm4B,GAAG,CAAC,CAAC;EACV;EACAf,aAAaA,CAAA,EAAG;IACd,MAAMp3B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBhY,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;MACtBrd,EAAE,CAACuI,IAAI,GAAG,CAAC;MACXvI,EAAE,CAACqI,KAAK,GAAGrI,EAAE,CAAC0Y,KAAK;IACrB,CAAC,MAAM;MACL1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsd,SAAS;MACxBtd,EAAE,CAACoI,GAAG,GAAG,CAAC;MACVpI,EAAE,CAACsI,MAAM,GAAGtI,EAAE,CAACyY,MAAM;IACvB;EACF;EACA0hC,WAAWA,CAAA,EAAG;IACZ,MAAMn6C,EAAE,GAAG,IAAI;IACf,MAAMo5C,SAAS,GAAGp5C,EAAE,CAAC6G,OAAO,CAAC2J,MAAM,IAAI,CAAC,CAAC;IACzC,IAAIwpC,WAAW,GAAG/hD,QAAQ,CAACmhD,SAAS,CAACr6B,cAAc,EAAE,CAAC/e,EAAE,CAACf,KAAK,CAAC,EAAEe,EAAE,CAAC,IAAI,EAAE;IAC1E,IAAIo5C,SAAS,CAAC3tC,MAAM,EAAE;MACpBuuC,WAAW,GAAGA,WAAW,CAACvuC,MAAM,CAAE9K,IAAI,IAAKy4C,SAAS,CAAC3tC,MAAM,CAAC9K,IAAI,EAAEX,EAAE,CAACf,KAAK,CAACsK,IAAI,CAAC,CAAC;IACnF;IACA,IAAI6vC,SAAS,CAAC7jC,IAAI,EAAE;MAClBykC,WAAW,GAAGA,WAAW,CAACzkC,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAK8lD,SAAS,CAAC7jC,IAAI,CAACziB,CAAC,EAAEQ,CAAC,EAAE0M,EAAE,CAACf,KAAK,CAACsK,IAAI,CAAC,CAAC;IAC/E;IACA,IAAIvJ,EAAE,CAAC6G,OAAO,CAACkB,OAAO,EAAE;MACtBiyC,WAAW,CAACjyC,OAAO,CAAC,CAAC;IACvB;IACA/H,EAAE,CAACg6C,WAAW,GAAGA,WAAW;EAC9B;EACA7hB,GAAGA,CAAA,EAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAI;IACf,MAAM;MAAC6G,OAAO;MAAE8F;IAAG,CAAC,GAAG3M,EAAE;IACzB,IAAI,CAAC6G,OAAO,CAAC4b,OAAO,EAAE;MACpBziB,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACyY,MAAM,GAAG,CAAC;MACxB;IACF;IACA,MAAM2gC,SAAS,GAAGvyC,OAAO,CAAC2J,MAAM;IAChC,MAAM4pC,SAAS,GAAGvhD,MAAM,CAACugD,SAAS,CAACrkB,IAAI,CAAC;IACxC,MAAMskB,QAAQ,GAAGe,SAAS,CAAC7yC,IAAI;IAC/B,MAAMqyB,WAAW,GAAG55B,EAAE,CAACq6C,mBAAmB,CAAC,CAAC;IAC5C,MAAM;MAACd,QAAQ;MAAEE;IAAU,CAAC,GAAGN,UAAU,CAACC,SAAS,EAAEC,QAAQ,CAAC;IAC9D,IAAI3gC,KAAK,EAAED,MAAM;IACjB9L,GAAG,CAACooB,IAAI,GAAGqlB,SAAS,CAACnf,MAAM;IAC3B,IAAIj7B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBU,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;MACnB5E,MAAM,GAAGzY,EAAE,CAACs6C,QAAQ,CAAC1gB,WAAW,EAAEyf,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;IACxE,CAAC,MAAM;MACLhhC,MAAM,GAAGzY,EAAE,CAACsd,SAAS;MACrB5E,KAAK,GAAG1Y,EAAE,CAACu6C,QAAQ,CAAC3gB,WAAW,EAAEyf,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;IACvE;IACAz5C,EAAE,CAAC0Y,KAAK,GAAG9Y,IAAI,CAACC,GAAG,CAAC6Y,KAAK,EAAE7R,OAAO,CAACwW,QAAQ,IAAIrd,EAAE,CAACqd,QAAQ,CAAC;IAC3Drd,EAAE,CAACyY,MAAM,GAAG7Y,IAAI,CAACC,GAAG,CAAC4Y,MAAM,EAAE5R,OAAO,CAACyW,SAAS,IAAItd,EAAE,CAACsd,SAAS,CAAC;EACjE;EACAg9B,QAAQA,CAAC1gB,WAAW,EAAEyf,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,EAAE;IACpD,MAAMz5C,EAAE,GAAG,IAAI;IACf,MAAM;MAAC2M,GAAG;MAAE0Q,QAAQ;MAAExW,OAAO,EAAE;QAAC2J,MAAM,EAAE;UAAC0Z;QAAO;MAAC;IAAC,CAAC,GAAGlqB,EAAE;IACxD,MAAMw6C,QAAQ,GAAGx6C,EAAE,CAAC65C,cAAc,GAAG,EAAE;IACvC,MAAMK,UAAU,GAAGl6C,EAAE,CAACk6C,UAAU,GAAG,CAAC,CAAC,CAAC;IACtC,MAAMjlB,UAAU,GAAGwkB,UAAU,GAAGvvB,OAAO;IACvC,IAAIuwB,WAAW,GAAG7gB,WAAW;IAC7BjtB,GAAG,CAACywB,SAAS,GAAG,MAAM;IACtBzwB,GAAG,CAAC4wB,YAAY,GAAG,QAAQ;IAC3B,IAAImd,GAAG,GAAG,CAAC,CAAC;IACZ,IAAItyC,GAAG,GAAG,CAAC6sB,UAAU;IACrBj1B,EAAE,CAACg6C,WAAW,CAACv6C,OAAO,CAAC,CAACigB,UAAU,EAAEtsB,CAAC,KAAK;MACxC,MAAMunD,SAAS,GAAGpB,QAAQ,GAAIF,QAAQ,GAAG,CAAE,GAAG1sC,GAAG,CAACiuC,WAAW,CAACl7B,UAAU,CAACR,IAAI,CAAC,CAACxG,KAAK;MACpF,IAAItlB,CAAC,KAAK,CAAC,IAAI8mD,UAAU,CAACA,UAAU,CAACz5C,MAAM,GAAG,CAAC,CAAC,GAAGk6C,SAAS,GAAG,CAAC,GAAGzwB,OAAO,GAAG7M,QAAQ,EAAE;QACrFo9B,WAAW,IAAIxlB,UAAU;QACzBilB,UAAU,CAACA,UAAU,CAACz5C,MAAM,IAAIrN,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACnDgV,GAAG,IAAI6sB,UAAU;QACjBylB,GAAG,EAAE;MACP;MACAF,QAAQ,CAACpnD,CAAC,CAAC,GAAG;QAACmV,IAAI,EAAE,CAAC;QAAEH,GAAG;QAAEsyC,GAAG;QAAEhiC,KAAK,EAAEiiC,SAAS;QAAEliC,MAAM,EAAEghC;MAAU,CAAC;MACvES,UAAU,CAACA,UAAU,CAACz5C,MAAM,GAAG,CAAC,CAAC,IAAIk6C,SAAS,GAAGzwB,OAAO;IAC1D,CAAC,CAAC;IACF,OAAOuwB,WAAW;EACpB;EACAF,QAAQA,CAAC3gB,WAAW,EAAEyf,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,EAAE;IACpD,MAAMz5C,EAAE,GAAG,IAAI;IACf,MAAM;MAAC2M,GAAG;MAAE2Q,SAAS;MAAEzW,OAAO,EAAE;QAAC2J,MAAM,EAAE;UAAC0Z;QAAO;MAAC;IAAC,CAAC,GAAGlqB,EAAE;IACzD,MAAMw6C,QAAQ,GAAGx6C,EAAE,CAAC65C,cAAc,GAAG,EAAE;IACvC,MAAMI,WAAW,GAAGj6C,EAAE,CAACi6C,WAAW,GAAG,EAAE;IACvC,MAAMY,WAAW,GAAGv9B,SAAS,GAAGsc,WAAW;IAC3C,IAAIkhB,UAAU,GAAG5wB,OAAO;IACxB,IAAI6wB,eAAe,GAAG,CAAC;IACvB,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAIzyC,IAAI,GAAG,CAAC;IACZ,IAAIH,GAAG,GAAG,CAAC;IACX,IAAI6yC,GAAG,GAAG,CAAC;IACXj7C,EAAE,CAACg6C,WAAW,CAACv6C,OAAO,CAAC,CAACigB,UAAU,EAAEtsB,CAAC,KAAK;MACxC,MAAMunD,SAAS,GAAGpB,QAAQ,GAAIF,QAAQ,GAAG,CAAE,GAAG1sC,GAAG,CAACiuC,WAAW,CAACl7B,UAAU,CAACR,IAAI,CAAC,CAACxG,KAAK;MACpF,IAAItlB,CAAC,GAAG,CAAC,IAAI4nD,gBAAgB,GAAG3B,QAAQ,GAAG,CAAC,GAAGnvB,OAAO,GAAG2wB,WAAW,EAAE;QACpEC,UAAU,IAAIC,eAAe,GAAG7wB,OAAO;QACvC+vB,WAAW,CAACx4C,IAAI,CAAC;UAACiX,KAAK,EAAEqiC,eAAe;UAAEtiC,MAAM,EAAEuiC;QAAgB,CAAC,CAAC;QACpEzyC,IAAI,IAAIwyC,eAAe,GAAG7wB,OAAO;QACjC+wB,GAAG,EAAE;QACL7yC,GAAG,GAAG,CAAC;QACP2yC,eAAe,GAAGC,gBAAgB,GAAG,CAAC;MACxC;MACAD,eAAe,GAAGn7C,IAAI,CAACmC,GAAG,CAACg5C,eAAe,EAAEJ,SAAS,CAAC;MACtDK,gBAAgB,IAAI3B,QAAQ,GAAGnvB,OAAO;MACtCswB,QAAQ,CAACpnD,CAAC,CAAC,GAAG;QAACmV,IAAI;QAAEH,GAAG;QAAE6yC,GAAG;QAAEviC,KAAK,EAAEiiC,SAAS;QAAEliC,MAAM,EAAEghC;MAAU,CAAC;MACpErxC,GAAG,IAAIqxC,UAAU,GAAGvvB,OAAO;IAC7B,CAAC,CAAC;IACF4wB,UAAU,IAAIC,eAAe;IAC7Bd,WAAW,CAACx4C,IAAI,CAAC;MAACiX,KAAK,EAAEqiC,eAAe;MAAEtiC,MAAM,EAAEuiC;IAAgB,CAAC,CAAC;IACpE,OAAOF,UAAU;EACnB;EACAI,cAAcA,CAAA,EAAG;IACf,MAAMl7C,EAAE,GAAG,IAAI;IACf,IAAI,CAACA,EAAE,CAAC6G,OAAO,CAAC4b,OAAO,EAAE;MACvB;IACF;IACA,MAAMmX,WAAW,GAAG55B,EAAE,CAACq6C,mBAAmB,CAAC,CAAC;IAC5C,MAAM;MAACR,cAAc,EAAEW,QAAQ;MAAE3zC,OAAO,EAAE;QAACkrB,KAAK;QAAEvhB,MAAM,EAAE;UAAC0Z;QAAO;MAAC;IAAC,CAAC,GAAGlqB,EAAE;IAC1E,IAAI,IAAI,CAACgY,YAAY,CAAC,CAAC,EAAE;MACvB,IAAI0iC,GAAG,GAAG,CAAC;MACX,IAAInyC,IAAI,GAAGtP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACuI,IAAI,GAAG2hB,OAAO,EAAElqB,EAAE,CAACqI,KAAK,GAAGrI,EAAE,CAACk6C,UAAU,CAACQ,GAAG,CAAC,CAAC;MAClF,KAAK,MAAMS,MAAM,IAAIX,QAAQ,EAAE;QAC7B,IAAIE,GAAG,KAAKS,MAAM,CAACT,GAAG,EAAE;UACtBA,GAAG,GAAGS,MAAM,CAACT,GAAG;UAChBnyC,IAAI,GAAGtP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACuI,IAAI,GAAG2hB,OAAO,EAAElqB,EAAE,CAACqI,KAAK,GAAGrI,EAAE,CAACk6C,UAAU,CAACQ,GAAG,CAAC,CAAC;QAChF;QACAS,MAAM,CAAC/yC,GAAG,IAAIpI,EAAE,CAACoI,GAAG,GAAGwxB,WAAW,GAAG1P,OAAO;QAC5CixB,MAAM,CAAC5yC,IAAI,GAAGA,IAAI;QAClBA,IAAI,IAAI4yC,MAAM,CAACziC,KAAK,GAAGwR,OAAO;MAChC;IACF,CAAC,MAAM;MACL,IAAI+wB,GAAG,GAAG,CAAC;MACX,IAAI7yC,GAAG,GAAGnP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACoI,GAAG,GAAGwxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACsI,MAAM,GAAGtI,EAAE,CAACi6C,WAAW,CAACgB,GAAG,CAAC,CAACxiC,MAAM,CAAC;MACvG,KAAK,MAAM0iC,MAAM,IAAIX,QAAQ,EAAE;QAC7B,IAAIW,MAAM,CAACF,GAAG,KAAKA,GAAG,EAAE;UACtBA,GAAG,GAAGE,MAAM,CAACF,GAAG;UAChB7yC,GAAG,GAAGnP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACoI,GAAG,GAAGwxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACsI,MAAM,GAAGtI,EAAE,CAACi6C,WAAW,CAACgB,GAAG,CAAC,CAACxiC,MAAM,CAAC;QACrG;QACA0iC,MAAM,CAAC/yC,GAAG,GAAGA,GAAG;QAChB+yC,MAAM,CAAC5yC,IAAI,IAAIvI,EAAE,CAACuI,IAAI,GAAG2hB,OAAO;QAChC9hB,GAAG,IAAI+yC,MAAM,CAAC1iC,MAAM,GAAGyR,OAAO;MAChC;IACF;EACF;EACAlS,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACnR,OAAO,CAACqe,QAAQ,KAAK,KAAK,IAAI,IAAI,CAACre,OAAO,CAACqe,QAAQ,KAAK,QAAQ;EAC9E;EACAxkB,IAAIA,CAAA,EAAG;IACL,MAAMV,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC6G,OAAO,CAAC4b,OAAO,EAAE;MACtB,MAAM9V,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;MAClBhY,QAAQ,CAACgY,GAAG,EAAE3M,EAAE,CAAC;MACjBA,EAAE,CAACo7C,KAAK,CAAC,CAAC;MACVvmD,UAAU,CAAC8X,GAAG,CAAC;IACjB;EACF;EACAyuC,KAAKA,CAAA,EAAG;IACN,MAAMp7C,EAAE,GAAG,IAAI;IACf,MAAM;MAAC6G,OAAO,EAAEiB,IAAI;MAAEmyC,WAAW;MAAEC,UAAU;MAAEvtC;IAAG,CAAC,GAAG3M,EAAE;IACxD,MAAM;MAAC+xB,KAAK;MAAEvhB,MAAM,EAAE4oC;IAAS,CAAC,GAAGtxC,IAAI;IACvC,MAAMuzC,YAAY,GAAG5nD,QAAQ,CAACN,KAAK;IACnC,MAAMmoD,SAAS,GAAG3+C,aAAa,CAACmL,IAAI,CAACyzC,GAAG,EAAEv7C,EAAE,CAACuI,IAAI,EAAEvI,EAAE,CAAC0Y,KAAK,CAAC;IAC5D,MAAM0hC,SAAS,GAAGvhD,MAAM,CAACugD,SAAS,CAACrkB,IAAI,CAAC;IACxC,MAAM;MAAC5hC,KAAK,EAAEqoD,SAAS;MAAEtxB;IAAO,CAAC,GAAGkvB,SAAS;IAC7C,MAAMC,QAAQ,GAAGe,SAAS,CAAC7yC,IAAI;IAC/B,MAAMk0C,YAAY,GAAGpC,QAAQ,GAAG,CAAC;IACjC,IAAIqC,MAAM;IACV17C,EAAE,CAACi/B,SAAS,CAAC,CAAC;IACdtyB,GAAG,CAACywB,SAAS,GAAGke,SAAS,CAACle,SAAS,CAAC,MAAM,CAAC;IAC3CzwB,GAAG,CAAC4wB,YAAY,GAAG,QAAQ;IAC3B5wB,GAAG,CAAC4S,SAAS,GAAG,GAAG;IACnB5S,GAAG,CAAC0S,WAAW,GAAGm8B,SAAS;IAC3B7uC,GAAG,CAACwS,SAAS,GAAGq8B,SAAS;IACzB7uC,GAAG,CAACooB,IAAI,GAAGqlB,SAAS,CAACnf,MAAM;IAC3B,MAAM;MAACse,QAAQ;MAAED,SAAS;MAAEG;IAAU,CAAC,GAAGN,UAAU,CAACC,SAAS,EAAEC,QAAQ,CAAC;IACzE,MAAMsC,aAAa,GAAG,SAAAA,CAASzlD,CAAC,EAAEE,CAAC,EAAEspB,UAAU,EAAE;MAC/C,IAAI5G,KAAK,CAACygC,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,IAAIzgC,KAAK,CAACwgC,SAAS,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAE;QACzE;MACF;MACA3sC,GAAG,CAACqxB,IAAI,CAAC,CAAC;MACV,MAAMze,SAAS,GAAG5rB,cAAc,CAAC+rB,UAAU,CAACH,SAAS,EAAE,CAAC,CAAC;MACzD5S,GAAG,CAACwS,SAAS,GAAGxrB,cAAc,CAAC+rB,UAAU,CAACP,SAAS,EAAEk8B,YAAY,CAAC;MAClE1uC,GAAG,CAAC8hC,OAAO,GAAG96C,cAAc,CAAC+rB,UAAU,CAAC+uB,OAAO,EAAE,MAAM,CAAC;MACxD9hC,GAAG,CAAC8xB,cAAc,GAAG9qC,cAAc,CAAC+rB,UAAU,CAAC+e,cAAc,EAAE,CAAC,CAAC;MACjE9xB,GAAG,CAACmhC,QAAQ,GAAGn6C,cAAc,CAAC+rB,UAAU,CAACouB,QAAQ,EAAE,OAAO,CAAC;MAC3DnhC,GAAG,CAAC4S,SAAS,GAAGA,SAAS;MACzB5S,GAAG,CAAC0S,WAAW,GAAG1rB,cAAc,CAAC+rB,UAAU,CAACL,WAAW,EAAEg8B,YAAY,CAAC;MACtE1uC,GAAG,CAAC6xB,WAAW,CAAC7qC,cAAc,CAAC+rB,UAAU,CAACk8B,QAAQ,EAAE,EAAE,CAAC,CAAC;MACxD,IAAIxC,SAAS,CAACI,aAAa,EAAE;QAC3B,MAAMqC,WAAW,GAAG;UAClBjhC,MAAM,EAAE2+B,QAAQ,GAAG35C,IAAI,CAACk8C,KAAK,GAAG,CAAC;UACjCrK,UAAU,EAAE/xB,UAAU,CAAC+xB,UAAU;UACjCx2B,QAAQ,EAAEyE,UAAU,CAACzE,QAAQ;UAC7BuD,WAAW,EAAEe;QACf,CAAC;QACD,MAAMtB,OAAO,GAAGq9B,SAAS,CAACS,KAAK,CAAC7lD,CAAC,EAAEqjD,QAAQ,GAAG,CAAC,CAAC;QAChD,MAAMr7B,OAAO,GAAG9nB,CAAC,GAAGqlD,YAAY;QAChCx/C,SAAS,CAAC0Q,GAAG,EAAEkvC,WAAW,EAAE59B,OAAO,EAAEC,OAAO,CAAC;MAC/C,CAAC,MAAM;QACL,MAAM89B,OAAO,GAAG5lD,CAAC,GAAGwJ,IAAI,CAACmC,GAAG,CAAC,CAACs3C,QAAQ,GAAGC,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3D3sC,GAAG,CAACsxB,QAAQ,CAACqd,SAAS,CAACW,UAAU,CAAC/lD,CAAC,EAAEqjD,QAAQ,CAAC,EAAEyC,OAAO,EAAEzC,QAAQ,EAAED,SAAS,CAAC;QAC7E,IAAI/5B,SAAS,KAAK,CAAC,EAAE;UACnB5S,GAAG,CAACuvC,UAAU,CAACZ,SAAS,CAACW,UAAU,CAAC/lD,CAAC,EAAEqjD,QAAQ,CAAC,EAAEyC,OAAO,EAAEzC,QAAQ,EAAED,SAAS,CAAC;QACjF;MACF;MACA3sC,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACf,CAAC;IACD,MAAMie,QAAQ,GAAG,SAAAA,CAASjmD,CAAC,EAAEE,CAAC,EAAEspB,UAAU,EAAE;MAC1C/mB,UAAU,CAACgU,GAAG,EAAE+S,UAAU,CAACR,IAAI,EAAEhpB,CAAC,EAAEE,CAAC,GAAIqjD,UAAU,GAAG,CAAE,EAAEW,SAAS,EAAE;QACnEgC,aAAa,EAAE18B,UAAU,CAACF,MAAM;QAChC4d,SAAS,EAAE1d,UAAU,CAAC0d;MACxB,CAAC,CAAC;IACJ,CAAC;IACD,MAAMplB,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,MAAM4hB,WAAW,GAAG,IAAI,CAACygB,mBAAmB,CAAC,CAAC;IAC9C,IAAIriC,YAAY,EAAE;MAChB0jC,MAAM,GAAG;QACPxlD,CAAC,EAAE+C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACuI,IAAI,GAAG2hB,OAAO,EAAElqB,EAAE,CAACqI,KAAK,GAAG6xC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrE9jD,CAAC,EAAE4J,EAAE,CAACoI,GAAG,GAAG8hB,OAAO,GAAG0P,WAAW;QACjC3Z,IAAI,EAAE;MACR,CAAC;IACH,CAAC,MAAM;MACLy7B,MAAM,GAAG;QACPxlD,CAAC,EAAE8J,EAAE,CAACuI,IAAI,GAAG2hB,OAAO;QACpB9zB,CAAC,EAAE6C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACoI,GAAG,GAAGwxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACsI,MAAM,GAAG2xC,WAAW,CAAC,CAAC,CAAC,CAACxhC,MAAM,CAAC;QAC3FwH,IAAI,EAAE;MACR,CAAC;IACH;IACApjB,qBAAqB,CAACmD,EAAE,CAAC2M,GAAG,EAAE7E,IAAI,CAACu0C,aAAa,CAAC;IACjD,MAAMpnB,UAAU,GAAGwkB,UAAU,GAAGvvB,OAAO;IACvClqB,EAAE,CAACg6C,WAAW,CAACv6C,OAAO,CAAC,CAACigB,UAAU,EAAEtsB,CAAC,KAAK;MACxC,MAAMkpD,SAAS,GAAG3vC,GAAG,CAACiuC,WAAW,CAACl7B,UAAU,CAACR,IAAI,CAAC,CAACxG,KAAK;MACxD,MAAM0kB,SAAS,GAAGke,SAAS,CAACle,SAAS,CAAC1d,UAAU,CAAC0d,SAAS,KAAK1d,UAAU,CAAC0d,SAAS,GAAGgc,SAAS,CAAChc,SAAS,CAAC,CAAC;MAC3G,MAAM1kB,KAAK,GAAG6gC,QAAQ,GAAIF,QAAQ,GAAG,CAAE,GAAGiD,SAAS;MACnD,IAAIpmD,CAAC,GAAGwlD,MAAM,CAACxlD,CAAC;MAChB,IAAIE,CAAC,GAAGslD,MAAM,CAACtlD,CAAC;MAChBklD,SAAS,CAACiB,QAAQ,CAACv8C,EAAE,CAAC0Y,KAAK,CAAC;MAC5B,IAAIV,YAAY,EAAE;QAChB,IAAI5kB,CAAC,GAAG,CAAC,IAAI8C,CAAC,GAAGwiB,KAAK,GAAGwR,OAAO,GAAGlqB,EAAE,CAACqI,KAAK,EAAE;UAC3CjS,CAAC,GAAGslD,MAAM,CAACtlD,CAAC,IAAI6+B,UAAU;UAC1BymB,MAAM,CAACz7B,IAAI,EAAE;UACb/pB,CAAC,GAAGwlD,MAAM,CAACxlD,CAAC,GAAG+C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACuI,IAAI,GAAG2hB,OAAO,EAAElqB,EAAE,CAACqI,KAAK,GAAG6xC,UAAU,CAACwB,MAAM,CAACz7B,IAAI,CAAC,CAAC;QAC7F;MACF,CAAC,MAAM,IAAI7sB,CAAC,GAAG,CAAC,IAAIgD,CAAC,GAAG6+B,UAAU,GAAGj1B,EAAE,CAACsI,MAAM,EAAE;QAC9CpS,CAAC,GAAGwlD,MAAM,CAACxlD,CAAC,GAAGA,CAAC,GAAG+jD,WAAW,CAACyB,MAAM,CAACz7B,IAAI,CAAC,CAACvH,KAAK,GAAGwR,OAAO;QAC3DwxB,MAAM,CAACz7B,IAAI,EAAE;QACb7pB,CAAC,GAAGslD,MAAM,CAACtlD,CAAC,GAAG6C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACoI,GAAG,GAAGwxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACsI,MAAM,GAAG2xC,WAAW,CAACyB,MAAM,CAACz7B,IAAI,CAAC,CAACxH,MAAM,CAAC;MACnH;MACA,MAAM+jC,KAAK,GAAGlB,SAAS,CAACplD,CAAC,CAACA,CAAC,CAAC;MAC5BylD,aAAa,CAACa,KAAK,EAAEpmD,CAAC,EAAEspB,UAAU,CAAC;MACnCxpB,CAAC,GAAG6G,MAAM,CAACqgC,SAAS,EAAElnC,CAAC,GAAGqjD,QAAQ,GAAGkC,YAAY,EAAEz7C,EAAE,CAACqI,KAAK,CAAC;MAC5D8zC,QAAQ,CAACb,SAAS,CAACplD,CAAC,CAACA,CAAC,CAAC,EAAEE,CAAC,EAAEspB,UAAU,CAAC;MACvC,IAAI1H,YAAY,EAAE;QAChB0jC,MAAM,CAACxlD,CAAC,IAAIwiB,KAAK,GAAGwR,OAAO;MAC7B,CAAC,MAAM;QACLwxB,MAAM,CAACtlD,CAAC,IAAI6+B,UAAU;MACxB;IACF,CAAC,CAAC;IACFh4B,oBAAoB,CAAC+C,EAAE,CAAC2M,GAAG,EAAE7E,IAAI,CAACu0C,aAAa,CAAC;EAClD;EACApd,SAASA,CAAA,EAAG;IACV,MAAMj/B,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAM6yB,SAAS,GAAG5xB,IAAI,CAACiT,KAAK;IAC5B,MAAM0hC,SAAS,GAAG5jD,MAAM,CAAC6gC,SAAS,CAAC3E,IAAI,CAAC;IACxC,MAAM2nB,YAAY,GAAG7lD,SAAS,CAAC6iC,SAAS,CAACxP,OAAO,CAAC;IACjD,IAAI,CAACwP,SAAS,CAACjX,OAAO,EAAE;MACtB;IACF;IACA,MAAM64B,SAAS,GAAG3+C,aAAa,CAACmL,IAAI,CAACyzC,GAAG,EAAEv7C,EAAE,CAACuI,IAAI,EAAEvI,EAAE,CAAC0Y,KAAK,CAAC;IAC5D,MAAM/L,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;IAClB,MAAMuY,QAAQ,GAAGwU,SAAS,CAACxU,QAAQ;IACnC,MAAMu2B,YAAY,GAAGgB,SAAS,CAACl1C,IAAI,GAAG,CAAC;IACvC,MAAMo1C,0BAA0B,GAAGD,YAAY,CAACt0C,GAAG,GAAGqzC,YAAY;IAClE,IAAIrlD,CAAC;IACL,IAAImS,IAAI,GAAGvI,EAAE,CAACuI,IAAI;IAClB,IAAI8U,QAAQ,GAAGrd,EAAE,CAAC0Y,KAAK;IACvB,IAAI,IAAI,CAACV,YAAY,CAAC,CAAC,EAAE;MACvBqF,QAAQ,GAAGzd,IAAI,CAACmC,GAAG,CAAC,GAAG/B,EAAE,CAACk6C,UAAU,CAAC;MACrC9jD,CAAC,GAAG4J,EAAE,CAACoI,GAAG,GAAGu0C,0BAA0B;MACvCp0C,IAAI,GAAGtP,cAAc,CAAC6O,IAAI,CAACiqB,KAAK,EAAExpB,IAAI,EAAEvI,EAAE,CAACqI,KAAK,GAAGgV,QAAQ,CAAC;IAC9D,CAAC,MAAM;MACL,MAAMC,SAAS,GAAGtd,EAAE,CAACi6C,WAAW,CAACr4C,MAAM,CAAC,CAACC,GAAG,EAAE0F,IAAI,KAAK3H,IAAI,CAACmC,GAAG,CAACF,GAAG,EAAE0F,IAAI,CAACkR,MAAM,CAAC,EAAE,CAAC,CAAC;MACrFriB,CAAC,GAAGumD,0BAA0B,GAAG1jD,cAAc,CAAC6O,IAAI,CAACiqB,KAAK,EAAE/xB,EAAE,CAACoI,GAAG,EAAEpI,EAAE,CAACsI,MAAM,GAAGgV,SAAS,GAAGxV,IAAI,CAAC0I,MAAM,CAAC0Z,OAAO,GAAGlqB,EAAE,CAACq6C,mBAAmB,CAAC,CAAC,CAAC;IAC7I;IACA,MAAMnkD,CAAC,GAAG+C,cAAc,CAACisB,QAAQ,EAAE3c,IAAI,EAAEA,IAAI,GAAG8U,QAAQ,CAAC;IACzD1Q,GAAG,CAACywB,SAAS,GAAGke,SAAS,CAACle,SAAS,CAACrkC,kBAAkB,CAACmsB,QAAQ,CAAC,CAAC;IACjEvY,GAAG,CAAC4wB,YAAY,GAAG,QAAQ;IAC3B5wB,GAAG,CAAC0S,WAAW,GAAGqa,SAAS,CAACvmC,KAAK;IACjCwZ,GAAG,CAACwS,SAAS,GAAGua,SAAS,CAACvmC,KAAK;IAC/BwZ,GAAG,CAACooB,IAAI,GAAG0nB,SAAS,CAACxhB,MAAM;IAC3BtiC,UAAU,CAACgU,GAAG,EAAE+sB,SAAS,CAACxa,IAAI,EAAEhpB,CAAC,EAAEE,CAAC,EAAEqmD,SAAS,CAAC;EAClD;EACApC,mBAAmBA,CAAA,EAAG;IACpB,MAAM3gB,SAAS,GAAG,IAAI,CAAC7yB,OAAO,CAACkU,KAAK;IACpC,MAAM0hC,SAAS,GAAG5jD,MAAM,CAAC6gC,SAAS,CAAC3E,IAAI,CAAC;IACxC,MAAM2nB,YAAY,GAAG7lD,SAAS,CAAC6iC,SAAS,CAACxP,OAAO,CAAC;IACjD,OAAOwP,SAAS,CAACjX,OAAO,GAAGg6B,SAAS,CAACxnB,UAAU,GAAGynB,YAAY,CAACjkC,MAAM,GAAG,CAAC;EAC3E;EACAmkC,gBAAgBA,CAAC1mD,CAAC,EAAEE,CAAC,EAAE;IACrB,MAAM4J,EAAE,GAAG,IAAI;IACf,IAAI5M,CAAC,EAAEypD,MAAM,EAAEC,EAAE;IACjB,IAAI5mD,CAAC,IAAI8J,EAAE,CAACuI,IAAI,IAAIrS,CAAC,IAAI8J,EAAE,CAACqI,KAAK,IAAIjS,CAAC,IAAI4J,EAAE,CAACoI,GAAG,IAAIhS,CAAC,IAAI4J,EAAE,CAACsI,MAAM,EAAE;MAClEw0C,EAAE,GAAG98C,EAAE,CAAC65C,cAAc;MACtB,KAAKzmD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0pD,EAAE,CAACr8C,MAAM,EAAE,EAAErN,CAAC,EAAE;QAC9BypD,MAAM,GAAGC,EAAE,CAAC1pD,CAAC,CAAC;QACd,IAAI8C,CAAC,IAAI2mD,MAAM,CAACt0C,IAAI,IAAIrS,CAAC,IAAI2mD,MAAM,CAACt0C,IAAI,GAAGs0C,MAAM,CAACnkC,KAAK,IAAItiB,CAAC,IAAIymD,MAAM,CAACz0C,GAAG,IAAIhS,CAAC,IAAIymD,MAAM,CAACz0C,GAAG,GAAGy0C,MAAM,CAACpkC,MAAM,EAAE;UAC7G,OAAOzY,EAAE,CAACg6C,WAAW,CAAC5mD,CAAC,CAAC;QAC1B;MACF;IACF;IACA,OAAO,IAAI;EACb;EACA2pD,WAAWA,CAAC/pD,CAAC,EAAE;IACb,MAAMgN,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,IAAI,CAACm2C,UAAU,CAAChqD,CAAC,CAACoM,IAAI,EAAE0I,IAAI,CAAC,EAAE;MAC7B;IACF;IACA,MAAMm1C,WAAW,GAAGj9C,EAAE,CAAC48C,gBAAgB,CAAC5pD,CAAC,CAACkD,CAAC,EAAElD,CAAC,CAACoD,CAAC,CAAC;IACjD,IAAIpD,CAAC,CAACoM,IAAI,KAAK,WAAW,EAAE;MAC1B,MAAMwvC,QAAQ,GAAG5uC,EAAE,CAAC85C,YAAY;MAChC,MAAMoD,QAAQ,GAAGxD,UAAU,CAAC9K,QAAQ,EAAEqO,WAAW,CAAC;MAClD,IAAIrO,QAAQ,IAAI,CAACsO,QAAQ,EAAE;QACzBjlD,QAAQ,CAAC6P,IAAI,CAACq1C,OAAO,EAAE,CAACnqD,CAAC,EAAE47C,QAAQ,EAAE5uC,EAAE,CAAC,EAAEA,EAAE,CAAC;MAC/C;MACAA,EAAE,CAAC85C,YAAY,GAAGmD,WAAW;MAC7B,IAAIA,WAAW,IAAI,CAACC,QAAQ,EAAE;QAC5BjlD,QAAQ,CAAC6P,IAAI,CAACmlC,OAAO,EAAE,CAACj6C,CAAC,EAAEiqD,WAAW,EAAEj9C,EAAE,CAAC,EAAEA,EAAE,CAAC;MAClD;IACF,CAAC,MAAM,IAAIi9C,WAAW,EAAE;MACtBhlD,QAAQ,CAAC6P,IAAI,CAAC2X,OAAO,EAAE,CAACzsB,CAAC,EAAEiqD,WAAW,EAAEj9C,EAAE,CAAC,EAAEA,EAAE,CAAC;IAClD;EACF;AACF;AACA,SAASg9C,UAAUA,CAAC59C,IAAI,EAAE0I,IAAI,EAAE;EAC9B,IAAI1I,IAAI,KAAK,WAAW,KAAK0I,IAAI,CAACmlC,OAAO,IAAInlC,IAAI,CAACq1C,OAAO,CAAC,EAAE;IAC1D,OAAO,IAAI;EACb;EACA,IAAIr1C,IAAI,CAAC2X,OAAO,KAAKrgB,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,SAAS,CAAC,EAAE;IAC5D,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;AACA,IAAIg+C,aAAa,GAAG;EAClBpzC,EAAE,EAAE,QAAQ;EACZqzC,QAAQ,EAAE1D,MAAM;EAChB75C,KAAKA,CAACb,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IAC3B,MAAMiY,MAAM,GAAG7f,KAAK,CAAC6f,MAAM,GAAG,IAAI66B,MAAM,CAAC;MAAChtC,GAAG,EAAE1N,KAAK,CAAC0N,GAAG;MAAE9F,OAAO;MAAE5H;IAAK,CAAC,CAAC;IAC1EwoB,OAAO,CAACphB,SAAS,CAACpH,KAAK,EAAE6f,MAAM,EAAEjY,OAAO,CAAC;IACzC4gB,OAAO,CAAC0C,MAAM,CAAClrB,KAAK,EAAE6f,MAAM,CAAC;EAC/B,CAAC;EACD7c,IAAIA,CAAChD,KAAK,EAAE;IACVwoB,OAAO,CAAC4C,SAAS,CAACprB,KAAK,EAAEA,KAAK,CAAC6f,MAAM,CAAC;IACtC,OAAO7f,KAAK,CAAC6f,MAAM;EACrB,CAAC;EACDkY,YAAYA,CAAC/3B,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IAClC,MAAMiY,MAAM,GAAG7f,KAAK,CAAC6f,MAAM;IAC3B2I,OAAO,CAACphB,SAAS,CAACpH,KAAK,EAAE6f,MAAM,EAAEjY,OAAO,CAAC;IACzCiY,MAAM,CAACjY,OAAO,GAAGA,OAAO;EAC1B,CAAC;EACDwxB,WAAWA,CAACp5B,KAAK,EAAE;IACjB,MAAM6f,MAAM,GAAG7f,KAAK,CAAC6f,MAAM;IAC3BA,MAAM,CAACq7B,WAAW,CAAC,CAAC;IACpBr7B,MAAM,CAACo8B,cAAc,CAAC,CAAC;EACzB,CAAC;EACDoC,UAAUA,CAACr+C,KAAK,EAAE6vB,IAAI,EAAE;IACtB,IAAI,CAACA,IAAI,CAAC4d,MAAM,EAAE;MAChBztC,KAAK,CAAC6f,MAAM,CAACi+B,WAAW,CAACjuB,IAAI,CAACvtB,KAAK,CAAC;IACtC;EACF,CAAC;EACD9N,QAAQ,EAAE;IACRgvB,OAAO,EAAE,IAAI;IACbyC,QAAQ,EAAE,KAAK;IACf6M,KAAK,EAAE,QAAQ;IACfnK,QAAQ,EAAE,IAAI;IACd7f,OAAO,EAAE,KAAK;IACd6W,MAAM,EAAE,IAAI;IACZa,OAAOA,CAACzsB,CAAC,EAAE0sB,UAAU,EAAEZ,MAAM,EAAE;MAC7B,MAAMhW,KAAK,GAAG4W,UAAU,CAACtW,YAAY;MACrC,MAAMm0C,EAAE,GAAGz+B,MAAM,CAAC7f,KAAK;MACvB,IAAIs+C,EAAE,CAAC1gC,gBAAgB,CAAC/T,KAAK,CAAC,EAAE;QAC9By0C,EAAE,CAACv3C,IAAI,CAAC8C,KAAK,CAAC;QACd4W,UAAU,CAACF,MAAM,GAAG,IAAI;MAC1B,CAAC,MAAM;QACL+9B,EAAE,CAAC13C,IAAI,CAACiD,KAAK,CAAC;QACd4W,UAAU,CAACF,MAAM,GAAG,KAAK;MAC3B;IACF,CAAC;IACDytB,OAAO,EAAE,IAAI;IACbkQ,OAAO,EAAE,IAAI;IACb3sC,MAAM,EAAE;MACNrd,KAAK,EAAGwZ,GAAG,IAAKA,GAAG,CAAC1N,KAAK,CAAC4H,OAAO,CAAC1T,KAAK;MACvComD,QAAQ,EAAE,EAAE;MACZrvB,OAAO,EAAE,EAAE;MACXnL,cAAcA,CAAC9f,KAAK,EAAE;QACpB,MAAM0P,QAAQ,GAAG1P,KAAK,CAACsK,IAAI,CAACoF,QAAQ;QACpC,MAAM;UAAC6B,MAAM,EAAE;YAACgpC,aAAa;YAAE/H,UAAU;YAAErU;UAAS;QAAC,CAAC,GAAGn+B,KAAK,CAAC6f,MAAM,CAACjY,OAAO;QAC7E,OAAO5H,KAAK,CAAC2J,sBAAsB,CAAC,CAAC,CAACoW,GAAG,CAAErV,IAAI,IAAK;UAClD,MAAMsV,KAAK,GAAGtV,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAACqnC,aAAa,GAAG,CAAC,GAAGz6C,SAAS,CAAC;UACrE,MAAMyf,WAAW,GAAG3nB,SAAS,CAACooB,KAAK,CAACT,WAAW,CAAC;UAChD,OAAO;YACLU,IAAI,EAAEvQ,QAAQ,CAAChF,IAAI,CAACb,KAAK,CAAC,CAAC8I,KAAK;YAChCuN,SAAS,EAAEF,KAAK,CAACG,eAAe;YAChCI,MAAM,EAAE,CAAC7V,IAAI,CAAC5D,OAAO;YACrB0oC,OAAO,EAAExvB,KAAK,CAACyvB,cAAc;YAC7BkN,QAAQ,EAAE38B,KAAK,CAACkS,UAAU;YAC1BsN,cAAc,EAAExf,KAAK,CAACmS,gBAAgB;YACtC0c,QAAQ,EAAE7uB,KAAK,CAAC0vB,eAAe;YAC/BpvB,SAAS,EAAE,CAACf,WAAW,CAAC9F,KAAK,GAAG8F,WAAW,CAAC/F,MAAM,IAAI,CAAC;YACvD4G,WAAW,EAAEJ,KAAK,CAACK,WAAW;YAC9BmyB,UAAU,EAAEA,UAAU,IAAIxyB,KAAK,CAACwyB,UAAU;YAC1Cx2B,QAAQ,EAAEgE,KAAK,CAAChE,QAAQ;YACxBmiB,SAAS,EAAEA,SAAS,IAAIne,KAAK,CAACme,SAAS;YACvCh0B,YAAY,EAAEO,IAAI,CAACb;UACrB,CAAC;QACH,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IACDiS,KAAK,EAAE;MACL5nB,KAAK,EAAGwZ,GAAG,IAAKA,GAAG,CAAC1N,KAAK,CAAC4H,OAAO,CAAC1T,KAAK;MACvCsvB,OAAO,EAAE,KAAK;MACdyC,QAAQ,EAAE,QAAQ;MAClBhG,IAAI,EAAE;IACR;EACF,CAAC;EACDzlB,WAAW,EAAE;IACXgM,WAAW,EAAGC,IAAI,IAAK,CAACA,IAAI,CAACwsB,UAAU,CAAC,IAAI,CAAC;IAC7C1hB,MAAM,EAAE;MACN/K,WAAW,EAAGC,IAAI,IAAK,CAAC,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC8gC,QAAQ,CAAC9gC,IAAI;IAC5E;EACF;AACF,CAAC;AAED,MAAM83C,KAAK,SAASjuB,OAAO,CAAC;EAC1B9wB,WAAWA,CAACyH,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAACjH,KAAK,GAAGiH,MAAM,CAACjH,KAAK;IACzB,IAAI,CAAC4H,OAAO,GAAGX,MAAM,CAACW,OAAO;IAC7B,IAAI,CAAC8F,GAAG,GAAGzG,MAAM,CAACyG,GAAG;IACrB,IAAI,CAAC8wC,QAAQ,GAAG1+C,SAAS;IACzB,IAAI,CAACqJ,GAAG,GAAGrJ,SAAS;IACpB,IAAI,CAACuJ,MAAM,GAAGvJ,SAAS;IACvB,IAAI,CAACwJ,IAAI,GAAGxJ,SAAS;IACrB,IAAI,CAACsJ,KAAK,GAAGtJ,SAAS;IACtB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAACmmB,QAAQ,GAAGnmB,SAAS;IACzB,IAAI,CAAC6f,MAAM,GAAG7f,SAAS;IACvB,IAAI,CAAC6oB,QAAQ,GAAG7oB,SAAS;EAC3B;EACAuF,MAAMA,CAAC+Y,QAAQ,EAAEC,SAAS,EAAE;IAC1B,MAAMtd,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB7G,EAAE,CAACuI,IAAI,GAAG,CAAC;IACXvI,EAAE,CAACoI,GAAG,GAAG,CAAC;IACV,IAAI,CAACN,IAAI,CAAC2a,OAAO,EAAE;MACjBziB,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACqI,KAAK,GAAGrI,EAAE,CAACsI,MAAM,GAAG,CAAC;MAC/C;IACF;IACAtI,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACqI,KAAK,GAAGgV,QAAQ;IAC9Brd,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsI,MAAM,GAAGgV,SAAS;IACjC,MAAM+f,SAAS,GAAG9pC,OAAO,CAACuU,IAAI,CAACoX,IAAI,CAAC,GAAGpX,IAAI,CAACoX,IAAI,CAACze,MAAM,GAAG,CAAC;IAC3DT,EAAE,CAACy9C,QAAQ,GAAG5mD,SAAS,CAACiR,IAAI,CAACoiB,OAAO,CAAC;IACrC,MAAMwzB,QAAQ,GAAGrgB,SAAS,GAAGxkC,MAAM,CAACiP,IAAI,CAACitB,IAAI,CAAC,CAACE,UAAU,GAAGj1B,EAAE,CAACy9C,QAAQ,CAAChlC,MAAM;IAC9E,IAAIzY,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBhY,EAAE,CAACyY,MAAM,GAAGilC,QAAQ;IACtB,CAAC,MAAM;MACL19C,EAAE,CAAC0Y,KAAK,GAAGglC,QAAQ;IACrB;EACF;EACA1lC,YAAYA,CAAA,EAAG;IACb,MAAM+O,GAAG,GAAG,IAAI,CAAClgB,OAAO,CAACqe,QAAQ;IACjC,OAAO6B,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,QAAQ;EAC1C;EACA42B,SAASA,CAACxjC,MAAM,EAAE;IAChB,MAAM;MAAC/R,GAAG;MAAEG,IAAI;MAAED,MAAM;MAAED,KAAK;MAAExB;IAAO,CAAC,GAAG,IAAI;IAChD,MAAMkrB,KAAK,GAAGlrB,OAAO,CAACkrB,KAAK;IAC3B,IAAI9W,QAAQ,GAAG,CAAC;IAChB,IAAIoC,QAAQ,EAAEiY,MAAM,EAAEC,MAAM;IAC5B,IAAI,IAAI,CAACvd,YAAY,CAAC,CAAC,EAAE;MACvBsd,MAAM,GAAGr8B,cAAc,CAAC84B,KAAK,EAAExpB,IAAI,EAAEF,KAAK,CAAC;MAC3CktB,MAAM,GAAGntB,GAAG,GAAG+R,MAAM;MACrBkD,QAAQ,GAAGhV,KAAK,GAAGE,IAAI;IACzB,CAAC,MAAM;MACL,IAAI1B,OAAO,CAACqe,QAAQ,KAAK,MAAM,EAAE;QAC/BoQ,MAAM,GAAG/sB,IAAI,GAAG4R,MAAM;QACtBob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAK,EAAEzpB,MAAM,EAAEF,GAAG,CAAC;QAC3C6S,QAAQ,GAAGllB,EAAE,GAAG,CAAC,GAAG;MACtB,CAAC,MAAM;QACLu/B,MAAM,GAAGjtB,KAAK,GAAG8R,MAAM;QACvBob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAK,EAAE3pB,GAAG,EAAEE,MAAM,CAAC;QAC3C2S,QAAQ,GAAGllB,EAAE,GAAG,GAAG;MACrB;MACAsnB,QAAQ,GAAG/U,MAAM,GAAGF,GAAG;IACzB;IACA,OAAO;MAACktB,MAAM;MAAEC,MAAM;MAAElY,QAAQ;MAAEpC;IAAQ,CAAC;EAC7C;EACAva,IAAIA,CAAA,EAAG;IACL,MAAMV,EAAE,GAAG,IAAI;IACf,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;IAClB,MAAM7E,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,IAAI,CAACiB,IAAI,CAAC2a,OAAO,EAAE;MACjB;IACF;IACA,MAAMm7B,QAAQ,GAAG/kD,MAAM,CAACiP,IAAI,CAACitB,IAAI,CAAC;IAClC,MAAME,UAAU,GAAG2oB,QAAQ,CAAC3oB,UAAU;IACtC,MAAM9a,MAAM,GAAG8a,UAAU,GAAG,CAAC,GAAGj1B,EAAE,CAACy9C,QAAQ,CAACr1C,GAAG;IAC/C,MAAM;MAACktB,MAAM;MAAEC,MAAM;MAAElY,QAAQ;MAAEpC;IAAQ,CAAC,GAAGjb,EAAE,CAAC29C,SAAS,CAACxjC,MAAM,CAAC;IACjExhB,UAAU,CAACgU,GAAG,EAAE7E,IAAI,CAACoX,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE0+B,QAAQ,EAAE;MACzCzqD,KAAK,EAAE2U,IAAI,CAAC3U,KAAK;MACjBkqB,QAAQ;MACRpC,QAAQ;MACRmiB,SAAS,EAAErkC,kBAAkB,CAAC+O,IAAI,CAACiqB,KAAK,CAAC;MACzCwL,YAAY,EAAE,QAAQ;MACtBM,WAAW,EAAE,CAACvI,MAAM,EAAEC,MAAM;IAC9B,CAAC,CAAC;EACJ;AACF;AACA,SAASsoB,WAAWA,CAAC5+C,KAAK,EAAEy6B,SAAS,EAAE;EACrC,MAAM3e,KAAK,GAAG,IAAIyiC,KAAK,CAAC;IACtB7wC,GAAG,EAAE1N,KAAK,CAAC0N,GAAG;IACd9F,OAAO,EAAE6yB,SAAS;IAClBz6B;EACF,CAAC,CAAC;EACFwoB,OAAO,CAACphB,SAAS,CAACpH,KAAK,EAAE8b,KAAK,EAAE2e,SAAS,CAAC;EAC1CjS,OAAO,CAAC0C,MAAM,CAAClrB,KAAK,EAAE8b,KAAK,CAAC;EAC5B9b,KAAK,CAAC6+C,UAAU,GAAG/iC,KAAK;AAC1B;AACA,IAAIgjC,YAAY,GAAG;EACjB/zC,EAAE,EAAE,OAAO;EACXqzC,QAAQ,EAAEG,KAAK;EACf19C,KAAKA,CAACb,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IAC3Bg3C,WAAW,CAAC5+C,KAAK,EAAE4H,OAAO,CAAC;EAC7B,CAAC;EACD5E,IAAIA,CAAChD,KAAK,EAAE;IACV,MAAM6+C,UAAU,GAAG7+C,KAAK,CAAC6+C,UAAU;IACnCr2B,OAAO,CAAC4C,SAAS,CAACprB,KAAK,EAAE6+C,UAAU,CAAC;IACpC,OAAO7+C,KAAK,CAAC6+C,UAAU;EACzB,CAAC;EACD9mB,YAAYA,CAAC/3B,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IAClC,MAAMkU,KAAK,GAAG9b,KAAK,CAAC6+C,UAAU;IAC9Br2B,OAAO,CAACphB,SAAS,CAACpH,KAAK,EAAE8b,KAAK,EAAElU,OAAO,CAAC;IACxCkU,KAAK,CAAClU,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDpT,QAAQ,EAAE;IACRs+B,KAAK,EAAE,QAAQ;IACftP,OAAO,EAAE,KAAK;IACdsS,IAAI,EAAE;MACJ9V,KAAK,EAAE;IACT,CAAC;IACD2I,QAAQ,EAAE,IAAI;IACdsC,OAAO,EAAE,EAAE;IACXhF,QAAQ,EAAE,KAAK;IACfhG,IAAI,EAAE,EAAE;IACRN,MAAM,EAAE;EACV,CAAC;EACDiR,aAAa,EAAE;IACb18B,KAAK,EAAE;EACT,CAAC;EACDsG,WAAW,EAAE;IACXgM,WAAW,EAAE,IAAI;IACjBD,UAAU,EAAE;EACd;AACF,CAAC;AAED,MAAMw4C,WAAW,GAAG;EAClBC,OAAOA,CAACz9C,KAAK,EAAE;IACb,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE;MACjB,OAAO,KAAK;IACd;IACA,IAAIrN,CAAC,EAAEwgC,GAAG;IACV,IAAI19B,CAAC,GAAG,CAAC;IACT,IAAIE,CAAC,GAAG,CAAC;IACT,IAAI4Z,KAAK,GAAG,CAAC;IACb,KAAK5c,CAAC,GAAG,CAAC,EAAEwgC,GAAG,GAAGpzB,KAAK,CAACC,MAAM,EAAErN,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;MAC5C,MAAM2xB,EAAE,GAAGvkB,KAAK,CAACpN,CAAC,CAAC,CAAC4Y,OAAO;MAC3B,IAAI+Y,EAAE,IAAIA,EAAE,CAAC2K,QAAQ,CAAC,CAAC,EAAE;QACvB,MAAM3I,GAAG,GAAGhC,EAAE,CAACyK,eAAe,CAAC,CAAC;QAChCt5B,CAAC,IAAI6wB,GAAG,CAAC7wB,CAAC;QACVE,CAAC,IAAI2wB,GAAG,CAAC3wB,CAAC;QACV,EAAE4Z,KAAK;MACT;IACF;IACA,OAAO;MACL9Z,CAAC,EAAEA,CAAC,GAAG8Z,KAAK;MACZ5Z,CAAC,EAAEA,CAAC,GAAG4Z;IACT,CAAC;EACH,CAAC;EACD2W,OAAOA,CAACnmB,KAAK,EAAE09C,aAAa,EAAE;IAC5B,IAAIhoD,CAAC,GAAGgoD,aAAa,CAAChoD,CAAC;IACvB,IAAIE,CAAC,GAAG8nD,aAAa,CAAC9nD,CAAC;IACvB,IAAI+vB,WAAW,GAAG/b,MAAM,CAACE,iBAAiB;IAC1C,IAAIlX,CAAC,EAAEwgC,GAAG,EAAEuqB,cAAc;IAC1B,KAAK/qD,CAAC,GAAG,CAAC,EAAEwgC,GAAG,GAAGpzB,KAAK,CAACC,MAAM,EAAErN,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;MAC5C,MAAM2xB,EAAE,GAAGvkB,KAAK,CAACpN,CAAC,CAAC,CAAC4Y,OAAO;MAC3B,IAAI+Y,EAAE,IAAIA,EAAE,CAAC2K,QAAQ,CAAC,CAAC,EAAE;QACvB,MAAMlX,MAAM,GAAGuM,EAAE,CAACqB,cAAc,CAAC,CAAC;QAClC,MAAM5yB,CAAC,GAAG6J,qBAAqB,CAAC6gD,aAAa,EAAE1lC,MAAM,CAAC;QACtD,IAAIhlB,CAAC,GAAG2yB,WAAW,EAAE;UACnBA,WAAW,GAAG3yB,CAAC;UACf2qD,cAAc,GAAGp5B,EAAE;QACrB;MACF;IACF;IACA,IAAIo5B,cAAc,EAAE;MAClB,MAAMC,EAAE,GAAGD,cAAc,CAAC3uB,eAAe,CAAC,CAAC;MAC3Ct5B,CAAC,GAAGkoD,EAAE,CAACloD,CAAC;MACRE,CAAC,GAAGgoD,EAAE,CAAChoD,CAAC;IACV;IACA,OAAO;MACLF,CAAC;MACDE;IACF,CAAC;EACH;AACF,CAAC;AACD,SAASioD,YAAYA,CAACxmC,IAAI,EAAEymC,MAAM,EAAE;EAClC,IAAIA,MAAM,EAAE;IACV,IAAI/qD,OAAO,CAAC+qD,MAAM,CAAC,EAAE;MACnB70C,KAAK,CAACuL,SAAS,CAACvT,IAAI,CAAC88C,KAAK,CAAC1mC,IAAI,EAAEymC,MAAM,CAAC;IAC1C,CAAC,MAAM;MACLzmC,IAAI,CAACpW,IAAI,CAAC68C,MAAM,CAAC;IACnB;EACF;EACA,OAAOzmC,IAAI;AACb;AACA,SAAS2mC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYC,MAAM,KAAKD,GAAG,CAAC1lC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChF,OAAO0lC,GAAG,CAACpe,KAAK,CAAC,IAAI,CAAC;EACxB;EACA,OAAOoe,GAAG;AACZ;AACA,SAASE,iBAAiBA,CAAC1/C,KAAK,EAAE0B,IAAI,EAAE;EACtC,MAAM;IAACqL,OAAO;IAAE5C,YAAY;IAAEN;EAAK,CAAC,GAAGnI,IAAI;EAC3C,MAAMkK,UAAU,GAAG5L,KAAK,CAAC2P,cAAc,CAACxF,YAAY,CAAC,CAACyB,UAAU;EAChE,MAAM;IAAC+G,KAAK;IAAEtK;EAAK,CAAC,GAAGuD,UAAU,CAAC8G,gBAAgB,CAAC7I,KAAK,CAAC;EACzD,OAAO;IACL7J,KAAK;IACL2S,KAAK;IACL9G,MAAM,EAAED,UAAU,CAACgG,SAAS,CAAC/H,KAAK,CAAC;IACnCoD,GAAG,EAAEjN,KAAK,CAACsK,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC,CAACG,IAAI,CAACT,KAAK,CAAC;IAClDgX,cAAc,EAAExY,KAAK;IACrBwE,OAAO,EAAEjB,UAAU,CAAC+C,UAAU,CAAC,CAAC;IAChC3B,SAAS,EAAEnD,KAAK;IAChBM,YAAY;IACZ4C;EACF,CAAC;AACH;AACA,SAAS4yC,cAAcA,CAAC9jC,OAAO,EAAEjU,OAAO,EAAE;EACxC,MAAM8F,GAAG,GAAGmO,OAAO,CAAC3U,MAAM,CAACwG,GAAG;EAC9B,MAAM;IAACkyC,IAAI;IAAEC,MAAM;IAAE/jC;EAAK,CAAC,GAAGD,OAAO;EACrC,MAAM;IAACy+B,QAAQ;IAAED;EAAS,CAAC,GAAGzyC,OAAO;EACrC,MAAMk4C,QAAQ,GAAGlmD,MAAM,CAACgO,OAAO,CAACk4C,QAAQ,CAAC;EACzC,MAAMtC,SAAS,GAAG5jD,MAAM,CAACgO,OAAO,CAAC41C,SAAS,CAAC;EAC3C,MAAMuC,UAAU,GAAGnmD,MAAM,CAACgO,OAAO,CAACm4C,UAAU,CAAC;EAC7C,MAAMC,cAAc,GAAGlkC,KAAK,CAACta,MAAM;EACnC,MAAMy+C,eAAe,GAAGJ,MAAM,CAACr+C,MAAM;EACrC,MAAM0+C,iBAAiB,GAAGN,IAAI,CAACp+C,MAAM;EACrC,MAAMypB,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAO,CAAC;EAC1C,IAAIzR,MAAM,GAAGyR,OAAO,CAACzR,MAAM;EAC3B,IAAIC,KAAK,GAAG,CAAC;EACb,IAAI0mC,kBAAkB,GAAGP,IAAI,CAACj9C,MAAM,CAAC,CAACoO,KAAK,EAAEqvC,QAAQ,KAAKrvC,KAAK,GAAGqvC,QAAQ,CAACC,MAAM,CAAC7+C,MAAM,GAAG4+C,QAAQ,CAACrqB,KAAK,CAACv0B,MAAM,GAAG4+C,QAAQ,CAACE,KAAK,CAAC9+C,MAAM,EAAE,CAAC,CAAC;EAC5I2+C,kBAAkB,IAAItkC,OAAO,CAAC0kC,UAAU,CAAC/+C,MAAM,GAAGqa,OAAO,CAAC2kC,SAAS,CAACh/C,MAAM;EAC1E,IAAIw+C,cAAc,EAAE;IAClBxmC,MAAM,IAAIwmC,cAAc,GAAGxC,SAAS,CAACxnB,UAAU,GAC9C,CAACgqB,cAAc,GAAG,CAAC,IAAIp4C,OAAO,CAAC64C,YAAY,GAC3C74C,OAAO,CAAC84C,iBAAiB;EAC5B;EACA,IAAIP,kBAAkB,EAAE;IACtB,MAAMQ,cAAc,GAAG/4C,OAAO,CAACg5C,aAAa,GAAGjgD,IAAI,CAACmC,GAAG,CAACu3C,SAAS,EAAEyF,QAAQ,CAAC9pB,UAAU,CAAC,GAAG8pB,QAAQ,CAAC9pB,UAAU;IAC7Gxc,MAAM,IAAI0mC,iBAAiB,GAAGS,cAAc,GAC3C,CAACR,kBAAkB,GAAGD,iBAAiB,IAAIJ,QAAQ,CAAC9pB,UAAU,GAC9D,CAACmqB,kBAAkB,GAAG,CAAC,IAAIv4C,OAAO,CAACi5C,WAAW;EACjD;EACA,IAAIZ,eAAe,EAAE;IACnBzmC,MAAM,IAAI5R,OAAO,CAACk5C,eAAe,GAChCb,eAAe,GAAGF,UAAU,CAAC/pB,UAAU,GACvC,CAACiqB,eAAe,GAAG,CAAC,IAAIr4C,OAAO,CAACm5C,aAAa;EAChD;EACA,IAAIC,YAAY,GAAG,CAAC;EACpB,MAAMC,YAAY,GAAG,SAAAA,CAASjgC,IAAI,EAAE;IAClCvH,KAAK,GAAG9Y,IAAI,CAACmC,GAAG,CAAC2W,KAAK,EAAE/L,GAAG,CAACiuC,WAAW,CAAC36B,IAAI,CAAC,CAACvH,KAAK,GAAGunC,YAAY,CAAC;EACrE,CAAC;EACDtzC,GAAG,CAACqxB,IAAI,CAAC,CAAC;EACVrxB,GAAG,CAACooB,IAAI,GAAG0nB,SAAS,CAACxhB,MAAM;EAC3BlkC,IAAI,CAAC+jB,OAAO,CAACC,KAAK,EAAEmlC,YAAY,CAAC;EACjCvzC,GAAG,CAACooB,IAAI,GAAGgqB,QAAQ,CAAC9jB,MAAM;EAC1BlkC,IAAI,CAAC+jB,OAAO,CAAC0kC,UAAU,CAAClqC,MAAM,CAACwF,OAAO,CAAC2kC,SAAS,CAAC,EAAES,YAAY,CAAC;EAChED,YAAY,GAAGp5C,OAAO,CAACg5C,aAAa,GAAItG,QAAQ,GAAG,CAAC,GAAI,CAAC;EACzDxiD,IAAI,CAAC8nD,IAAI,EAAGQ,QAAQ,IAAK;IACvBtoD,IAAI,CAACsoD,QAAQ,CAACC,MAAM,EAAEY,YAAY,CAAC;IACnCnpD,IAAI,CAACsoD,QAAQ,CAACrqB,KAAK,EAAEkrB,YAAY,CAAC;IAClCnpD,IAAI,CAACsoD,QAAQ,CAACE,KAAK,EAAEW,YAAY,CAAC;EACpC,CAAC,CAAC;EACFD,YAAY,GAAG,CAAC;EAChBtzC,GAAG,CAACooB,IAAI,GAAGiqB,UAAU,CAAC/jB,MAAM;EAC5BlkC,IAAI,CAAC+jB,OAAO,CAACgkC,MAAM,EAAEoB,YAAY,CAAC;EAClCvzC,GAAG,CAACuxB,OAAO,CAAC,CAAC;EACbxlB,KAAK,IAAIwR,OAAO,CAACxR,KAAK;EACtB,OAAO;IAACA,KAAK;IAAED;EAAM,CAAC;AACxB;AACA,SAAS0nC,eAAeA,CAAClhD,KAAK,EAAEsI,IAAI,EAAE;EACpC,MAAM;IAACnR,CAAC;IAAEqiB;EAAM,CAAC,GAAGlR,IAAI;EACxB,IAAInR,CAAC,GAAGqiB,MAAM,GAAG,CAAC,EAAE;IAClB,OAAO,KAAK;EACd,CAAC,MAAM,IAAIriB,CAAC,GAAI6I,KAAK,CAACwZ,MAAM,GAAGA,MAAM,GAAG,CAAE,EAAE;IAC1C,OAAO,QAAQ;EACjB;EACA,OAAO,QAAQ;AACjB;AACA,SAAS2nC,mBAAmBA,CAACC,MAAM,EAAEphD,KAAK,EAAE4H,OAAO,EAAEU,IAAI,EAAE;EACzD,MAAM;IAACrR,CAAC;IAAEwiB;EAAK,CAAC,GAAGnR,IAAI;EACvB,MAAM+4C,KAAK,GAAGz5C,OAAO,CAAC05C,SAAS,GAAG15C,OAAO,CAAC25C,YAAY;EACtD,IAAIH,MAAM,KAAK,MAAM,IAAInqD,CAAC,GAAGwiB,KAAK,GAAG4nC,KAAK,GAAGrhD,KAAK,CAACyZ,KAAK,EAAE;IACxD,OAAO,IAAI;EACb;EACA,IAAI2nC,MAAM,KAAK,OAAO,IAAInqD,CAAC,GAAGwiB,KAAK,GAAG4nC,KAAK,GAAG,CAAC,EAAE;IAC/C,OAAO,IAAI;EACb;AACF;AACA,SAASG,eAAeA,CAACxhD,KAAK,EAAE4H,OAAO,EAAEU,IAAI,EAAEm5C,MAAM,EAAE;EACrD,MAAM;IAACxqD,CAAC;IAAEwiB;EAAK,CAAC,GAAGnR,IAAI;EACvB,MAAM;IAACmR,KAAK,EAAEioC,UAAU;IAAEzuC,SAAS,EAAE;MAAC3J,IAAI;MAAEF;IAAK;EAAC,CAAC,GAAGpJ,KAAK;EAC3D,IAAIohD,MAAM,GAAG,QAAQ;EACrB,IAAIK,MAAM,KAAK,QAAQ,EAAE;IACvBL,MAAM,GAAGnqD,CAAC,IAAI,CAACqS,IAAI,GAAGF,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO;EACrD,CAAC,MAAM,IAAInS,CAAC,IAAIwiB,KAAK,GAAG,CAAC,EAAE;IACzB2nC,MAAM,GAAG,MAAM;EACjB,CAAC,MAAM,IAAInqD,CAAC,IAAIyqD,UAAU,GAAGjoC,KAAK,GAAG,CAAC,EAAE;IACtC2nC,MAAM,GAAG,OAAO;EAClB;EACA,IAAID,mBAAmB,CAACC,MAAM,EAAEphD,KAAK,EAAE4H,OAAO,EAAEU,IAAI,CAAC,EAAE;IACrD84C,MAAM,GAAG,QAAQ;EACnB;EACA,OAAOA,MAAM;AACf;AACA,SAASO,kBAAkBA,CAAC3hD,KAAK,EAAE4H,OAAO,EAAEU,IAAI,EAAE;EAChD,MAAMm5C,MAAM,GAAG75C,OAAO,CAAC65C,MAAM,IAAIP,eAAe,CAAClhD,KAAK,EAAEsI,IAAI,CAAC;EAC7D,OAAO;IACL84C,MAAM,EAAEx5C,OAAO,CAACw5C,MAAM,IAAII,eAAe,CAACxhD,KAAK,EAAE4H,OAAO,EAAEU,IAAI,EAAEm5C,MAAM,CAAC;IACvEA;EACF,CAAC;AACH;AACA,SAASG,MAAMA,CAACt5C,IAAI,EAAE84C,MAAM,EAAE;EAC5B,IAAI;IAACnqD,CAAC;IAAEwiB;EAAK,CAAC,GAAGnR,IAAI;EACrB,IAAI84C,MAAM,KAAK,OAAO,EAAE;IACtBnqD,CAAC,IAAIwiB,KAAK;EACZ,CAAC,MAAM,IAAI2nC,MAAM,KAAK,QAAQ,EAAE;IAC9BnqD,CAAC,IAAKwiB,KAAK,GAAG,CAAE;EAClB;EACA,OAAOxiB,CAAC;AACV;AACA,SAAS4qD,MAAMA,CAACv5C,IAAI,EAAEm5C,MAAM,EAAEK,cAAc,EAAE;EAC5C,IAAI;IAAC3qD,CAAC;IAAEqiB;EAAM,CAAC,GAAGlR,IAAI;EACtB,IAAIm5C,MAAM,KAAK,KAAK,EAAE;IACpBtqD,CAAC,IAAI2qD,cAAc;EACrB,CAAC,MAAM,IAAIL,MAAM,KAAK,QAAQ,EAAE;IAC9BtqD,CAAC,IAAIqiB,MAAM,GAAGsoC,cAAc;EAC9B,CAAC,MAAM;IACL3qD,CAAC,IAAKqiB,MAAM,GAAG,CAAE;EACnB;EACA,OAAOriB,CAAC;AACV;AACA,SAAS4qD,kBAAkBA,CAACn6C,OAAO,EAAEU,IAAI,EAAE05C,SAAS,EAAEhiD,KAAK,EAAE;EAC3D,MAAM;IAACshD,SAAS;IAAEC,YAAY;IAAEU;EAAY,CAAC,GAAGr6C,OAAO;EACvD,MAAM;IAACw5C,MAAM;IAAEK;EAAM,CAAC,GAAGO,SAAS;EAClC,MAAMF,cAAc,GAAGR,SAAS,GAAGC,YAAY;EAC/C,MAAMW,gBAAgB,GAAGD,YAAY,GAAGV,YAAY;EACpD,IAAItqD,CAAC,GAAG2qD,MAAM,CAACt5C,IAAI,EAAE84C,MAAM,CAAC;EAC5B,MAAMjqD,CAAC,GAAG0qD,MAAM,CAACv5C,IAAI,EAAEm5C,MAAM,EAAEK,cAAc,CAAC;EAC9C,IAAIL,MAAM,KAAK,QAAQ,EAAE;IACvB,IAAIL,MAAM,KAAK,MAAM,EAAE;MACrBnqD,CAAC,IAAI6qD,cAAc;IACrB,CAAC,MAAM,IAAIV,MAAM,KAAK,OAAO,EAAE;MAC7BnqD,CAAC,IAAI6qD,cAAc;IACrB;EACF,CAAC,MAAM,IAAIV,MAAM,KAAK,MAAM,EAAE;IAC5BnqD,CAAC,IAAIirD,gBAAgB;EACvB,CAAC,MAAM,IAAId,MAAM,KAAK,OAAO,EAAE;IAC7BnqD,CAAC,IAAIirD,gBAAgB;EACvB;EACA,OAAO;IACLjrD,CAAC,EAAEC,WAAW,CAACD,CAAC,EAAE,CAAC,EAAE+I,KAAK,CAACyZ,KAAK,GAAGnR,IAAI,CAACmR,KAAK,CAAC;IAC9CtiB,CAAC,EAAED,WAAW,CAACC,CAAC,EAAE,CAAC,EAAE6I,KAAK,CAACwZ,MAAM,GAAGlR,IAAI,CAACkR,MAAM;EACjD,CAAC;AACH;AACA,SAAS2oC,WAAWA,CAACtmC,OAAO,EAAEiX,KAAK,EAAElrB,OAAO,EAAE;EAC5C,MAAMqjB,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAO,CAAC;EAC1C,OAAO6H,KAAK,KAAK,QAAQ,GACrBjX,OAAO,CAAC5kB,CAAC,GAAG4kB,OAAO,CAACpC,KAAK,GAAG,CAAC,GAC7BqZ,KAAK,KAAK,OAAO,GACfjX,OAAO,CAAC5kB,CAAC,GAAG4kB,OAAO,CAACpC,KAAK,GAAGwR,OAAO,CAAC7hB,KAAK,GACzCyS,OAAO,CAAC5kB,CAAC,GAAGg0B,OAAO,CAAC3hB,IAAI;AAChC;AACA,SAAS84C,uBAAuBA,CAACppD,QAAQ,EAAE;EACzC,OAAOomD,YAAY,CAAC,EAAE,EAAEG,aAAa,CAACvmD,QAAQ,CAAC,CAAC;AAClD;AACA,SAASqpD,oBAAoBA,CAAC11C,MAAM,EAAEkP,OAAO,EAAEymC,YAAY,EAAE;EAC3D,OAAOp8C,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CkP,OAAO;IACPymC,YAAY;IACZniD,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASoiD,iBAAiBA,CAACniD,SAAS,EAAEiT,OAAO,EAAE;EAC7C,MAAM2R,QAAQ,GAAG3R,OAAO,IAAIA,OAAO,CAACxG,OAAO,IAAIwG,OAAO,CAACxG,OAAO,CAACgP,OAAO,IAAIxI,OAAO,CAACxG,OAAO,CAACgP,OAAO,CAACzb,SAAS;EAC3G,OAAO4kB,QAAQ,GAAG5kB,SAAS,CAAC4kB,QAAQ,CAACA,QAAQ,CAAC,GAAG5kB,SAAS;AAC5D;AACA,MAAMoiD,OAAO,SAASlyB,OAAO,CAAC;EAC5B9wB,WAAWA,CAACyH,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAACw7C,OAAO,GAAG,CAAC;IAChB,IAAI,CAAC9gD,OAAO,GAAG,EAAE;IACjB,IAAI,CAACuF,MAAM,GAAGD,MAAM,CAACC,MAAM;IAC3B,IAAI,CAACw7C,cAAc,GAAG5iD,SAAS;IAC/B,IAAI,CAAC6iD,KAAK,GAAG7iD,SAAS;IACtB,IAAI,CAAC8iD,iBAAiB,GAAG9iD,SAAS;IAClC,IAAI,CAAC+iD,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC56C,WAAW,GAAGnI,SAAS;IAC5B,IAAI,CAACuO,QAAQ,GAAGvO,SAAS;IACzB,IAAI,CAAC8H,OAAO,GAAGX,MAAM,CAACW,OAAO;IAC7B,IAAI,CAACk7C,UAAU,GAAGhjD,SAAS;IAC3B,IAAI,CAACgc,KAAK,GAAGhc,SAAS;IACtB,IAAI,CAACygD,UAAU,GAAGzgD,SAAS;IAC3B,IAAI,CAAC8/C,IAAI,GAAG9/C,SAAS;IACrB,IAAI,CAAC0gD,SAAS,GAAG1gD,SAAS;IAC1B,IAAI,CAAC+/C,MAAM,GAAG//C,SAAS;IACvB,IAAI,CAACshD,MAAM,GAAGthD,SAAS;IACvB,IAAI,CAAC2hD,MAAM,GAAG3hD,SAAS;IACvB,IAAI,CAAC7I,CAAC,GAAG6I,SAAS;IAClB,IAAI,CAAC3I,CAAC,GAAG2I,SAAS;IAClB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAACijD,MAAM,GAAGjjD,SAAS;IACvB,IAAI,CAACkjD,MAAM,GAAGljD,SAAS;IACvB,IAAI,CAACmjD,WAAW,GAAGnjD,SAAS;IAC5B,IAAI,CAACojD,gBAAgB,GAAGpjD,SAAS;IACjC,IAAI,CAACqjD,eAAe,GAAGrjD,SAAS;EAClC;EACAwO,UAAUA,CAAC1G,OAAO,EAAE;IAClB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACg7C,iBAAiB,GAAG9iD,SAAS;IAClC,IAAI,CAACuO,QAAQ,GAAGvO,SAAS;EAC3B;EACAmU,kBAAkBA,CAAA,EAAG;IACnB,MAAMlT,EAAE,GAAG,IAAI;IACf,MAAMuM,MAAM,GAAGvM,EAAE,CAAC6hD,iBAAiB;IACnC,IAAIt1C,MAAM,EAAE;MACV,OAAOA,MAAM;IACf;IACA,MAAMtN,KAAK,GAAGe,EAAE,CAACmG,MAAM;IACvB,MAAMU,OAAO,GAAG7G,EAAE,CAAC6G,OAAO,CAACk1B,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC;IACtD,MAAM/H,IAAI,GAAGjB,OAAO,CAAC2rB,OAAO,IAAIvzB,KAAK,CAAC4H,OAAO,CAACxB,SAAS,IAAIwB,OAAO,CAACf,UAAU;IAC7E,MAAMA,UAAU,GAAG,IAAIG,UAAU,CAACjG,EAAE,CAACmG,MAAM,EAAE2B,IAAI,CAAC;IAClD,IAAIA,IAAI,CAACuL,UAAU,EAAE;MACnBrT,EAAE,CAAC6hD,iBAAiB,GAAG18C,MAAM,CAAC8N,MAAM,CAACnN,UAAU,CAAC;IAClD;IACA,OAAOA,UAAU;EACnB;EACA+J,UAAUA,CAAA,EAAG;IACX,MAAM7P,EAAE,GAAG,IAAI;IACf,OAAOA,EAAE,CAACsN,QAAQ,KAClBtN,EAAE,CAACsN,QAAQ,GAAGg0C,oBAAoB,CAACthD,EAAE,CAACmG,MAAM,CAAC0J,UAAU,CAAC,CAAC,EAAE7P,EAAE,EAAEA,EAAE,CAAC8hD,aAAa,CAAC,CAAC;EACnF;EACAO,QAAQA,CAAC/vC,OAAO,EAAEzL,OAAO,EAAE;IACzB,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAM;MAACX;IAAS,CAAC,GAAGwH,OAAO;IAC3B,MAAMy7C,WAAW,GAAGjjD,SAAS,CAACijD,WAAW,CAAC/D,KAAK,CAACv+C,EAAE,EAAE,CAACsS,OAAO,CAAC,CAAC;IAC9D,MAAMyI,KAAK,GAAG1b,SAAS,CAAC0b,KAAK,CAACwjC,KAAK,CAACv+C,EAAE,EAAE,CAACsS,OAAO,CAAC,CAAC;IAClD,MAAMiwC,UAAU,GAAGljD,SAAS,CAACkjD,UAAU,CAAChE,KAAK,CAACv+C,EAAE,EAAE,CAACsS,OAAO,CAAC,CAAC;IAC5D,IAAI0iB,KAAK,GAAG,EAAE;IACdA,KAAK,GAAGqpB,YAAY,CAACrpB,KAAK,EAAEwpB,aAAa,CAAC8D,WAAW,CAAC,CAAC;IACvDttB,KAAK,GAAGqpB,YAAY,CAACrpB,KAAK,EAAEwpB,aAAa,CAACzjC,KAAK,CAAC,CAAC;IACjDia,KAAK,GAAGqpB,YAAY,CAACrpB,KAAK,EAAEwpB,aAAa,CAAC+D,UAAU,CAAC,CAAC;IACtD,OAAOvtB,KAAK;EACd;EACAwtB,aAAaA,CAACjB,YAAY,EAAE16C,OAAO,EAAE;IACnC,OAAOw6C,uBAAuB,CAACx6C,OAAO,CAACxH,SAAS,CAACmgD,UAAU,CAACjB,KAAK,CAAC,IAAI,EAAE,CAACgD,YAAY,CAAC,CAAC,CAAC;EAC1F;EACAkB,OAAOA,CAAClB,YAAY,EAAE16C,OAAO,EAAE;IAC7B,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAM;MAACX;IAAS,CAAC,GAAGwH,OAAO;IAC3B,MAAM67C,SAAS,GAAG,EAAE;IACpB3rD,IAAI,CAACwqD,YAAY,EAAGjvC,OAAO,IAAK;MAC9B,MAAM+sC,QAAQ,GAAG;QACfC,MAAM,EAAE,EAAE;QACVtqB,KAAK,EAAE,EAAE;QACTuqB,KAAK,EAAE;MACT,CAAC;MACD,MAAMoD,MAAM,GAAGnB,iBAAiB,CAACniD,SAAS,EAAEiT,OAAO,CAAC;MACpD+rC,YAAY,CAACgB,QAAQ,CAACC,MAAM,EAAEd,aAAa,CAACmE,MAAM,CAACC,WAAW,CAAC3iD,IAAI,CAACD,EAAE,EAAEsS,OAAO,CAAC,CAAC,CAAC;MAClF+rC,YAAY,CAACgB,QAAQ,CAACrqB,KAAK,EAAE2tB,MAAM,CAAC/wC,KAAK,CAAC3R,IAAI,CAACD,EAAE,EAAEsS,OAAO,CAAC,CAAC;MAC5D+rC,YAAY,CAACgB,QAAQ,CAACE,KAAK,EAAEf,aAAa,CAACmE,MAAM,CAACE,UAAU,CAAC5iD,IAAI,CAACD,EAAE,EAAEsS,OAAO,CAAC,CAAC,CAAC;MAChFowC,SAAS,CAACjhD,IAAI,CAAC49C,QAAQ,CAAC;IAC1B,CAAC,CAAC;IACF,OAAOqD,SAAS;EAClB;EACAI,YAAYA,CAACvB,YAAY,EAAE16C,OAAO,EAAE;IAClC,OAAOw6C,uBAAuB,CAACx6C,OAAO,CAACxH,SAAS,CAACogD,SAAS,CAAClB,KAAK,CAAC,IAAI,EAAE,CAACgD,YAAY,CAAC,CAAC,CAAC;EACzF;EACAwB,SAASA,CAACxB,YAAY,EAAE16C,OAAO,EAAE;IAC/B,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAM;MAACX;IAAS,CAAC,GAAGwH,OAAO;IAC3B,MAAMm8C,YAAY,GAAG3jD,SAAS,CAAC2jD,YAAY,CAACzE,KAAK,CAACv+C,EAAE,EAAE,CAACuhD,YAAY,CAAC,CAAC;IACrE,MAAMzC,MAAM,GAAGz/C,SAAS,CAACy/C,MAAM,CAACP,KAAK,CAACv+C,EAAE,EAAE,CAACuhD,YAAY,CAAC,CAAC;IACzD,MAAM0B,WAAW,GAAG5jD,SAAS,CAAC4jD,WAAW,CAAC1E,KAAK,CAACv+C,EAAE,EAAE,CAACuhD,YAAY,CAAC,CAAC;IACnE,IAAIvsB,KAAK,GAAG,EAAE;IACdA,KAAK,GAAGqpB,YAAY,CAACrpB,KAAK,EAAEwpB,aAAa,CAACwE,YAAY,CAAC,CAAC;IACxDhuB,KAAK,GAAGqpB,YAAY,CAACrpB,KAAK,EAAEwpB,aAAa,CAACM,MAAM,CAAC,CAAC;IAClD9pB,KAAK,GAAGqpB,YAAY,CAACrpB,KAAK,EAAEwpB,aAAa,CAACyE,WAAW,CAAC,CAAC;IACvD,OAAOjuB,KAAK;EACd;EACAkuB,YAAYA,CAACr8C,OAAO,EAAE;IACpB,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAMqE,MAAM,GAAGrE,EAAE,CAACY,OAAO;IACzB,MAAM2I,IAAI,GAAGvJ,EAAE,CAACmG,MAAM,CAACoD,IAAI;IAC3B,MAAM24C,WAAW,GAAG,EAAE;IACtB,MAAMC,gBAAgB,GAAG,EAAE;IAC3B,MAAMC,eAAe,GAAG,EAAE;IAC1B,IAAIb,YAAY,GAAG,EAAE;IACrB,IAAInuD,CAAC,EAAEwgC,GAAG;IACV,KAAKxgC,CAAC,GAAG,CAAC,EAAEwgC,GAAG,GAAGvvB,MAAM,CAAC5D,MAAM,EAAErN,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;MAC7CmuD,YAAY,CAAC9/C,IAAI,CAACk9C,iBAAiB,CAAC3+C,EAAE,CAACmG,MAAM,EAAE9B,MAAM,CAACjR,CAAC,CAAC,CAAC,CAAC;IAC5D;IACA,IAAIyT,OAAO,CAAC4E,MAAM,EAAE;MAClB81C,YAAY,GAAGA,YAAY,CAAC91C,MAAM,CAAC,CAACO,OAAO,EAAElD,KAAK,EAAEge,KAAK,KAAKjgB,OAAO,CAAC4E,MAAM,CAACO,OAAO,EAAElD,KAAK,EAAEge,KAAK,EAAEvd,IAAI,CAAC,CAAC;IAC5G;IACA,IAAI1C,OAAO,CAACs8C,QAAQ,EAAE;MACpB5B,YAAY,GAAGA,YAAY,CAAChsC,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAKuT,OAAO,CAACs8C,QAAQ,CAACrwD,CAAC,EAAEQ,CAAC,EAAEiW,IAAI,CAAC,CAAC;IAC1E;IACAxS,IAAI,CAACwqD,YAAY,EAAGjvC,OAAO,IAAK;MAC9B,MAAMqwC,MAAM,GAAGnB,iBAAiB,CAAC36C,OAAO,CAACxH,SAAS,EAAEiT,OAAO,CAAC;MAC5D4vC,WAAW,CAACzgD,IAAI,CAACkhD,MAAM,CAACS,UAAU,CAACnjD,IAAI,CAACD,EAAE,EAAEsS,OAAO,CAAC,CAAC;MACrD6vC,gBAAgB,CAAC1gD,IAAI,CAACkhD,MAAM,CAACU,eAAe,CAACpjD,IAAI,CAACD,EAAE,EAAEsS,OAAO,CAAC,CAAC;MAC/D8vC,eAAe,CAAC3gD,IAAI,CAACkhD,MAAM,CAACW,cAAc,CAACrjD,IAAI,CAACD,EAAE,EAAEsS,OAAO,CAAC,CAAC;IAC/D,CAAC,CAAC;IACFtS,EAAE,CAACkiD,WAAW,GAAGA,WAAW;IAC5BliD,EAAE,CAACmiD,gBAAgB,GAAGA,gBAAgB;IACtCniD,EAAE,CAACoiD,eAAe,GAAGA,eAAe;IACpCpiD,EAAE,CAAC+hD,UAAU,GAAGR,YAAY;IAC5B,OAAOA,YAAY;EACrB;EACAj9C,MAAMA,CAACod,OAAO,EAAEgrB,MAAM,EAAE;IACtB,MAAM1sC,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO,CAACk1B,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC;IACtD,MAAMxL,MAAM,GAAGrE,EAAE,CAACY,OAAO;IACzB,IAAI+E,UAAU;IACd,IAAI47C,YAAY,GAAG,EAAE;IACrB,IAAI,CAACl9C,MAAM,CAAC5D,MAAM,EAAE;MAClB,IAAIT,EAAE,CAAC0hD,OAAO,KAAK,CAAC,EAAE;QACpB/7C,UAAU,GAAG;UACX+7C,OAAO,EAAE;QACX,CAAC;MACH;IACF,CAAC,MAAM;MACL,MAAMx8B,QAAQ,GAAG84B,WAAW,CAACn3C,OAAO,CAACqe,QAAQ,CAAC,CAACjlB,IAAI,CAACD,EAAE,EAAEqE,MAAM,EAAErE,EAAE,CAAC2hD,cAAc,CAAC;MAClFJ,YAAY,GAAGvhD,EAAE,CAACkjD,YAAY,CAACr8C,OAAO,CAAC;MACvC7G,EAAE,CAAC+a,KAAK,GAAG/a,EAAE,CAACqiD,QAAQ,CAACd,YAAY,EAAE16C,OAAO,CAAC;MAC7C7G,EAAE,CAACw/C,UAAU,GAAGx/C,EAAE,CAACwiD,aAAa,CAACjB,YAAY,EAAE16C,OAAO,CAAC;MACvD7G,EAAE,CAAC6+C,IAAI,GAAG7+C,EAAE,CAACyiD,OAAO,CAAClB,YAAY,EAAE16C,OAAO,CAAC;MAC3C7G,EAAE,CAACy/C,SAAS,GAAGz/C,EAAE,CAAC8iD,YAAY,CAACvB,YAAY,EAAE16C,OAAO,CAAC;MACrD7G,EAAE,CAAC8+C,MAAM,GAAG9+C,EAAE,CAAC+iD,SAAS,CAACxB,YAAY,EAAE16C,OAAO,CAAC;MAC/C,MAAMU,IAAI,GAAGvH,EAAE,CAAC4hD,KAAK,GAAGhD,cAAc,CAAC5+C,EAAE,EAAE6G,OAAO,CAAC;MACnD,MAAM08C,eAAe,GAAGp+C,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE0d,QAAQ,EAAE3d,IAAI,CAAC;MACzD,MAAM05C,SAAS,GAAGL,kBAAkB,CAAC5gD,EAAE,CAACmG,MAAM,EAAEU,OAAO,EAAE08C,eAAe,CAAC;MACzE,MAAMC,eAAe,GAAGxC,kBAAkB,CAACn6C,OAAO,EAAE08C,eAAe,EAAEtC,SAAS,EAAEjhD,EAAE,CAACmG,MAAM,CAAC;MAC1FnG,EAAE,CAACqgD,MAAM,GAAGY,SAAS,CAACZ,MAAM;MAC5BrgD,EAAE,CAAC0gD,MAAM,GAAGO,SAAS,CAACP,MAAM;MAC5B/6C,UAAU,GAAG;QACX+7C,OAAO,EAAE,CAAC;QACVxrD,CAAC,EAAEstD,eAAe,CAACttD,CAAC;QACpBE,CAAC,EAAEotD,eAAe,CAACptD,CAAC;QACpBsiB,KAAK,EAAEnR,IAAI,CAACmR,KAAK;QACjBD,MAAM,EAAElR,IAAI,CAACkR,MAAM;QACnBupC,MAAM,EAAE98B,QAAQ,CAAChvB,CAAC;QAClB+rD,MAAM,EAAE/8B,QAAQ,CAAC9uB;MACnB,CAAC;IACH;IACA4J,EAAE,CAAC8hD,aAAa,GAAGP,YAAY;IAC/BvhD,EAAE,CAACsN,QAAQ,GAAGvO,SAAS;IACvB,IAAI4G,UAAU,EAAE;MACd3F,EAAE,CAACkT,kBAAkB,CAAC,CAAC,CAAC5O,MAAM,CAACtE,EAAE,EAAE2F,UAAU,CAAC;IAChD;IACA,IAAI+b,OAAO,IAAI7a,OAAO,CAAC48C,QAAQ,EAAE;MAC/B58C,OAAO,CAAC48C,QAAQ,CAACxjD,IAAI,CAACD,EAAE,EAAE;QAACf,KAAK,EAAEe,EAAE,CAACmG,MAAM;QAAE2U,OAAO,EAAE9a,EAAE;QAAE0sC;MAAM,CAAC,CAAC;IACpE;EACF;EACAgX,SAASA,CAACC,YAAY,EAAEh3C,GAAG,EAAEpF,IAAI,EAAEV,OAAO,EAAE;IAC1C,MAAM+8C,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACF,YAAY,EAAEp8C,IAAI,EAAEV,OAAO,CAAC;IACxE8F,GAAG,CAACiyB,MAAM,CAACglB,aAAa,CAACnnB,EAAE,EAAEmnB,aAAa,CAAClnB,EAAE,CAAC;IAC9C/vB,GAAG,CAACiyB,MAAM,CAACglB,aAAa,CAACjnB,EAAE,EAAEinB,aAAa,CAAChnB,EAAE,CAAC;IAC9CjwB,GAAG,CAACiyB,MAAM,CAACglB,aAAa,CAACE,EAAE,EAAEF,aAAa,CAACG,EAAE,CAAC;EAChD;EACAF,gBAAgBA,CAACF,YAAY,EAAEp8C,IAAI,EAAEV,OAAO,EAAE;IAC5C,MAAM;MAACw5C,MAAM;MAAEK;IAAM,CAAC,GAAG,IAAI;IAC7B,MAAM;MAACQ,YAAY;MAAEX;IAAS,CAAC,GAAG15C,OAAO;IACzC,MAAM;MAAC3Q,CAAC,EAAE8tD,GAAG;MAAE5tD,CAAC,EAAE6tD;IAAG,CAAC,GAAGN,YAAY;IACrC,MAAM;MAACjrC,KAAK;MAAED;IAAM,CAAC,GAAGlR,IAAI;IAC5B,IAAIk1B,EAAE,EAAEE,EAAE,EAAEmnB,EAAE,EAAEpnB,EAAE,EAAEE,EAAE,EAAEmnB,EAAE;IAC1B,IAAIrD,MAAM,KAAK,QAAQ,EAAE;MACvB9jB,EAAE,GAAGqnB,GAAG,GAAIxrC,MAAM,GAAG,CAAE;MACvB,IAAI4nC,MAAM,KAAK,MAAM,EAAE;QACrB5jB,EAAE,GAAGunB,GAAG;QACRrnB,EAAE,GAAGF,EAAE,GAAG8jB,SAAS;QACnB7jB,EAAE,GAAGE,EAAE,GAAG2jB,SAAS;QACnBwD,EAAE,GAAGnnB,EAAE,GAAG2jB,SAAS;MACrB,CAAC,MAAM;QACL9jB,EAAE,GAAGunB,GAAG,GAAGtrC,KAAK;QAChBikB,EAAE,GAAGF,EAAE,GAAG8jB,SAAS;QACnB7jB,EAAE,GAAGE,EAAE,GAAG2jB,SAAS;QACnBwD,EAAE,GAAGnnB,EAAE,GAAG2jB,SAAS;MACrB;MACAuD,EAAE,GAAGrnB,EAAE;IACT,CAAC,MAAM;MACL,IAAI4jB,MAAM,KAAK,MAAM,EAAE;QACrB1jB,EAAE,GAAGqnB,GAAG,GAAG9C,YAAY,GAAIX,SAAU;MACvC,CAAC,MAAM,IAAIF,MAAM,KAAK,OAAO,EAAE;QAC7B1jB,EAAE,GAAGqnB,GAAG,GAAGtrC,KAAK,GAAGwoC,YAAY,GAAGX,SAAS;MAC7C,CAAC,MAAM;QACL5jB,EAAE,GAAG,IAAI,CAACqlB,MAAM;MAClB;MACA,IAAItB,MAAM,KAAK,KAAK,EAAE;QACpBhkB,EAAE,GAAGunB,GAAG;QACRrnB,EAAE,GAAGF,EAAE,GAAG6jB,SAAS;QACnB9jB,EAAE,GAAGE,EAAE,GAAG4jB,SAAS;QACnBuD,EAAE,GAAGnnB,EAAE,GAAG4jB,SAAS;MACrB,CAAC,MAAM;QACL7jB,EAAE,GAAGunB,GAAG,GAAGxrC,MAAM;QACjBmkB,EAAE,GAAGF,EAAE,GAAG6jB,SAAS;QACnB9jB,EAAE,GAAGE,EAAE,GAAG4jB,SAAS;QACnBuD,EAAE,GAAGnnB,EAAE,GAAG4jB,SAAS;MACrB;MACAwD,EAAE,GAAGrnB,EAAE;IACT;IACA,OAAO;MAACD,EAAE;MAAEE,EAAE;MAAEmnB,EAAE;MAAEpnB,EAAE;MAAEE,EAAE;MAAEmnB;IAAE,CAAC;EACjC;EACA9kB,SAASA,CAACilB,EAAE,EAAEv3C,GAAG,EAAE9F,OAAO,EAAE;IAC1B,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAM+a,KAAK,GAAG/a,EAAE,CAAC+a,KAAK;IACtB,MAAMta,MAAM,GAAGsa,KAAK,CAACta,MAAM;IAC3B,IAAIg8C,SAAS,EAAEiD,YAAY,EAAEtsD,CAAC;IAC9B,IAAIqN,MAAM,EAAE;MACV,MAAM66C,SAAS,GAAG3+C,aAAa,CAACkK,OAAO,CAAC00C,GAAG,EAAEv7C,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC0Y,KAAK,CAAC;MAC5DwrC,EAAE,CAAChuD,CAAC,GAAGkrD,WAAW,CAACphD,EAAE,EAAE6G,OAAO,CAACuuB,UAAU,EAAEvuB,OAAO,CAAC;MACnD8F,GAAG,CAACywB,SAAS,GAAGke,SAAS,CAACle,SAAS,CAACv2B,OAAO,CAACuuB,UAAU,CAAC;MACvDzoB,GAAG,CAAC4wB,YAAY,GAAG,QAAQ;MAC3Bkf,SAAS,GAAG5jD,MAAM,CAACgO,OAAO,CAAC41C,SAAS,CAAC;MACrCiD,YAAY,GAAG74C,OAAO,CAAC64C,YAAY;MACnC/yC,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACs9C,UAAU;MAClCx3C,GAAG,CAACooB,IAAI,GAAG0nB,SAAS,CAACxhB,MAAM;MAC3B,KAAK7nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqN,MAAM,EAAE,EAAErN,CAAC,EAAE;QAC3BuZ,GAAG,CAACwvC,QAAQ,CAACphC,KAAK,CAAC3nB,CAAC,CAAC,EAAEkoD,SAAS,CAACplD,CAAC,CAACguD,EAAE,CAAChuD,CAAC,CAAC,EAAEguD,EAAE,CAAC9tD,CAAC,GAAGqmD,SAAS,CAACxnB,UAAU,GAAG,CAAC,CAAC;QAC1EivB,EAAE,CAAC9tD,CAAC,IAAIqmD,SAAS,CAACxnB,UAAU,GAAGyqB,YAAY;QAC3C,IAAItsD,CAAC,GAAG,CAAC,KAAKqN,MAAM,EAAE;UACpByjD,EAAE,CAAC9tD,CAAC,IAAIyQ,OAAO,CAAC84C,iBAAiB,GAAGD,YAAY;QAClD;MACF;IACF;EACF;EACA0E,aAAaA,CAACz3C,GAAG,EAAEu3C,EAAE,EAAE9wD,CAAC,EAAEkoD,SAAS,EAAEz0C,OAAO,EAAE;IAC5C,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAMkiD,WAAW,GAAGliD,EAAE,CAACkiD,WAAW,CAAC9uD,CAAC,CAAC;IACrC,MAAMiwD,eAAe,GAAGrjD,EAAE,CAACmiD,gBAAgB,CAAC/uD,CAAC,CAAC;IAC9C,MAAM;MAACkmD,SAAS;MAAEC;IAAQ,CAAC,GAAG1yC,OAAO;IACrC,MAAMk4C,QAAQ,GAAGlmD,MAAM,CAACgO,OAAO,CAACk4C,QAAQ,CAAC;IACzC,MAAMsF,MAAM,GAAGjD,WAAW,CAACphD,EAAE,EAAE,MAAM,EAAE6G,OAAO,CAAC;IAC/C,MAAMy9C,SAAS,GAAGhJ,SAAS,CAACplD,CAAC,CAACmuD,MAAM,CAAC;IACrC,MAAME,OAAO,GAAGjL,SAAS,GAAGyF,QAAQ,CAAC9pB,UAAU,GAAG,CAAC8pB,QAAQ,CAAC9pB,UAAU,GAAGqkB,SAAS,IAAI,CAAC,GAAG,CAAC;IAC3F,MAAMkL,MAAM,GAAGN,EAAE,CAAC9tD,CAAC,GAAGmuD,OAAO;IAC7B,IAAI19C,OAAO,CAAC2yC,aAAa,EAAE;MACzB,MAAMqC,WAAW,GAAG;QAClBjhC,MAAM,EAAEhb,IAAI,CAACC,GAAG,CAAC05C,QAAQ,EAAED,SAAS,CAAC,GAAG,CAAC;QACzC7H,UAAU,EAAE4R,eAAe,CAAC5R,UAAU;QACtCx2B,QAAQ,EAAEooC,eAAe,CAACpoC,QAAQ;QAClCuD,WAAW,EAAE;MACf,CAAC;MACD,MAAMP,OAAO,GAAGq9B,SAAS,CAACW,UAAU,CAACqI,SAAS,EAAE/K,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAAC;MACxE,MAAMr7B,OAAO,GAAGsmC,MAAM,GAAGlL,SAAS,GAAG,CAAC;MACtC3sC,GAAG,CAAC0S,WAAW,GAAGxY,OAAO,CAAC49C,kBAAkB;MAC5C93C,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAAC49C,kBAAkB;MAC1CxoD,SAAS,CAAC0Q,GAAG,EAAEkvC,WAAW,EAAE59B,OAAO,EAAEC,OAAO,CAAC;MAC7CvR,GAAG,CAAC0S,WAAW,GAAG6iC,WAAW,CAAC5iC,WAAW;MACzC3S,GAAG,CAACwS,SAAS,GAAG+iC,WAAW,CAAC9iC,eAAe;MAC3CnjB,SAAS,CAAC0Q,GAAG,EAAEkvC,WAAW,EAAE59B,OAAO,EAAEC,OAAO,CAAC;IAC/C,CAAC,MAAM;MACLvR,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAAC49C,kBAAkB;MAC1C93C,GAAG,CAACsxB,QAAQ,CAACqd,SAAS,CAACW,UAAU,CAACqI,SAAS,EAAE/K,QAAQ,CAAC,EAAEiL,MAAM,EAAEjL,QAAQ,EAAED,SAAS,CAAC;MACpF3sC,GAAG,CAAC4S,SAAS,GAAG,CAAC;MACjB5S,GAAG,CAAC0S,WAAW,GAAG6iC,WAAW,CAAC5iC,WAAW;MACzC3S,GAAG,CAACuvC,UAAU,CAACZ,SAAS,CAACW,UAAU,CAACqI,SAAS,EAAE/K,QAAQ,CAAC,EAAEiL,MAAM,EAAEjL,QAAQ,EAAED,SAAS,CAAC;MACtF3sC,GAAG,CAACwS,SAAS,GAAG+iC,WAAW,CAAC9iC,eAAe;MAC3CzS,GAAG,CAACsxB,QAAQ,CAACqd,SAAS,CAACW,UAAU,CAACX,SAAS,CAACS,KAAK,CAACuI,SAAS,EAAE,CAAC,CAAC,EAAE/K,QAAQ,GAAG,CAAC,CAAC,EAAEiL,MAAM,GAAG,CAAC,EAAEjL,QAAQ,GAAG,CAAC,EAAED,SAAS,GAAG,CAAC,CAAC;IAC1H;IACA3sC,GAAG,CAACwS,SAAS,GAAGnf,EAAE,CAACoiD,eAAe,CAAChvD,CAAC,CAAC;EACvC;EACAsxD,QAAQA,CAACR,EAAE,EAAEv3C,GAAG,EAAE9F,OAAO,EAAE;IACzB,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAM;MAAC6+C;IAAI,CAAC,GAAG7+C,EAAE;IACjB,MAAM;MAAC8/C,WAAW;MAAE6E,SAAS;MAAE9E,aAAa;MAAEvG,SAAS;MAAEC;IAAQ,CAAC,GAAG1yC,OAAO;IAC5E,MAAMk4C,QAAQ,GAAGlmD,MAAM,CAACgO,OAAO,CAACk4C,QAAQ,CAAC;IACzC,IAAIa,cAAc,GAAGb,QAAQ,CAAC9pB,UAAU;IACxC,IAAI2vB,YAAY,GAAG,CAAC;IACpB,MAAMtJ,SAAS,GAAG3+C,aAAa,CAACkK,OAAO,CAAC00C,GAAG,EAAEv7C,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC0Y,KAAK,CAAC;IAC5D,MAAMmsC,cAAc,GAAG,SAAAA,CAAS5kC,IAAI,EAAE;MACpCtT,GAAG,CAACwvC,QAAQ,CAACl8B,IAAI,EAAEq7B,SAAS,CAACplD,CAAC,CAACguD,EAAE,CAAChuD,CAAC,GAAG0uD,YAAY,CAAC,EAAEV,EAAE,CAAC9tD,CAAC,GAAGwpD,cAAc,GAAG,CAAC,CAAC;MAC/EsE,EAAE,CAAC9tD,CAAC,IAAIwpD,cAAc,GAAGE,WAAW;IACtC,CAAC;IACD,MAAMgF,uBAAuB,GAAGxJ,SAAS,CAACle,SAAS,CAACunB,SAAS,CAAC;IAC9D,IAAItF,QAAQ,EAAE0F,SAAS,EAAE/vB,KAAK,EAAE5hC,CAAC,EAAEoB,CAAC,EAAEqU,IAAI,EAAE4b,IAAI;IAChD9X,GAAG,CAACywB,SAAS,GAAGunB,SAAS;IACzBh4C,GAAG,CAAC4wB,YAAY,GAAG,QAAQ;IAC3B5wB,GAAG,CAACooB,IAAI,GAAGgqB,QAAQ,CAAC9jB,MAAM;IAC1BipB,EAAE,CAAChuD,CAAC,GAAGkrD,WAAW,CAACphD,EAAE,EAAE8kD,uBAAuB,EAAEj+C,OAAO,CAAC;IACxD8F,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACm+C,SAAS;IACjCjuD,IAAI,CAACiJ,EAAE,CAACw/C,UAAU,EAAEqF,cAAc,CAAC;IACnCD,YAAY,GAAG/E,aAAa,IAAIiF,uBAAuB,KAAK,OAAO,GAC/DH,SAAS,KAAK,QAAQ,GAAIpL,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAKA,QAAQ,GAAG,CAAE,GAC5D,CAAC;IACL,KAAKnmD,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGg2C,IAAI,CAACp+C,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC7CisD,QAAQ,GAAGR,IAAI,CAACzrD,CAAC,CAAC;MAClB2xD,SAAS,GAAG/kD,EAAE,CAACoiD,eAAe,CAAChvD,CAAC,CAAC;MACjCuZ,GAAG,CAACwS,SAAS,GAAG4lC,SAAS;MACzBhuD,IAAI,CAACsoD,QAAQ,CAACC,MAAM,EAAEuF,cAAc,CAAC;MACrC7vB,KAAK,GAAGqqB,QAAQ,CAACrqB,KAAK;MACtB,IAAI6qB,aAAa,IAAI7qB,KAAK,CAACv0B,MAAM,EAAE;QACjCT,EAAE,CAACokD,aAAa,CAACz3C,GAAG,EAAEu3C,EAAE,EAAE9wD,CAAC,EAAEkoD,SAAS,EAAEz0C,OAAO,CAAC;QAChD+4C,cAAc,GAAGhgD,IAAI,CAACmC,GAAG,CAACg9C,QAAQ,CAAC9pB,UAAU,EAAEqkB,SAAS,CAAC;MAC3D;MACA,KAAK9kD,CAAC,GAAG,CAAC,EAAEiwB,IAAI,GAAGuQ,KAAK,CAACv0B,MAAM,EAAEjM,CAAC,GAAGiwB,IAAI,EAAE,EAAEjwB,CAAC,EAAE;QAC9CqwD,cAAc,CAAC7vB,KAAK,CAACxgC,CAAC,CAAC,CAAC;QACxBorD,cAAc,GAAGb,QAAQ,CAAC9pB,UAAU;MACtC;MACAl+B,IAAI,CAACsoD,QAAQ,CAACE,KAAK,EAAEsF,cAAc,CAAC;IACtC;IACAD,YAAY,GAAG,CAAC;IAChBhF,cAAc,GAAGb,QAAQ,CAAC9pB,UAAU;IACpCl+B,IAAI,CAACiJ,EAAE,CAACy/C,SAAS,EAAEoF,cAAc,CAAC;IAClCX,EAAE,CAAC9tD,CAAC,IAAI0pD,WAAW;EACrB;EACAmF,UAAUA,CAACf,EAAE,EAAEv3C,GAAG,EAAE9F,OAAO,EAAE;IAC3B,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAM8+C,MAAM,GAAG9+C,EAAE,CAAC8+C,MAAM;IACxB,MAAMr+C,MAAM,GAAGq+C,MAAM,CAACr+C,MAAM;IAC5B,IAAIu+C,UAAU,EAAE5rD,CAAC;IACjB,IAAIqN,MAAM,EAAE;MACV,MAAM66C,SAAS,GAAG3+C,aAAa,CAACkK,OAAO,CAAC00C,GAAG,EAAEv7C,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC0Y,KAAK,CAAC;MAC5DwrC,EAAE,CAAChuD,CAAC,GAAGkrD,WAAW,CAACphD,EAAE,EAAE6G,OAAO,CAACq+C,WAAW,EAAEr+C,OAAO,CAAC;MACpDq9C,EAAE,CAAC9tD,CAAC,IAAIyQ,OAAO,CAACk5C,eAAe;MAC/BpzC,GAAG,CAACywB,SAAS,GAAGke,SAAS,CAACle,SAAS,CAACv2B,OAAO,CAACq+C,WAAW,CAAC;MACxDv4C,GAAG,CAAC4wB,YAAY,GAAG,QAAQ;MAC3ByhB,UAAU,GAAGnmD,MAAM,CAACgO,OAAO,CAACm4C,UAAU,CAAC;MACvCryC,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACs+C,WAAW;MACnCx4C,GAAG,CAACooB,IAAI,GAAGiqB,UAAU,CAAC/jB,MAAM;MAC5B,KAAK7nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqN,MAAM,EAAE,EAAErN,CAAC,EAAE;QAC3BuZ,GAAG,CAACwvC,QAAQ,CAAC2C,MAAM,CAAC1rD,CAAC,CAAC,EAAEkoD,SAAS,CAACplD,CAAC,CAACguD,EAAE,CAAChuD,CAAC,CAAC,EAAEguD,EAAE,CAAC9tD,CAAC,GAAG4oD,UAAU,CAAC/pB,UAAU,GAAG,CAAC,CAAC;QAC5EivB,EAAE,CAAC9tD,CAAC,IAAI4oD,UAAU,CAAC/pB,UAAU,GAAGpuB,OAAO,CAACm5C,aAAa;MACvD;IACF;EACF;EACAjiB,cAAcA,CAACmmB,EAAE,EAAEv3C,GAAG,EAAEy4C,WAAW,EAAEv+C,OAAO,EAAE;IAC5C,MAAM;MAACw5C,MAAM;MAAEK;IAAM,CAAC,GAAG,IAAI;IAC7B,MAAM;MAACxqD,CAAC;MAAEE;IAAC,CAAC,GAAG8tD,EAAE;IACjB,MAAM;MAACxrC,KAAK;MAAED;IAAM,CAAC,GAAG2sC,WAAW;IACnC,MAAMxqC,MAAM,GAAG/T,OAAO,CAACq6C,YAAY;IACnCv0C,GAAG,CAACwS,SAAS,GAAGtY,OAAO,CAACuY,eAAe;IACvCzS,GAAG,CAAC0S,WAAW,GAAGxY,OAAO,CAACyY,WAAW;IACrC3S,GAAG,CAAC4S,SAAS,GAAG1Y,OAAO,CAAC2X,WAAW;IACnC7R,GAAG,CAAC+xB,SAAS,CAAC,CAAC;IACf/xB,GAAG,CAACgyB,MAAM,CAACzoC,CAAC,GAAG0kB,MAAM,EAAExkB,CAAC,CAAC;IACzB,IAAIsqD,MAAM,KAAK,KAAK,EAAE;MACpB,IAAI,CAACgD,SAAS,CAACQ,EAAE,EAAEv3C,GAAG,EAAEy4C,WAAW,EAAEv+C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,GAAGwiB,KAAK,GAAGkC,MAAM,EAAExkB,CAAC,CAAC;IACjCuW,GAAG,CAAC04C,gBAAgB,CAACnvD,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,EAAEF,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,GAAGwkB,MAAM,CAAC;IACzD,IAAI8lC,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,OAAO,EAAE;MAC7C,IAAI,CAACqD,SAAS,CAACQ,EAAE,EAAEv3C,GAAG,EAAEy4C,WAAW,EAAEv+C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,GAAGqiB,MAAM,GAAGmC,MAAM,CAAC;IAC1CjO,GAAG,CAAC04C,gBAAgB,CAACnvD,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,GAAGqiB,MAAM,EAAEviB,CAAC,GAAGwiB,KAAK,GAAGkC,MAAM,EAAExkB,CAAC,GAAGqiB,MAAM,CAAC;IAC3E,IAAIioC,MAAM,KAAK,QAAQ,EAAE;MACvB,IAAI,CAACgD,SAAS,CAACQ,EAAE,EAAEv3C,GAAG,EAAEy4C,WAAW,EAAEv+C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,GAAG0kB,MAAM,EAAExkB,CAAC,GAAGqiB,MAAM,CAAC;IAClC9L,GAAG,CAAC04C,gBAAgB,CAACnvD,CAAC,EAAEE,CAAC,GAAGqiB,MAAM,EAAEviB,CAAC,EAAEE,CAAC,GAAGqiB,MAAM,GAAGmC,MAAM,CAAC;IAC3D,IAAI8lC,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,MAAM,EAAE;MAC5C,IAAI,CAACqD,SAAS,CAACQ,EAAE,EAAEv3C,GAAG,EAAEy4C,WAAW,EAAEv+C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACiyB,MAAM,CAAC1oC,CAAC,EAAEE,CAAC,GAAGwkB,MAAM,CAAC;IACzBjO,GAAG,CAAC04C,gBAAgB,CAACnvD,CAAC,EAAEE,CAAC,EAAEF,CAAC,GAAG0kB,MAAM,EAAExkB,CAAC,CAAC;IACzCuW,GAAG,CAAC6gC,SAAS,CAAC,CAAC;IACf7gC,GAAG,CAACsW,IAAI,CAAC,CAAC;IACV,IAAIpc,OAAO,CAAC2X,WAAW,GAAG,CAAC,EAAE;MAC3B7R,GAAG,CAACkyB,MAAM,CAAC,CAAC;IACd;EACF;EACAymB,sBAAsBA,CAACz+C,OAAO,EAAE;IAC9B,MAAM7G,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACmG,MAAM;IACvB,MAAMjH,KAAK,GAAGc,EAAE,CAACkH,WAAW;IAC5B,MAAMq+C,KAAK,GAAGrmD,KAAK,IAAIA,KAAK,CAAChJ,CAAC;IAC9B,MAAMsvD,KAAK,GAAGtmD,KAAK,IAAIA,KAAK,CAAC9I,CAAC;IAC9B,IAAImvD,KAAK,IAAIC,KAAK,EAAE;MAClB,MAAMtgC,QAAQ,GAAG84B,WAAW,CAACn3C,OAAO,CAACqe,QAAQ,CAAC,CAACjlB,IAAI,CAACD,EAAE,EAAEA,EAAE,CAACY,OAAO,EAAEZ,EAAE,CAAC2hD,cAAc,CAAC;MACtF,IAAI,CAACz8B,QAAQ,EAAE;QACb;MACF;MACA,MAAM3d,IAAI,GAAGvH,EAAE,CAAC4hD,KAAK,GAAGhD,cAAc,CAAC5+C,EAAE,EAAE6G,OAAO,CAAC;MACnD,MAAM08C,eAAe,GAAGp+C,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE0d,QAAQ,EAAEllB,EAAE,CAAC4hD,KAAK,CAAC;MAC7D,MAAMX,SAAS,GAAGL,kBAAkB,CAAC3hD,KAAK,EAAE4H,OAAO,EAAE08C,eAAe,CAAC;MACrE,MAAM9oC,KAAK,GAAGumC,kBAAkB,CAACn6C,OAAO,EAAE08C,eAAe,EAAEtC,SAAS,EAAEhiD,KAAK,CAAC;MAC5E,IAAIsmD,KAAK,CAACphD,GAAG,KAAKsW,KAAK,CAACvkB,CAAC,IAAIsvD,KAAK,CAACrhD,GAAG,KAAKsW,KAAK,CAACrkB,CAAC,EAAE;QAClD4J,EAAE,CAACqgD,MAAM,GAAGY,SAAS,CAACZ,MAAM;QAC5BrgD,EAAE,CAAC0gD,MAAM,GAAGO,SAAS,CAACP,MAAM;QAC5B1gD,EAAE,CAAC0Y,KAAK,GAAGnR,IAAI,CAACmR,KAAK;QACrB1Y,EAAE,CAACyY,MAAM,GAAGlR,IAAI,CAACkR,MAAM;QACvBzY,EAAE,CAACgiD,MAAM,GAAG98B,QAAQ,CAAChvB,CAAC;QACtB8J,EAAE,CAACiiD,MAAM,GAAG/8B,QAAQ,CAAC9uB,CAAC;QACtB4J,EAAE,CAACkT,kBAAkB,CAAC,CAAC,CAAC5O,MAAM,CAACtE,EAAE,EAAEya,KAAK,CAAC;MAC3C;IACF;EACF;EACA/Z,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM3M,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO,CAACk1B,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC,CAAC,CAAC;IACtD,IAAI6xC,OAAO,GAAG1hD,EAAE,CAAC0hD,OAAO;IACxB,IAAI,CAACA,OAAO,EAAE;MACZ;IACF;IACA1hD,EAAE,CAACslD,sBAAsB,CAACz+C,OAAO,CAAC;IAClC,MAAMu+C,WAAW,GAAG;MAClB1sC,KAAK,EAAE1Y,EAAE,CAAC0Y,KAAK;MACfD,MAAM,EAAEzY,EAAE,CAACyY;IACb,CAAC;IACD,MAAMyrC,EAAE,GAAG;MACThuD,CAAC,EAAE8J,EAAE,CAAC9J,CAAC;MACPE,CAAC,EAAE4J,EAAE,CAAC5J;IACR,CAAC;IACDsrD,OAAO,GAAG9hD,IAAI,CAACgW,GAAG,CAAC8rC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,GAAGA,OAAO;IAChD,MAAMx3B,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAO,CAAC;IAC1C,MAAMu7B,iBAAiB,GAAGzlD,EAAE,CAAC+a,KAAK,CAACta,MAAM,IAAIT,EAAE,CAACw/C,UAAU,CAAC/+C,MAAM,IAAIT,EAAE,CAAC6+C,IAAI,CAACp+C,MAAM,IAAIT,EAAE,CAACy/C,SAAS,CAACh/C,MAAM,IAAIT,EAAE,CAAC8+C,MAAM,CAACr+C,MAAM;IAC9H,IAAIoG,OAAO,CAAC2rB,OAAO,IAAIizB,iBAAiB,EAAE;MACxC94C,GAAG,CAACqxB,IAAI,CAAC,CAAC;MACVrxB,GAAG,CAAC+4C,WAAW,GAAGhE,OAAO;MACzB1hD,EAAE,CAAC+9B,cAAc,CAACmmB,EAAE,EAAEv3C,GAAG,EAAEy4C,WAAW,EAAEv+C,OAAO,CAAC;MAChDhK,qBAAqB,CAAC8P,GAAG,EAAE9F,OAAO,CAACw1C,aAAa,CAAC;MACjD6H,EAAE,CAAC9tD,CAAC,IAAI8zB,OAAO,CAAC9hB,GAAG;MACnBpI,EAAE,CAACi/B,SAAS,CAACilB,EAAE,EAAEv3C,GAAG,EAAE9F,OAAO,CAAC;MAC9B7G,EAAE,CAAC0kD,QAAQ,CAACR,EAAE,EAAEv3C,GAAG,EAAE9F,OAAO,CAAC;MAC7B7G,EAAE,CAACilD,UAAU,CAACf,EAAE,EAAEv3C,GAAG,EAAE9F,OAAO,CAAC;MAC/B5J,oBAAoB,CAAC0P,GAAG,EAAE9F,OAAO,CAACw1C,aAAa,CAAC;MAChD1vC,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACf;EACF;EACAmO,iBAAiBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACzrC,OAAO,IAAI,EAAE;EAC3B;EACA0rC,iBAAiBA,CAACC,cAAc,EAAE2R,aAAa,EAAE;IAC/C,MAAMl+C,EAAE,GAAG,IAAI;IACf,MAAMwsC,UAAU,GAAGxsC,EAAE,CAACY,OAAO;IAC7B,MAAMyD,MAAM,GAAGkoC,cAAc,CAACvtB,GAAG,CAAC,CAAC;MAAC5V,YAAY;MAAEN;IAAK,CAAC,KAAK;MAC3D,MAAMa,IAAI,GAAG3J,EAAE,CAACmG,MAAM,CAACyI,cAAc,CAACxF,YAAY,CAAC;MACnD,IAAI,CAACO,IAAI,EAAE;QACT,MAAM,IAAI2Z,KAAK,CAAC,iCAAiC,GAAGla,YAAY,CAAC;MACnE;MACA,OAAO;QACLA,YAAY;QACZ4C,OAAO,EAAErC,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QACzBA;MACF,CAAC;IACH,CAAC,CAAC;IACF,MAAM4Y,OAAO,GAAG,CAAC7mB,cAAc,CAAC2xC,UAAU,EAAEnoC,MAAM,CAAC;IACnD,MAAMshD,eAAe,GAAG3lD,EAAE,CAAC4lD,gBAAgB,CAACvhD,MAAM,EAAE65C,aAAa,CAAC;IAClE,IAAIx8B,OAAO,IAAIikC,eAAe,EAAE;MAC9B3lD,EAAE,CAACY,OAAO,GAAGyD,MAAM;MACnBrE,EAAE,CAAC2hD,cAAc,GAAGzD,aAAa;MACjCl+C,EAAE,CAACsE,MAAM,CAAC,IAAI,CAAC;IACjB;EACF;EACAy4C,WAAWA,CAAC/pD,CAAC,EAAE05C,MAAM,EAAE;IACrB,MAAM1sC,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAM2lC,UAAU,GAAGxsC,EAAE,CAACY,OAAO,IAAI,EAAE;IACnC,IAAI8gB,OAAO,GAAG,KAAK;IACnB,IAAIrd,MAAM,GAAG,EAAE;IACf,IAAIrR,CAAC,CAACoM,IAAI,KAAK,UAAU,EAAE;MACzBiF,MAAM,GAAGrE,EAAE,CAACmG,MAAM,CAACqlC,yBAAyB,CAACx4C,CAAC,EAAE6T,OAAO,CAACsC,IAAI,EAAEtC,OAAO,EAAE6lC,MAAM,CAAC;MAC9E,IAAI7lC,OAAO,CAACkB,OAAO,EAAE;QACnB1D,MAAM,CAAC0D,OAAO,CAAC,CAAC;MAClB;IACF;IACA,MAAM49C,eAAe,GAAG3lD,EAAE,CAAC4lD,gBAAgB,CAACvhD,MAAM,EAAErR,CAAC,CAAC;IACtD0uB,OAAO,GAAGgrB,MAAM,IAAI,CAAC7xC,cAAc,CAACwJ,MAAM,EAAEmoC,UAAU,CAAC,IAAImZ,eAAe;IAC1E,IAAIjkC,OAAO,EAAE;MACX1hB,EAAE,CAACY,OAAO,GAAGyD,MAAM;MACnB,IAAIwC,OAAO,CAAC2rB,OAAO,IAAI3rB,OAAO,CAAC48C,QAAQ,EAAE;QACvCzjD,EAAE,CAAC2hD,cAAc,GAAG;UAClBzrD,CAAC,EAAElD,CAAC,CAACkD,CAAC;UACNE,CAAC,EAAEpD,CAAC,CAACoD;QACP,CAAC;QACD4J,EAAE,CAACsE,MAAM,CAAC,IAAI,EAAEooC,MAAM,CAAC;MACzB;IACF;IACA,OAAOhrB,OAAO;EAChB;EACAkkC,gBAAgBA,CAACvhD,MAAM,EAAErR,CAAC,EAAE;IAC1B,MAAMgN,EAAE,GAAG,IAAI;IACf,MAAMklB,QAAQ,GAAG84B,WAAW,CAACh+C,EAAE,CAAC6G,OAAO,CAACqe,QAAQ,CAAC,CAACjlB,IAAI,CAACD,EAAE,EAAEqE,MAAM,EAAErR,CAAC,CAAC;IACrE,OAAOgN,EAAE,CAACgiD,MAAM,KAAK98B,QAAQ,CAAChvB,CAAC,IAAI8J,EAAE,CAACiiD,MAAM,KAAK/8B,QAAQ,CAAC9uB,CAAC;EAC7D;AACF;AACAqrD,OAAO,CAACzD,WAAW,GAAGA,WAAW;AACjC,IAAI6H,cAAc,GAAG;EACnB77C,EAAE,EAAE,SAAS;EACbqzC,QAAQ,EAAEoE,OAAO;EACjBzD,WAAW;EACX8H,SAASA,CAAC7mD,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IAC/B,IAAIA,OAAO,EAAE;MACX5H,KAAK,CAAC6b,OAAO,GAAG,IAAI2mC,OAAO,CAAC;QAACt7C,MAAM,EAAElH,KAAK;QAAE4H;MAAO,CAAC,CAAC;IACvD;EACF,CAAC;EACDmwB,YAAYA,CAAC/3B,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IAClC,IAAI5H,KAAK,CAAC6b,OAAO,EAAE;MACjB7b,KAAK,CAAC6b,OAAO,CAACvN,UAAU,CAAC1G,OAAO,CAAC;IACnC;EACF,CAAC;EACDkI,KAAKA,CAAC9P,KAAK,EAAE65C,KAAK,EAAEjyC,OAAO,EAAE;IAC3B,IAAI5H,KAAK,CAAC6b,OAAO,EAAE;MACjB7b,KAAK,CAAC6b,OAAO,CAACvN,UAAU,CAAC1G,OAAO,CAAC;IACnC;EACF,CAAC;EACDk/C,SAASA,CAAC9mD,KAAK,EAAE;IACf,MAAM6b,OAAO,GAAG7b,KAAK,CAAC6b,OAAO;IAC7B,MAAMgU,IAAI,GAAG;MACXhU;IACF,CAAC;IACD,IAAI7b,KAAK,CAAC25B,aAAa,CAAC,mBAAmB,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MAC5D;IACF;IACA,IAAIhU,OAAO,EAAE;MACXA,OAAO,CAACpa,IAAI,CAACzB,KAAK,CAAC0N,GAAG,CAAC;IACzB;IACA1N,KAAK,CAAC25B,aAAa,CAAC,kBAAkB,EAAE9J,IAAI,CAAC;EAC/C,CAAC;EACDwuB,UAAUA,CAACr+C,KAAK,EAAE6vB,IAAI,EAAE;IACtB,IAAI7vB,KAAK,CAAC6b,OAAO,EAAE;MACjB,MAAM+K,gBAAgB,GAAGiJ,IAAI,CAAC4d,MAAM;MACpC,IAAIztC,KAAK,CAAC6b,OAAO,CAACiiC,WAAW,CAACjuB,IAAI,CAACvtB,KAAK,EAAEskB,gBAAgB,CAAC,EAAE;QAC3DiJ,IAAI,CAACpN,OAAO,GAAG,IAAI;MACrB;IACF;EACF,CAAC;EACDjuB,QAAQ,EAAE;IACR++B,OAAO,EAAE,IAAI;IACbixB,QAAQ,EAAE,IAAI;IACdv+B,QAAQ,EAAE,SAAS;IACnB9F,eAAe,EAAE,iBAAiB;IAClC+kC,UAAU,EAAE,MAAM;IAClB1H,SAAS,EAAE;MACTx9B,KAAK,EAAE;IACT,CAAC;IACDygC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,CAAC;IACpBvqB,UAAU,EAAE,MAAM;IAClB4vB,SAAS,EAAE,MAAM;IACjBlF,WAAW,EAAE,CAAC;IACdf,QAAQ,EAAE,CACV,CAAC;IACD4F,SAAS,EAAE,MAAM;IACjBQ,WAAW,EAAE,MAAM;IACnBnF,aAAa,EAAE,CAAC;IAChBD,eAAe,EAAE,CAAC;IAClBf,UAAU,EAAE;MACV//B,KAAK,EAAE;IACT,CAAC;IACDimC,WAAW,EAAE,MAAM;IACnBh7B,OAAO,EAAE,CAAC;IACVs2B,YAAY,EAAE,CAAC;IACfD,SAAS,EAAE,CAAC;IACZW,YAAY,EAAE,CAAC;IACf5H,SAAS,EAAEA,CAAC3sC,GAAG,EAAE7E,IAAI,KAAKA,IAAI,CAACi3C,QAAQ,CAACx3C,IAAI;IAC5CgyC,QAAQ,EAAEA,CAAC5sC,GAAG,EAAE7E,IAAI,KAAKA,IAAI,CAACi3C,QAAQ,CAACx3C,IAAI;IAC3Ck9C,kBAAkB,EAAE,MAAM;IAC1B5E,aAAa,EAAE,IAAI;IACnBvgC,WAAW,EAAE,eAAe;IAC5Bd,WAAW,EAAE,CAAC;IACdnZ,SAAS,EAAE;MACT7F,QAAQ,EAAE,GAAG;MACbiE,MAAM,EAAE;IACV,CAAC;IACDqC,UAAU,EAAE;MACVd,OAAO,EAAE;QACP5F,IAAI,EAAE,QAAQ;QACduG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;MAC9D,CAAC;MACD+7C,OAAO,EAAE;QACPj+C,MAAM,EAAE,QAAQ;QAChBjE,QAAQ,EAAE;MACZ;IACF,CAAC;IACDH,SAAS,EAAE;MACTijD,WAAW,EAAEnlD,IAAI;MACjB4d,KAAKA,CAACwmC,YAAY,EAAE;QAClB,IAAIA,YAAY,CAAC9gD,MAAM,GAAG,CAAC,EAAE;UAC3B,MAAME,IAAI,GAAG4gD,YAAY,CAAC,CAAC,CAAC;UAC5B,MAAM/wC,MAAM,GAAG7P,IAAI,CAAC1B,KAAK,CAACsK,IAAI,CAACiH,MAAM;UACrC,MAAMw1C,UAAU,GAAGx1C,MAAM,GAAGA,MAAM,CAAC/P,MAAM,GAAG,CAAC;UAC7C,IAAI,IAAI,IAAI,IAAI,CAACoG,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;YAC3D,OAAOxI,IAAI,CAACmL,OAAO,CAAC8F,KAAK,IAAI,EAAE;UACjC,CAAC,MAAM,IAAIjR,IAAI,CAACiR,KAAK,EAAE;YACrB,OAAOjR,IAAI,CAACiR,KAAK;UACnB,CAAC,MAAM,IAAIo0C,UAAU,GAAG,CAAC,IAAIrlD,IAAI,CAACsL,SAAS,GAAG+5C,UAAU,EAAE;YACxD,OAAOx1C,MAAM,CAAC7P,IAAI,CAACsL,SAAS,CAAC;UAC/B;QACF;QACA,OAAO,EAAE;MACX,CAAC;MACDs2C,UAAU,EAAEplD,IAAI;MAChBqiD,UAAU,EAAEriD,IAAI;MAChBylD,WAAW,EAAEzlD,IAAI;MACjByU,KAAKA,CAACgO,WAAW,EAAE;QACjB,IAAI,IAAI,IAAI,IAAI,CAAC/Y,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;UAC3D,OAAOyW,WAAW,CAAChO,KAAK,GAAG,IAAI,GAAGgO,WAAW,CAACE,cAAc,IAAIF,WAAW,CAACE,cAAc;QAC5F;QACA,IAAIlO,KAAK,GAAGgO,WAAW,CAAC9T,OAAO,CAAC8F,KAAK,IAAI,EAAE;QAC3C,IAAIA,KAAK,EAAE;UACTA,KAAK,IAAI,IAAI;QACf;QACA,MAAMtK,KAAK,GAAGsY,WAAW,CAACE,cAAc;QACxC,IAAI,CAACrrB,aAAa,CAAC6S,KAAK,CAAC,EAAE;UACzBsK,KAAK,IAAItK,KAAK;QAChB;QACA,OAAOsK,KAAK;MACd,CAAC;MACDwxC,UAAUA,CAACxjC,WAAW,EAAE;QACtB,MAAMjW,IAAI,GAAGiW,WAAW,CAAC3gB,KAAK,CAAC2P,cAAc,CAACgR,WAAW,CAACxW,YAAY,CAAC;QACvE,MAAMvC,OAAO,GAAG8C,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAACyN,WAAW,CAAC3T,SAAS,CAAC;QAC/D,OAAO;UACLqT,WAAW,EAAEzY,OAAO,CAACyY,WAAW;UAChCF,eAAe,EAAEvY,OAAO,CAACuY;QAC3B,CAAC;MACH,CAAC;MACDkkC,cAAcA,CAAA,EAAG;QACf,OAAO,IAAI,CAACz8C,OAAO,CAACm+C,SAAS;MAC/B,CAAC;MACD3B,eAAeA,CAACzjC,WAAW,EAAE;QAC3B,MAAMjW,IAAI,GAAGiW,WAAW,CAAC3gB,KAAK,CAAC2P,cAAc,CAACgR,WAAW,CAACxW,YAAY,CAAC;QACvE,MAAMvC,OAAO,GAAG8C,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAACyN,WAAW,CAAC3T,SAAS,CAAC;QAC/D,OAAO;UACLwlC,UAAU,EAAE5qC,OAAO,CAAC4qC,UAAU;UAC9Bx2B,QAAQ,EAAEpU,OAAO,CAACoU;QACpB,CAAC;MACH,CAAC;MACD4nC,UAAU,EAAE1lD,IAAI;MAChBsiD,SAAS,EAAEtiD,IAAI;MACf6lD,YAAY,EAAE7lD,IAAI;MAClB2hD,MAAM,EAAE3hD,IAAI;MACZ8lD,WAAW,EAAE9lD;IACf;EACF,CAAC;EACD0yB,aAAa,EAAE;IACbkvB,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClBvC,SAAS,EAAE;EACb,CAAC;EACDhjD,WAAW,EAAE;IACXgM,WAAW,EAAGC,IAAI,IAAKA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,UAAU;IACtFF,UAAU,EAAE,KAAK;IACjBnG,SAAS,EAAE;MACToG,WAAW,EAAE,KAAK;MAClBD,UAAU,EAAE;IACd,CAAC;IACDH,SAAS,EAAE;MACTE,SAAS,EAAE;IACb,CAAC;IACDO,UAAU,EAAE;MACVP,SAAS,EAAE;IACb;EACF,CAAC;EACDogC,sBAAsB,EAAE,CAAC,aAAa;AACxC,CAAC;AAED,IAAI9qB,OAAO,GAAG,aAAa1V,MAAM,CAAC8N,MAAM,CAAC;EACzCmQ,SAAS,EAAE,IAAI;EACf6iC,UAAU,EAAE7Q,iBAAiB;EAC7B8Q,MAAM,EAAEtN,aAAa;EACrBe,MAAM,EAAEyD,aAAa;EACrBI,KAAK,EAAEO,YAAY;EACnB0D,OAAO,EAAEoE;AACT,CAAC,CAAC;AAEF,MAAMM,WAAW,GAAGA,CAAC31C,MAAM,EAAEtE,GAAG,EAAEpD,KAAK,KAAK,OAAOoD,GAAG,KAAK,QAAQ,GAC/DsE,MAAM,CAAC/O,IAAI,CAACyK,GAAG,CAAC,GAAG,CAAC,GACpB4M,KAAK,CAAC5M,GAAG,CAAC,GAAG,IAAI,GAAGpD,KAAK;AAC7B,SAASs9C,cAAcA,CAAC51C,MAAM,EAAEtE,GAAG,EAAEpD,KAAK,EAAE;EAC1C,MAAM6pB,KAAK,GAAGniB,MAAM,CAACuI,OAAO,CAAC7M,GAAG,CAAC;EACjC,IAAIymB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,OAAOwzB,WAAW,CAAC31C,MAAM,EAAEtE,GAAG,EAAEpD,KAAK,CAAC;EACxC;EACA,MAAM8P,IAAI,GAAGpI,MAAM,CAAC61C,WAAW,CAACn6C,GAAG,CAAC;EACpC,OAAOymB,KAAK,KAAK/Z,IAAI,GAAG9P,KAAK,GAAG6pB,KAAK;AACvC;AACA,MAAM0B,UAAU,GAAGA,CAACvrB,KAAK,EAAE/G,GAAG,KAAK+G,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG3S,WAAW,CAACyJ,IAAI,CAACozB,KAAK,CAAClqB,KAAK,CAAC,EAAE,CAAC,EAAE/G,GAAG,CAAC;AACjG,MAAMukD,aAAa,SAAS9wB,KAAK,CAAC;EAChC/2B,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAACojD,WAAW,GAAGxnD,SAAS;IAC5B,IAAI,CAACynD,WAAW,GAAG,CAAC;EACtB;EACAz2C,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,IAAIrU,aAAa,CAACyX,GAAG,CAAC,EAAE;MACtB,OAAO,IAAI;IACb;IACA,MAAMsE,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;IAC/B3H,KAAK,GAAG29C,QAAQ,CAAC39C,KAAK,CAAC,IAAI0H,MAAM,CAAC1H,KAAK,CAAC,KAAKoD,GAAG,GAAGpD,KAAK,GACpDs9C,cAAc,CAAC51C,MAAM,EAAEtE,GAAG,EAAEvY,cAAc,CAACmV,KAAK,EAAEoD,GAAG,CAAC,CAAC;IAC3D,OAAOmoB,UAAU,CAACvrB,KAAK,EAAE0H,MAAM,CAAC/P,MAAM,GAAG,CAAC,CAAC;EAC7C;EACA82B,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACkK,UAAU;MAAEC;IAAU,CAAC,GAAGnK,EAAE,CAACiK,aAAa,CAAC,CAAC;IACnD,IAAI;MAACpK,GAAG;MAAEkC;IAAG,CAAC,GAAG/B,EAAE,CAACmR,SAAS,CAAC,IAAI,CAAC;IACnC,IAAInR,EAAE,CAAC6G,OAAO,CAAC8pB,MAAM,KAAK,OAAO,EAAE;MACjC,IAAI,CAACzmB,UAAU,EAAE;QACfrK,GAAG,GAAG,CAAC;MACT;MACA,IAAI,CAACsK,UAAU,EAAE;QACfpI,GAAG,GAAG/B,EAAE,CAACyQ,SAAS,CAAC,CAAC,CAAChQ,MAAM,GAAG,CAAC;MACjC;IACF;IACAT,EAAE,CAACH,GAAG,GAAGA,GAAG;IACZG,EAAE,CAAC+B,GAAG,GAAGA,GAAG;EACd;EACA21B,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAMH,GAAG,GAAGG,EAAE,CAACH,GAAG;IAClB,MAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAG;IAClB,MAAMoY,MAAM,GAAGna,EAAE,CAAC6G,OAAO,CAACsT,MAAM;IAChC,MAAMrE,KAAK,GAAG,EAAE;IAChB,IAAItF,MAAM,GAAGxQ,EAAE,CAACyQ,SAAS,CAAC,CAAC;IAC3BD,MAAM,GAAI3Q,GAAG,KAAK,CAAC,IAAIkC,GAAG,KAAKyO,MAAM,CAAC/P,MAAM,GAAG,CAAC,GAAI+P,MAAM,GAAGA,MAAM,CAACuP,KAAK,CAAClgB,GAAG,EAAEkC,GAAG,GAAG,CAAC,CAAC;IACvF/B,EAAE,CAACwmD,WAAW,GAAG5mD,IAAI,CAACmC,GAAG,CAACyO,MAAM,CAAC/P,MAAM,IAAI0Z,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9Dna,EAAE,CAACumD,WAAW,GAAGvmD,EAAE,CAACH,GAAG,IAAIsa,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;IAC5C,KAAK,IAAI7S,KAAK,GAAGzH,GAAG,EAAEyH,KAAK,IAAIvF,GAAG,EAAEuF,KAAK,EAAE,EAAE;MAC3CwO,KAAK,CAACrU,IAAI,CAAC;QAAC6F;MAAK,CAAC,CAAC;IACrB;IACA,OAAOwO,KAAK;EACd;EACAjE,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,MAAMtH,EAAE,GAAG,IAAI;IACf,MAAMwQ,MAAM,GAAGxQ,EAAE,CAACyQ,SAAS,CAAC,CAAC;IAC7B,IAAInJ,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGkJ,MAAM,CAAC/P,MAAM,EAAE;MACvC,OAAO+P,MAAM,CAAClJ,KAAK,CAAC;IACtB;IACA,OAAOA,KAAK;EACd;EACAjB,SAASA,CAAA,EAAG;IACV,MAAMrG,EAAE,GAAG,IAAI;IACf,KAAK,CAACqG,SAAS,CAAC,CAAC;IACjB,IAAI,CAACrG,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACtBhY,EAAE,CAAC8kB,cAAc,GAAG,CAAC9kB,EAAE,CAAC8kB,cAAc;IACxC;EACF;EACAjP,gBAAgBA,CAACvO,KAAK,EAAE;IACtB,MAAMtH,EAAE,GAAG,IAAI;IACf,IAAI,OAAOsH,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAGtH,EAAE,CAAC+P,KAAK,CAACzI,KAAK,CAAC;IACzB;IACA,OAAOA,KAAK,KAAK,IAAI,GAAG4J,GAAG,GAAGlR,EAAE,CAAC0a,kBAAkB,CAAC,CAACpT,KAAK,GAAGtH,EAAE,CAACumD,WAAW,IAAIvmD,EAAE,CAACwmD,WAAW,CAAC;EAChG;EACAzwC,eAAeA,CAACjN,KAAK,EAAE;IACrB,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,IAAIhN,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGgN,KAAK,CAACrV,MAAM,GAAG,CAAC,EAAE;MACzC,OAAO,IAAI;IACb;IACA,OAAOT,EAAE,CAAC6V,gBAAgB,CAACC,KAAK,CAAChN,KAAK,CAAC,CAACxB,KAAK,CAAC;EAChD;EACA8zB,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,OAAOJ,IAAI,CAACozB,KAAK,CAAChzB,EAAE,CAACumD,WAAW,GAAGvmD,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC,GAAGr7B,EAAE,CAACwmD,WAAW,CAAC;EACnF;EACA1uC,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACxP,MAAM;EACpB;AACF;AACAg+C,aAAa,CAACt8C,EAAE,GAAG,UAAU;AAC7Bs8C,aAAa,CAAC7yD,QAAQ,GAAG;EACvBqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEquD,aAAa,CAACtxC,SAAS,CAACnD;EACpC;AACF,CAAC;AAED,SAAS60C,eAAeA,CAACC,iBAAiB,EAAEC,SAAS,EAAE;EACrD,MAAM9wC,KAAK,GAAG,EAAE;EAChB,MAAM+wC,WAAW,GAAG,KAAK;EACzB,MAAM;IAACC,IAAI;IAAEjnD,GAAG;IAAEkC,GAAG;IAAEglD,SAAS;IAAE/2C,KAAK;IAAEg3C;EAAQ,CAAC,GAAGL,iBAAiB;EACtE,MAAM/iC,IAAI,GAAGkjC,IAAI,IAAI,CAAC;EACtB,MAAMG,SAAS,GAAGD,QAAQ,GAAG,CAAC;EAC9B,MAAM;IAACnnD,GAAG,EAAEqnD,IAAI;IAAEnlD,GAAG,EAAEolD;EAAI,CAAC,GAAGP,SAAS;EACxC,MAAM18C,UAAU,GAAG,CAACzV,aAAa,CAACoL,GAAG,CAAC;EACtC,MAAMsK,UAAU,GAAG,CAAC1V,aAAa,CAACsN,GAAG,CAAC;EACtC,MAAMqlD,YAAY,GAAG,CAAC3yD,aAAa,CAACub,KAAK,CAAC;EAC1C,IAAI+M,OAAO,GAAGpf,OAAO,CAAC,CAACwpD,IAAI,GAAGD,IAAI,IAAID,SAAS,GAAGrjC,IAAI,CAAC,GAAGA,IAAI;EAC9D,IAAIjhB,MAAM,EAAE0kD,OAAO,EAAEC,OAAO,EAAEC,SAAS;EACvC,IAAIxqC,OAAO,GAAG8pC,WAAW,IAAI,CAAC38C,UAAU,IAAI,CAACC,UAAU,EAAE;IACvD,OAAO,CAAC;MAAC7C,KAAK,EAAE4/C;IAAI,CAAC,EAAE;MAAC5/C,KAAK,EAAE6/C;IAAI,CAAC,CAAC;EACvC;EACAI,SAAS,GAAG3nD,IAAI,CAAC6zB,IAAI,CAAC0zB,IAAI,GAAGpqC,OAAO,CAAC,GAAGnd,IAAI,CAACgE,KAAK,CAACsjD,IAAI,GAAGnqC,OAAO,CAAC;EAClE,IAAIwqC,SAAS,GAAGN,SAAS,EAAE;IACzBlqC,OAAO,GAAGpf,OAAO,CAAC4pD,SAAS,GAAGxqC,OAAO,GAAGkqC,SAAS,GAAGrjC,IAAI,CAAC,GAAGA,IAAI;EAClE;EACA,IAAI,CAACnvB,aAAa,CAACsyD,SAAS,CAAC,EAAE;IAC7BpkD,MAAM,GAAG/C,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAEohC,SAAS,CAAC;IAChChqC,OAAO,GAAGnd,IAAI,CAAC6zB,IAAI,CAAC1W,OAAO,GAAGpa,MAAM,CAAC,GAAGA,MAAM;EAChD;EACA0kD,OAAO,GAAGznD,IAAI,CAACgE,KAAK,CAACsjD,IAAI,GAAGnqC,OAAO,CAAC,GAAGA,OAAO;EAC9CuqC,OAAO,GAAG1nD,IAAI,CAAC6zB,IAAI,CAAC0zB,IAAI,GAAGpqC,OAAO,CAAC,GAAGA,OAAO;EAC7C,IAAI7S,UAAU,IAAIC,UAAU,IAAI28C,IAAI,IAAIjpD,WAAW,CAAC,CAACkE,GAAG,GAAGlC,GAAG,IAAIinD,IAAI,EAAE/pC,OAAO,GAAG,IAAI,CAAC,EAAE;IACvFwqC,SAAS,GAAG3nD,IAAI,CAACC,GAAG,CAAC,CAACkC,GAAG,GAAGlC,GAAG,IAAIkd,OAAO,EAAEiqC,QAAQ,CAAC;IACrDjqC,OAAO,GAAG,CAAChb,GAAG,GAAGlC,GAAG,IAAI0nD,SAAS;IACjCF,OAAO,GAAGxnD,GAAG;IACbynD,OAAO,GAAGvlD,GAAG;EACf,CAAC,MAAM,IAAIqlD,YAAY,EAAE;IACvBC,OAAO,GAAGn9C,UAAU,GAAGrK,GAAG,GAAGwnD,OAAO;IACpCC,OAAO,GAAGn9C,UAAU,GAAGpI,GAAG,GAAGulD,OAAO;IACpCC,SAAS,GAAGv3C,KAAK,GAAG,CAAC;IACrB+M,OAAO,GAAG,CAACuqC,OAAO,GAAGD,OAAO,IAAIE,SAAS;EAC3C,CAAC,MAAM;IACLA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAO,IAAItqC,OAAO;IACzC,IAAIhf,YAAY,CAACwpD,SAAS,EAAE3nD,IAAI,CAACozB,KAAK,CAACu0B,SAAS,CAAC,EAAExqC,OAAO,GAAG,IAAI,CAAC,EAAE;MAClEwqC,SAAS,GAAG3nD,IAAI,CAACozB,KAAK,CAACu0B,SAAS,CAAC;IACnC,CAAC,MAAM;MACLA,SAAS,GAAG3nD,IAAI,CAAC6zB,IAAI,CAAC8zB,SAAS,CAAC;IAClC;EACF;EACA5kD,MAAM,GAAG/C,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAElxB,aAAa,CAACsyD,SAAS,CAAC,GAAG9oD,cAAc,CAAC8e,OAAO,CAAC,GAAGgqC,SAAS,CAAC;EACrFM,OAAO,GAAGznD,IAAI,CAACozB,KAAK,CAACq0B,OAAO,GAAG1kD,MAAM,CAAC,GAAGA,MAAM;EAC/C2kD,OAAO,GAAG1nD,IAAI,CAACozB,KAAK,CAACs0B,OAAO,GAAG3kD,MAAM,CAAC,GAAGA,MAAM;EAC/C,IAAInO,CAAC,GAAG,CAAC;EACT,IAAI0V,UAAU,EAAE;IACd4L,KAAK,CAACrU,IAAI,CAAC;MAAC6F,KAAK,EAAEzH;IAAG,CAAC,CAAC;IACxB,IAAIwnD,OAAO,GAAGxnD,GAAG,EAAE;MACjBrL,CAAC,EAAE;IACL;IACA,IAAIqJ,WAAW,CAAC+B,IAAI,CAACozB,KAAK,CAAC,CAACq0B,OAAO,GAAG7yD,CAAC,GAAGuoB,OAAO,IAAIpa,MAAM,CAAC,GAAGA,MAAM,GAAG9C,GAAG,EAAEkd,OAAO,GAAG,IAAI,CAAC,EAAE;MAC5FvoB,CAAC,EAAE;IACL;EACF;EACA,OAAOA,CAAC,GAAG+yD,SAAS,EAAE,EAAE/yD,CAAC,EAAE;IACzBshB,KAAK,CAACrU,IAAI,CAAC;MAAC6F,KAAK,EAAE1H,IAAI,CAACozB,KAAK,CAAC,CAACq0B,OAAO,GAAG7yD,CAAC,GAAGuoB,OAAO,IAAIpa,MAAM,CAAC,GAAGA;IAAM,CAAC,CAAC;EAC5E;EACA,IAAIwH,UAAU,EAAE;IACd,IAAItM,WAAW,CAACiY,KAAK,CAACA,KAAK,CAACrV,MAAM,GAAG,CAAC,CAAC,CAAC6G,KAAK,GAAGvF,GAAG,EAAEgb,OAAO,GAAG,IAAI,CAAC,EAAE;MACpEjH,KAAK,CAACA,KAAK,CAACrV,MAAM,GAAG,CAAC,CAAC,CAAC6G,KAAK,GAAGvF,GAAG;IACrC,CAAC,MAAM;MACL+T,KAAK,CAACrU,IAAI,CAAC;QAAC6F,KAAK,EAAEvF;MAAG,CAAC,CAAC;IAC1B;EACF,CAAC,MAAM;IACL+T,KAAK,CAACrU,IAAI,CAAC;MAAC6F,KAAK,EAAEggD;IAAO,CAAC,CAAC;EAC9B;EACA,OAAOxxC,KAAK;AACd;AACA,MAAM0xC,eAAe,SAAShyB,KAAK,CAAC;EAClC/2B,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAACrD,KAAK,GAAGf,SAAS;IACtB,IAAI,CAACiJ,GAAG,GAAGjJ,SAAS;IACpB,IAAI,CAACwnD,WAAW,GAAGxnD,SAAS;IAC5B,IAAI,CAAC0oD,SAAS,GAAG1oD,SAAS;IAC1B,IAAI,CAACynD,WAAW,GAAG,CAAC;EACtB;EACAz2C,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,IAAIrU,aAAa,CAACyX,GAAG,CAAC,EAAE;MACtB,OAAO,IAAI;IACb;IACA,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAY9B,MAAM,KAAK,CAACq8C,QAAQ,CAAC,CAACv6C,GAAG,CAAC,EAAE;MACzE,OAAO,IAAI;IACb;IACA,OAAO,CAACA,GAAG;EACb;EACAw7C,sBAAsBA,CAAA,EAAG;IACvB,MAAM1nD,EAAE,GAAG,IAAI;IACf,MAAM;MAACsa,WAAW;MAAE1Q;IAAO,CAAC,GAAG5J,EAAE,CAAC6G,OAAO;IACzC,MAAM;MAACqD,UAAU;MAAEC;IAAU,CAAC,GAAGnK,EAAE,CAACiK,aAAa,CAAC,CAAC;IACnD,IAAI;MAACpK,GAAG;MAAEkC;IAAG,CAAC,GAAG/B,EAAE;IACnB,MAAM2nD,MAAM,GAAGj0D,CAAC,IAAKmM,GAAG,GAAGqK,UAAU,GAAGrK,GAAG,GAAGnM,CAAE;IAChD,MAAMk0D,MAAM,GAAGl0D,CAAC,IAAKqO,GAAG,GAAGoI,UAAU,GAAGpI,GAAG,GAAGrO,CAAE;IAChD,IAAI4mB,WAAW,IAAI1Q,OAAO,EAAE;MAC1B,MAAMi+C,OAAO,GAAGtzD,IAAI,CAACsL,GAAG,CAAC;MACzB,MAAMioD,OAAO,GAAGvzD,IAAI,CAACwN,GAAG,CAAC;MACzB,IAAI8lD,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;QAC9BF,MAAM,CAAC,CAAC,CAAC;MACX,CAAC,MAAM,IAAIC,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;QACrCH,MAAM,CAAC,CAAC,CAAC;MACX;IACF;IACA,IAAI9nD,GAAG,KAAKkC,GAAG,EAAE;MACf6lD,MAAM,CAAC7lD,GAAG,GAAG,CAAC,CAAC;MACf,IAAI,CAACuY,WAAW,EAAE;QAChBqtC,MAAM,CAAC9nD,GAAG,GAAG,CAAC,CAAC;MACjB;IACF;IACAG,EAAE,CAACH,GAAG,GAAGA,GAAG;IACZG,EAAE,CAAC+B,GAAG,GAAGA,GAAG;EACd;EACAgmD,YAAYA,CAAA,EAAG;IACb,MAAM/nD,EAAE,GAAG,IAAI;IACf,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC6G,OAAO,CAACiP,KAAK;IACjC,IAAI;MAACuc,aAAa;MAAE21B;IAAQ,CAAC,GAAG71B,QAAQ;IACxC,IAAI60B,QAAQ;IACZ,IAAIgB,QAAQ,EAAE;MACZhB,QAAQ,GAAGpnD,IAAI,CAAC6zB,IAAI,CAACzzB,EAAE,CAAC+B,GAAG,GAAGimD,QAAQ,CAAC,GAAGpoD,IAAI,CAACgE,KAAK,CAAC5D,EAAE,CAACH,GAAG,GAAGmoD,QAAQ,CAAC,GAAG,CAAC;IAC7E,CAAC,MAAM;MACLhB,QAAQ,GAAGhnD,EAAE,CAACioD,gBAAgB,CAAC,CAAC;MAChC51B,aAAa,GAAGA,aAAa,IAAI,EAAE;IACrC;IACA,IAAIA,aAAa,EAAE;MACjB20B,QAAQ,GAAGpnD,IAAI,CAACC,GAAG,CAACwyB,aAAa,EAAE20B,QAAQ,CAAC;IAC9C;IACA,OAAOA,QAAQ;EACjB;EACAiB,gBAAgBA,CAAA,EAAG;IACjB,OAAO79C,MAAM,CAACE,iBAAiB;EACjC;EACAotB,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAMsrB,QAAQ,GAAGrqB,IAAI,CAACgO,KAAK;IAC3B,IAAIkxC,QAAQ,GAAGhnD,EAAE,CAAC+nD,YAAY,CAAC,CAAC;IAChCf,QAAQ,GAAGpnD,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEilD,QAAQ,CAAC;IAChC,MAAMkB,uBAAuB,GAAG;MAC9BlB,QAAQ;MACRnnD,GAAG,EAAEiI,IAAI,CAACjI,GAAG;MACbkC,GAAG,EAAE+F,IAAI,CAAC/F,GAAG;MACbglD,SAAS,EAAE50B,QAAQ,CAAC40B,SAAS;MAC7BD,IAAI,EAAE30B,QAAQ,CAAC61B,QAAQ;MACvBh4C,KAAK,EAAEmiB,QAAQ,CAACniB;IAClB,CAAC;IACD,MAAM8F,KAAK,GAAG4wC,eAAe,CAACwB,uBAAuB,EAAE3qD,SAAS,CAACyC,EAAE,EAAE8H,IAAI,CAAC8oB,KAAK,CAAC,CAAC;IACjF,IAAI9oB,IAAI,CAAC6oB,MAAM,KAAK,OAAO,EAAE;MAC3BlzB,kBAAkB,CAACqY,KAAK,EAAE9V,EAAE,EAAE,OAAO,CAAC;IACxC;IACA,IAAI8H,IAAI,CAACC,OAAO,EAAE;MAChB+N,KAAK,CAAC/N,OAAO,CAAC,CAAC;MACf/H,EAAE,CAACF,KAAK,GAAGE,EAAE,CAAC+B,GAAG;MACjB/B,EAAE,CAACgI,GAAG,GAAGhI,EAAE,CAACH,GAAG;IACjB,CAAC,MAAM;MACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;MACjBG,EAAE,CAACgI,GAAG,GAAGhI,EAAE,CAAC+B,GAAG;IACjB;IACA,OAAO+T,KAAK;EACd;EACAzP,SAASA,CAAA,EAAG;IACV,MAAMrG,EAAE,GAAG,IAAI;IACf,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,IAAIhW,KAAK,GAAGE,EAAE,CAACH,GAAG;IAClB,IAAImI,GAAG,GAAGhI,EAAE,CAAC+B,GAAG;IAChB,KAAK,CAACsE,SAAS,CAAC,CAAC;IACjB,IAAIrG,EAAE,CAAC6G,OAAO,CAACsT,MAAM,IAAIrE,KAAK,CAACrV,MAAM,EAAE;MACrC,MAAM0Z,MAAM,GAAG,CAACnS,GAAG,GAAGlI,KAAK,IAAIF,IAAI,CAACmC,GAAG,CAAC+T,KAAK,CAACrV,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;MAChEX,KAAK,IAAIqa,MAAM;MACfnS,GAAG,IAAImS,MAAM;IACf;IACAna,EAAE,CAACumD,WAAW,GAAGzmD,KAAK;IACtBE,EAAE,CAACynD,SAAS,GAAGz/C,GAAG;IAClBhI,EAAE,CAACwmD,WAAW,GAAGx+C,GAAG,GAAGlI,KAAK;EAC9B;EACA+R,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,OAAO7R,YAAY,CAAC6R,KAAK,EAAE,IAAI,CAACrI,KAAK,CAAC4H,OAAO,CAACyX,MAAM,CAAC;EACvD;AACF;AAEA,MAAM6pC,WAAW,SAASX,eAAe,CAAC;EACxCjwB,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEkC;IAAG,CAAC,GAAG/B,EAAE,CAACmR,SAAS,CAAC,IAAI,CAAC;IACrCnR,EAAE,CAACH,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACtCG,EAAE,CAAC+B,GAAG,GAAG5N,cAAc,CAAC4N,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACtC/B,EAAE,CAAC0nD,sBAAsB,CAAC,CAAC;EAC7B;EACAO,gBAAgBA,CAAA,EAAG;IACjB,MAAMjoD,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrB,OAAOpY,IAAI,CAAC6zB,IAAI,CAACzzB,EAAE,CAAC0Y,KAAK,GAAG,EAAE,CAAC;IACjC;IACA,MAAMmiB,QAAQ,GAAG76B,EAAE,CAACg7B,uBAAuB,CAAC,CAAC,CAAC;IAC9C,OAAOp7B,IAAI,CAAC6zB,IAAI,CAACzzB,EAAE,CAACyY,MAAM,GAAGoiB,QAAQ,CAAC5F,UAAU,CAAC;EACnD;EACApf,gBAAgBA,CAACvO,KAAK,EAAE;IACtB,OAAOA,KAAK,KAAK,IAAI,GAAG4J,GAAG,GAAG,IAAI,CAACwJ,kBAAkB,CAAC,CAACpT,KAAK,GAAG,IAAI,CAACi/C,WAAW,IAAI,IAAI,CAACC,WAAW,CAAC;EACtG;EACAprB,gBAAgBA,CAACC,KAAK,EAAE;IACtB,OAAO,IAAI,CAACkrB,WAAW,GAAG,IAAI,CAAChrB,kBAAkB,CAACF,KAAK,CAAC,GAAG,IAAI,CAACmrB,WAAW;EAC7E;AACF;AACA2B,WAAW,CAACn+C,EAAE,GAAG,QAAQ;AACzBm+C,WAAW,CAAC10D,QAAQ,GAAG;EACrBqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAACC;EAC7B;AACF,CAAC;AAED,SAASq4B,OAAOA,CAACC,OAAO,EAAE;EACxB,MAAM7jD,MAAM,GAAG6jD,OAAO,GAAIzoD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACgE,KAAK,CAACjM,KAAK,CAAC0wD,OAAO,CAAC,CAAC,CAAE;EACnE,OAAO7jD,MAAM,KAAK,CAAC;AACrB;AACA,SAAS8jD,aAAaA,CAAC3B,iBAAiB,EAAEC,SAAS,EAAE;EACnD,MAAM2B,MAAM,GAAG3oD,IAAI,CAACgE,KAAK,CAACjM,KAAK,CAACivD,SAAS,CAAC7kD,GAAG,CAAC,CAAC;EAC/C,MAAMymD,cAAc,GAAG5oD,IAAI,CAAC6zB,IAAI,CAACmzB,SAAS,CAAC7kD,GAAG,GAAGnC,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE4iC,MAAM,CAAC,CAAC;EACtE,MAAMzyC,KAAK,GAAG,EAAE;EAChB,IAAIuyC,OAAO,GAAGtwD,eAAe,CAAC4uD,iBAAiB,CAAC9mD,GAAG,EAAED,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACgE,KAAK,CAACjM,KAAK,CAACivD,SAAS,CAAC/mD,GAAG,CAAC,CAAC,CAAC,CAAC;EACpG,IAAI4oD,GAAG,GAAG7oD,IAAI,CAACgE,KAAK,CAACjM,KAAK,CAAC0wD,OAAO,CAAC,CAAC;EACpC,IAAIK,WAAW,GAAG9oD,IAAI,CAACgE,KAAK,CAACykD,OAAO,GAAGzoD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE8iC,GAAG,CAAC,CAAC;EACzD,IAAI1B,SAAS,GAAG0B,GAAG,GAAG,CAAC,GAAG7oD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACgW,GAAG,CAAC6yC,GAAG,CAAC,CAAC,GAAG,CAAC;EACzD,GAAG;IACD3yC,KAAK,CAACrU,IAAI,CAAC;MAAC6F,KAAK,EAAE+gD,OAAO;MAAEv2B,KAAK,EAAEs2B,OAAO,CAACC,OAAO;IAAC,CAAC,CAAC;IACrD,EAAEK,WAAW;IACb,IAAIA,WAAW,KAAK,EAAE,EAAE;MACtBA,WAAW,GAAG,CAAC;MACf,EAAED,GAAG;MACL1B,SAAS,GAAG0B,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG1B,SAAS;IACtC;IACAsB,OAAO,GAAGzoD,IAAI,CAACozB,KAAK,CAAC01B,WAAW,GAAG9oD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE8iC,GAAG,CAAC,GAAG1B,SAAS,CAAC,GAAGA,SAAS;EAC/E,CAAC,QAAQ0B,GAAG,GAAGF,MAAM,IAAKE,GAAG,KAAKF,MAAM,IAAIG,WAAW,GAAGF,cAAe;EACzE,MAAMG,QAAQ,GAAG5wD,eAAe,CAAC4uD,iBAAiB,CAAC5kD,GAAG,EAAEsmD,OAAO,CAAC;EAChEvyC,KAAK,CAACrU,IAAI,CAAC;IAAC6F,KAAK,EAAEqhD,QAAQ;IAAE72B,KAAK,EAAEs2B,OAAO,CAACC,OAAO;EAAC,CAAC,CAAC;EACtD,OAAOvyC,KAAK;AACd;AACA,MAAM8yC,gBAAgB,SAASpzB,KAAK,CAAC;EACnC/2B,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAACrD,KAAK,GAAGf,SAAS;IACtB,IAAI,CAACiJ,GAAG,GAAGjJ,SAAS;IACpB,IAAI,CAACwnD,WAAW,GAAGxnD,SAAS;IAC5B,IAAI,CAACynD,WAAW,GAAG,CAAC;EACtB;EACAz2C,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,MAAMxB,KAAK,GAAGkgD,eAAe,CAACxyC,SAAS,CAACjF,KAAK,CAACwuC,KAAK,CAAC,IAAI,EAAE,CAACryC,GAAG,EAAEpD,KAAK,CAAC,CAAC;IACvE,IAAIxB,KAAK,KAAK,CAAC,EAAE;MACf,IAAI,CAACuhD,KAAK,GAAG,IAAI;MACjB,OAAO9pD,SAAS;IAClB;IACA,OAAO5K,cAAc,CAACmT,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,IAAI;EAC1D;EACAiwB,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEkC;IAAG,CAAC,GAAG/B,EAAE,CAACmR,SAAS,CAAC,IAAI,CAAC;IACrCnR,EAAE,CAACH,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,GAAGD,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAElC,GAAG,CAAC,GAAG,IAAI;IACtDG,EAAE,CAAC+B,GAAG,GAAG5N,cAAc,CAAC4N,GAAG,CAAC,GAAGnC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEA,GAAG,CAAC,GAAG,IAAI;IACtD,IAAI/B,EAAE,CAAC6G,OAAO,CAACyT,WAAW,EAAE;MAC1Bta,EAAE,CAAC6oD,KAAK,GAAG,IAAI;IACjB;IACA7oD,EAAE,CAAC0nD,sBAAsB,CAAC,CAAC;EAC7B;EACAA,sBAAsBA,CAAA,EAAG;IACvB,MAAM1nD,EAAE,GAAG,IAAI;IACf,MAAM;MAACkK,UAAU;MAAEC;IAAU,CAAC,GAAGnK,EAAE,CAACiK,aAAa,CAAC,CAAC;IACnD,IAAIpK,GAAG,GAAGG,EAAE,CAACH,GAAG;IAChB,IAAIkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAG;IAChB,MAAM4lD,MAAM,GAAGj0D,CAAC,IAAKmM,GAAG,GAAGqK,UAAU,GAAGrK,GAAG,GAAGnM,CAAE;IAChD,MAAMk0D,MAAM,GAAGl0D,CAAC,IAAKqO,GAAG,GAAGoI,UAAU,GAAGpI,GAAG,GAAGrO,CAAE;IAChD,MAAM+0D,GAAG,GAAGA,CAAC/0D,CAAC,EAAEkB,CAAC,KAAKgL,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACgE,KAAK,CAACjM,KAAK,CAACjE,CAAC,CAAC,CAAC,GAAGkB,CAAC,CAAC;IAC5D,IAAIiL,GAAG,KAAKkC,GAAG,EAAE;MACf,IAAIlC,GAAG,IAAI,CAAC,EAAE;QACZ8nD,MAAM,CAAC,CAAC,CAAC;QACTC,MAAM,CAAC,EAAE,CAAC;MACZ,CAAC,MAAM;QACLD,MAAM,CAACc,GAAG,CAAC5oD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACpB+nD,MAAM,CAACa,GAAG,CAAC1mD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;IACF;IACA,IAAIlC,GAAG,IAAI,CAAC,EAAE;MACZ8nD,MAAM,CAACc,GAAG,CAAC1mD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB;IACA,IAAIA,GAAG,IAAI,CAAC,EAAE;MACZ6lD,MAAM,CAACa,GAAG,CAAC5oD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB;IACA,IAAIG,EAAE,CAAC6oD,KAAK,IAAI7oD,EAAE,CAACH,GAAG,KAAKG,EAAE,CAACs2B,aAAa,IAAIz2B,GAAG,KAAK4oD,GAAG,CAACzoD,EAAE,CAACH,GAAG,EAAE,CAAC,CAAC,EAAE;MACrE8nD,MAAM,CAACc,GAAG,CAAC5oD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB;IACAG,EAAE,CAACH,GAAG,GAAGA,GAAG;IACZG,EAAE,CAAC+B,GAAG,GAAGA,GAAG;EACd;EACA21B,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAM8/C,iBAAiB,GAAG;MACxB9mD,GAAG,EAAEG,EAAE,CAACo2B,QAAQ;MAChBr0B,GAAG,EAAE/B,EAAE,CAACm2B;IACV,CAAC;IACD,MAAMrgB,KAAK,GAAGwyC,aAAa,CAAC3B,iBAAiB,EAAE3mD,EAAE,CAAC;IAClD,IAAI8H,IAAI,CAAC6oB,MAAM,KAAK,OAAO,EAAE;MAC3BlzB,kBAAkB,CAACqY,KAAK,EAAE9V,EAAE,EAAE,OAAO,CAAC;IACxC;IACA,IAAI8H,IAAI,CAACC,OAAO,EAAE;MAChB+N,KAAK,CAAC/N,OAAO,CAAC,CAAC;MACf/H,EAAE,CAACF,KAAK,GAAGE,EAAE,CAAC+B,GAAG;MACjB/B,EAAE,CAACgI,GAAG,GAAGhI,EAAE,CAACH,GAAG;IACjB,CAAC,MAAM;MACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;MACjBG,EAAE,CAACgI,GAAG,GAAGhI,EAAE,CAAC+B,GAAG;IACjB;IACA,OAAO+T,KAAK;EACd;EACAjE,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,OAAOA,KAAK,KAAKvI,SAAS,GAAG,GAAG,GAAGtJ,YAAY,CAAC6R,KAAK,EAAE,IAAI,CAACrI,KAAK,CAAC4H,OAAO,CAACyX,MAAM,CAAC;EACnF;EACAjY,SAASA,CAAA,EAAG;IACV,MAAMrG,EAAE,GAAG,IAAI;IACf,MAAMF,KAAK,GAAGE,EAAE,CAACH,GAAG;IACpB,KAAK,CAACwG,SAAS,CAAC,CAAC;IACjBrG,EAAE,CAACumD,WAAW,GAAG5uD,KAAK,CAACmI,KAAK,CAAC;IAC7BE,EAAE,CAACwmD,WAAW,GAAG7uD,KAAK,CAACqI,EAAE,CAAC+B,GAAG,CAAC,GAAGpK,KAAK,CAACmI,KAAK,CAAC;EAC/C;EACA+V,gBAAgBA,CAACvO,KAAK,EAAE;IACtB,MAAMtH,EAAE,GAAG,IAAI;IACf,IAAIsH,KAAK,KAAKvI,SAAS,IAAIuI,KAAK,KAAK,CAAC,EAAE;MACtCA,KAAK,GAAGtH,EAAE,CAACH,GAAG;IAChB;IACA,OAAOG,EAAE,CAAC0a,kBAAkB,CAACpT,KAAK,KAAKtH,EAAE,CAACH,GAAG,GACzC,CAAC,GACD,CAAClI,KAAK,CAAC2P,KAAK,CAAC,GAAGtH,EAAE,CAACumD,WAAW,IAAIvmD,EAAE,CAACwmD,WAAW,CAAC;EACvD;EACAprB,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,MAAMs7B,OAAO,GAAGt7B,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC;IAC5C,OAAOz7B,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE3lB,EAAE,CAACumD,WAAW,GAAGjrB,OAAO,GAAGt7B,EAAE,CAACwmD,WAAW,CAAC;EAChE;AACF;AACAoC,gBAAgB,CAAC5+C,EAAE,GAAG,aAAa;AACnC4+C,gBAAgB,CAACn1D,QAAQ,GAAG;EAC1BqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAACW,WAAW;IACtCqB,KAAK,EAAE;MACLU,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAASs2B,qBAAqBA,CAAChhD,IAAI,EAAE;EACnC,MAAMqqB,QAAQ,GAAGrqB,IAAI,CAACgO,KAAK;EAC3B,IAAIqc,QAAQ,CAAC1P,OAAO,IAAI3a,IAAI,CAAC2a,OAAO,EAAE;IACpC,MAAMyH,OAAO,GAAGrzB,SAAS,CAACs7B,QAAQ,CAAC42B,eAAe,CAAC;IACnD,OAAOp1D,cAAc,CAACw+B,QAAQ,CAAC4C,IAAI,IAAI5C,QAAQ,CAAC4C,IAAI,CAACxtB,IAAI,EAAE9T,QAAQ,CAACshC,IAAI,CAACxtB,IAAI,CAAC,GAAG2iB,OAAO,CAACzR,MAAM;EACjG;EACA,OAAO,CAAC;AACV;AACA,SAASuwC,gBAAgBA,CAACr8C,GAAG,EAAEsoB,UAAU,EAAErjB,KAAK,EAAE;EAChD,IAAIre,OAAO,CAACqe,KAAK,CAAC,EAAE;IAClB,OAAO;MACL5b,CAAC,EAAEmI,YAAY,CAACwO,GAAG,EAAEA,GAAG,CAACooB,IAAI,EAAEnjB,KAAK,CAAC;MACrCxd,CAAC,EAAEwd,KAAK,CAACnR,MAAM,GAAGw0B;IACpB,CAAC;EACH;EACA,OAAO;IACLj/B,CAAC,EAAE2W,GAAG,CAACiuC,WAAW,CAAChpC,KAAK,CAAC,CAAC8G,KAAK;IAC/BtkB,CAAC,EAAE6gC;EACL,CAAC;AACH;AACA,SAASg0B,eAAeA,CAAChtC,KAAK,EAAE8K,GAAG,EAAExf,IAAI,EAAE1H,GAAG,EAAEkC,GAAG,EAAE;EACnD,IAAIka,KAAK,KAAKpc,GAAG,IAAIoc,KAAK,KAAKla,GAAG,EAAE;IAClC,OAAO;MACLjC,KAAK,EAAEinB,GAAG,GAAIxf,IAAI,GAAG,CAAE;MACvBS,GAAG,EAAE+e,GAAG,GAAIxf,IAAI,GAAG;IACrB,CAAC;EACH,CAAC,MAAM,IAAI0U,KAAK,GAAGpc,GAAG,IAAIoc,KAAK,GAAGla,GAAG,EAAE;IACrC,OAAO;MACLjC,KAAK,EAAEinB,GAAG,GAAGxf,IAAI;MACjBS,GAAG,EAAE+e;IACP,CAAC;EACH;EACA,OAAO;IACLjnB,KAAK,EAAEinB,GAAG;IACV/e,GAAG,EAAE+e,GAAG,GAAGxf;EACb,CAAC;AACH;AACA,SAAS2hD,kBAAkBA,CAACthD,KAAK,EAAE;EACjC,MAAMuhD,cAAc,GAAG;IACrBr1D,CAAC,EAAE,CAAC;IACJlB,CAAC,EAAEgV,KAAK,CAAC8Q,KAAK;IACd1jB,CAAC,EAAE,CAAC;IACJ1B,CAAC,EAAEsU,KAAK,CAAC6Q,MAAM,GAAG7Q,KAAK,CAAC8tB;EAC1B,CAAC;EACD,MAAM0zB,cAAc,GAAG,CAAC,CAAC;EACzB,IAAIh2D,CAAC,EAAEsqD,QAAQ,EAAE36B,aAAa;EAC9B,MAAMoW,UAAU,GAAG,EAAE;EACrB,MAAMjP,OAAO,GAAG,EAAE;EAClB,MAAMm/B,UAAU,GAAGzhD,KAAK,CAAC6I,SAAS,CAAC,CAAC,CAAChQ,MAAM;EAC3C,KAAKrN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi2D,UAAU,EAAEj2D,CAAC,EAAE,EAAE;IAC/B,MAAM0U,IAAI,GAAGF,KAAK,CAACf,OAAO,CAAC8b,WAAW,CAACoZ,UAAU,CAACn0B,KAAK,CAACiI,UAAU,CAACzc,CAAC,CAAC,CAAC;IACtE82B,OAAO,CAAC92B,CAAC,CAAC,GAAG0U,IAAI,CAACoiB,OAAO;IACzBnH,aAAa,GAAGnb,KAAK,CAAC0hD,gBAAgB,CAACl2D,CAAC,EAAEwU,KAAK,CAAC2hD,WAAW,GAAGr/B,OAAO,CAAC92B,CAAC,CAAC,CAAC;IACzE,MAAMo2D,MAAM,GAAG3wD,MAAM,CAACiP,IAAI,CAACitB,IAAI,CAAC;IAChCntB,KAAK,CAAC+E,GAAG,CAACooB,IAAI,GAAGy0B,MAAM,CAACvuB,MAAM;IAC9ByiB,QAAQ,GAAGsL,gBAAgB,CAACphD,KAAK,CAAC+E,GAAG,EAAE68C,MAAM,CAACv0B,UAAU,EAAErtB,KAAK,CAAC6hD,YAAY,CAACr2D,CAAC,CAAC,CAAC;IAChF+lC,UAAU,CAAC/lC,CAAC,CAAC,GAAGsqD,QAAQ;IACxB,MAAM5jB,YAAY,GAAGlyB,KAAK,CAACua,aAAa,CAAC/uB,CAAC,CAAC;IAC3C,MAAM6oB,KAAK,GAAG9jB,SAAS,CAAC2hC,YAAY,CAAC;IACrC,MAAM4vB,OAAO,GAAGT,eAAe,CAAChtC,KAAK,EAAE8G,aAAa,CAAC7sB,CAAC,EAAEwnD,QAAQ,CAAC1nD,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC3E,MAAM2zD,OAAO,GAAGV,eAAe,CAAChtC,KAAK,EAAE8G,aAAa,CAAC3sB,CAAC,EAAEsnD,QAAQ,CAACtpD,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;IAC5E,IAAIs1D,OAAO,CAAC5pD,KAAK,GAAGqpD,cAAc,CAACr1D,CAAC,EAAE;MACpCq1D,cAAc,CAACr1D,CAAC,GAAG41D,OAAO,CAAC5pD,KAAK;MAChCspD,cAAc,CAACt1D,CAAC,GAAGgmC,YAAY;IACjC;IACA,IAAI4vB,OAAO,CAAC1hD,GAAG,GAAGmhD,cAAc,CAACv2D,CAAC,EAAE;MAClCu2D,cAAc,CAACv2D,CAAC,GAAG82D,OAAO,CAAC1hD,GAAG;MAC9BohD,cAAc,CAACx2D,CAAC,GAAGknC,YAAY;IACjC;IACA,IAAI6vB,OAAO,CAAC7pD,KAAK,GAAGqpD,cAAc,CAACn0D,CAAC,EAAE;MACpCm0D,cAAc,CAACn0D,CAAC,GAAG20D,OAAO,CAAC7pD,KAAK;MAChCspD,cAAc,CAACp0D,CAAC,GAAG8kC,YAAY;IACjC;IACA,IAAI6vB,OAAO,CAAC3hD,GAAG,GAAGmhD,cAAc,CAAC71D,CAAC,EAAE;MAClC61D,cAAc,CAAC71D,CAAC,GAAGq2D,OAAO,CAAC3hD,GAAG;MAC9BohD,cAAc,CAAC91D,CAAC,GAAGwmC,YAAY;IACjC;EACF;EACAlyB,KAAK,CAACgiD,cAAc,CAAChiD,KAAK,CAAC2hD,WAAW,EAAEJ,cAAc,EAAEC,cAAc,CAAC;EACvExhD,KAAK,CAACiiD,gBAAgB,GAAG,EAAE;EAC3B,MAAM/hD,IAAI,GAAGF,KAAK,CAACf,OAAO;EAC1B,MAAMijD,kBAAkB,GAAGhB,qBAAqB,CAAChhD,IAAI,CAAC;EACtD,MAAMiiD,aAAa,GAAGniD,KAAK,CAAC2a,6BAA6B,CAACza,IAAI,CAACgO,KAAK,CAAC/N,OAAO,GAAGH,KAAK,CAAC/H,GAAG,GAAG+H,KAAK,CAAC7F,GAAG,CAAC;EACrG,KAAK3O,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi2D,UAAU,EAAEj2D,CAAC,EAAE,EAAE;IAC/B,MAAM42D,KAAK,GAAI52D,CAAC,KAAK,CAAC,GAAG02D,kBAAkB,GAAG,CAAC,GAAG,CAAE;IACpD,MAAMG,kBAAkB,GAAGriD,KAAK,CAAC0hD,gBAAgB,CAACl2D,CAAC,EAAE22D,aAAa,GAAGC,KAAK,GAAG9/B,OAAO,CAAC92B,CAAC,CAAC,CAAC;IACxF,MAAM6oB,KAAK,GAAG9jB,SAAS,CAACyP,KAAK,CAACua,aAAa,CAAC/uB,CAAC,CAAC,CAAC;IAC/C,MAAMmU,IAAI,GAAG4xB,UAAU,CAAC/lC,CAAC,CAAC;IAC1B82D,iCAAiC,CAACjuC,KAAK,EAAE1U,IAAI,EAAE0iD,kBAAkB,CAAC;IAClE,MAAM7sB,SAAS,GAAG+sB,oBAAoB,CAACluC,KAAK,CAAC;IAC7C,IAAI1T,IAAI;IACR,IAAI60B,SAAS,KAAK,MAAM,EAAE;MACxB70B,IAAI,GAAG0hD,kBAAkB,CAAC/zD,CAAC;IAC7B,CAAC,MAAM,IAAIknC,SAAS,KAAK,QAAQ,EAAE;MACjC70B,IAAI,GAAG0hD,kBAAkB,CAAC/zD,CAAC,GAAIqR,IAAI,CAACvR,CAAC,GAAG,CAAE;IAC5C,CAAC,MAAM;MACLuS,IAAI,GAAG0hD,kBAAkB,CAAC/zD,CAAC,GAAGqR,IAAI,CAACvR,CAAC;IACtC;IACA,MAAMqS,KAAK,GAAGE,IAAI,GAAGhB,IAAI,CAACvR,CAAC;IAC3B4R,KAAK,CAACiiD,gBAAgB,CAACz2D,CAAC,CAAC,GAAG;MAC1B8C,CAAC,EAAE+zD,kBAAkB,CAAC/zD,CAAC;MACvBE,CAAC,EAAE6zD,kBAAkB,CAAC7zD,CAAC;MACvBgnC,SAAS;MACT70B,IAAI;MACJH,GAAG,EAAE6hD,kBAAkB,CAAC7zD,CAAC;MACzBiS,KAAK;MACLC,MAAM,EAAE2hD,kBAAkB,CAAC7zD,CAAC,GAAGmR,IAAI,CAACnT;IACtC,CAAC;EACH;AACF;AACA,SAAS+1D,oBAAoBA,CAACluC,KAAK,EAAE;EACnC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,GAAG,EAAE;IAChC,OAAO,QAAQ;EACjB,CAAC,MAAM,IAAIA,KAAK,GAAG,GAAG,EAAE;IACtB,OAAO,MAAM;EACf;EACA,OAAO,OAAO;AAChB;AACA,SAASiuC,iCAAiCA,CAACjuC,KAAK,EAAEyhC,QAAQ,EAAEx4B,QAAQ,EAAE;EACpE,IAAIjJ,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,GAAG,EAAE;IACjCiJ,QAAQ,CAAC9uB,CAAC,IAAKsnD,QAAQ,CAACtpD,CAAC,GAAG,CAAE;EAChC,CAAC,MAAM,IAAI6nB,KAAK,GAAG,GAAG,IAAIA,KAAK,GAAG,EAAE,EAAE;IACpCiJ,QAAQ,CAAC9uB,CAAC,IAAIsnD,QAAQ,CAACtpD,CAAC;EAC1B;AACF;AACA,SAASg2D,eAAeA,CAACxiD,KAAK,EAAEo+C,UAAU,EAAE;EAC1C,MAAM;IAACr5C,GAAG;IAAE9F,OAAO,EAAE;MAAC8b;IAAW;EAAC,CAAC,GAAG/a,KAAK;EAC3C,KAAK,IAAIxU,CAAC,GAAG4yD,UAAU,GAAG,CAAC,EAAE5yD,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxC,MAAM0pC,WAAW,GAAGna,WAAW,CAACoZ,UAAU,CAACn0B,KAAK,CAACiI,UAAU,CAACzc,CAAC,CAAC,CAAC;IAC/D,MAAMo2D,MAAM,GAAG3wD,MAAM,CAACikC,WAAW,CAAC/H,IAAI,CAAC;IACvC,MAAM;MAAC7+B,CAAC;MAAEE,CAAC;MAAEgnC,SAAS;MAAE70B,IAAI;MAAEH,GAAG;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGV,KAAK,CAACiiD,gBAAgB,CAACz2D,CAAC,CAAC;IAC7E,MAAM;MAACi3D;IAAa,CAAC,GAAGvtB,WAAW;IACnC,IAAI,CAACroC,aAAa,CAAC41D,aAAa,CAAC,EAAE;MACjC,MAAMngC,OAAO,GAAGrzB,SAAS,CAACimC,WAAW,CAACisB,eAAe,CAAC;MACtDp8C,GAAG,CAACwS,SAAS,GAAGkrC,aAAa;MAC7B19C,GAAG,CAACsxB,QAAQ,CAAC11B,IAAI,GAAG2hB,OAAO,CAAC3hB,IAAI,EAAEH,GAAG,GAAG8hB,OAAO,CAAC9hB,GAAG,EAAEC,KAAK,GAAGE,IAAI,GAAG2hB,OAAO,CAACxR,KAAK,EAAEpQ,MAAM,GAAGF,GAAG,GAAG8hB,OAAO,CAACzR,MAAM,CAAC;IACnH;IACA9f,UAAU,CACRgU,GAAG,EACH/E,KAAK,CAAC6hD,YAAY,CAACr2D,CAAC,CAAC,EACrB8C,CAAC,EACDE,CAAC,GAAIozD,MAAM,CAACv0B,UAAU,GAAG,CAAE,EAC3Bu0B,MAAM,EACN;MACEr2D,KAAK,EAAE2pC,WAAW,CAAC3pC,KAAK;MACxBiqC,SAAS,EAAEA,SAAS;MACpBG,YAAY,EAAE;IAChB,CACF,CAAC;EACH;AACF;AACA,SAAS+sB,cAAcA,CAAC1iD,KAAK,EAAEgT,MAAM,EAAE8H,QAAQ,EAAEsjC,UAAU,EAAE;EAC3D,MAAM;IAACr5C;EAAG,CAAC,GAAG/E,KAAK;EACnB,IAAI8a,QAAQ,EAAE;IACZ/V,GAAG,CAACyR,GAAG,CAACxW,KAAK,CAACoa,OAAO,EAAEpa,KAAK,CAACqa,OAAO,EAAErH,MAAM,EAAE,CAAC,EAAErlB,GAAG,CAAC;EACvD,CAAC,MAAM;IACL,IAAIwtB,aAAa,GAAGnb,KAAK,CAAC0hD,gBAAgB,CAAC,CAAC,EAAE1uC,MAAM,CAAC;IACrDjO,GAAG,CAACgyB,MAAM,CAAC5b,aAAa,CAAC7sB,CAAC,EAAE6sB,aAAa,CAAC3sB,CAAC,CAAC;IAC5C,KAAK,IAAIhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4yD,UAAU,EAAE5yD,CAAC,EAAE,EAAE;MACnC2vB,aAAa,GAAGnb,KAAK,CAAC0hD,gBAAgB,CAACl2D,CAAC,EAAEwnB,MAAM,CAAC;MACjDjO,GAAG,CAACiyB,MAAM,CAAC7b,aAAa,CAAC7sB,CAAC,EAAE6sB,aAAa,CAAC3sB,CAAC,CAAC;IAC9C;EACF;AACF;AACA,SAASm0D,cAAcA,CAAC3iD,KAAK,EAAE4iD,YAAY,EAAE5vC,MAAM,EAAEorC,UAAU,EAAE;EAC/D,MAAMr5C,GAAG,GAAG/E,KAAK,CAAC+E,GAAG;EACrB,MAAM+V,QAAQ,GAAG8nC,YAAY,CAAC9nC,QAAQ;EACtC,MAAM;IAACvvB,KAAK;IAAEosB;EAAS,CAAC,GAAGirC,YAAY;EACvC,IAAK,CAAC9nC,QAAQ,IAAI,CAACsjC,UAAU,IAAK,CAAC7yD,KAAK,IAAI,CAACosB,SAAS,IAAI3E,MAAM,GAAG,CAAC,EAAE;IACpE;EACF;EACAjO,GAAG,CAACqxB,IAAI,CAAC,CAAC;EACVrxB,GAAG,CAAC0S,WAAW,GAAGlsB,KAAK;EACvBwZ,GAAG,CAAC4S,SAAS,GAAGA,SAAS;EACzB5S,GAAG,CAAC6xB,WAAW,CAACgsB,YAAY,CAACr5B,UAAU,CAAC;EACxCxkB,GAAG,CAAC8xB,cAAc,GAAG+rB,YAAY,CAACp5B,gBAAgB;EAClDzkB,GAAG,CAAC+xB,SAAS,CAAC,CAAC;EACf4rB,cAAc,CAAC1iD,KAAK,EAAEgT,MAAM,EAAE8H,QAAQ,EAAEsjC,UAAU,CAAC;EACnDr5C,GAAG,CAAC6gC,SAAS,CAAC,CAAC;EACf7gC,GAAG,CAACkyB,MAAM,CAAC,CAAC;EACZlyB,GAAG,CAACuxB,OAAO,CAAC,CAAC;AACf;AACA,SAASusB,YAAYA,CAACC,KAAK,EAAE;EAC3B,OAAOz0D,QAAQ,CAACy0D,KAAK,CAAC,GAAGA,KAAK,GAAG,CAAC;AACpC;AACA,MAAMC,iBAAiB,SAASnD,eAAe,CAAC;EAC9C/oD,WAAWA,CAAC0E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAAC6e,OAAO,GAAGjjB,SAAS;IACxB,IAAI,CAACkjB,OAAO,GAAGljB,SAAS;IACxB,IAAI,CAACwqD,WAAW,GAAGxqD,SAAS;IAC5B,IAAI,CAAC0qD,YAAY,GAAG,EAAE;IACtB,IAAI,CAACI,gBAAgB,GAAG,EAAE;EAC5B;EACAzyB,aAAaA,CAAA,EAAG;IACd,MAAMp3B,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;IACtBrd,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsd,SAAS;IACxBtd,EAAE,CAAC01B,UAAU,GAAGozB,qBAAqB,CAAC9oD,EAAE,CAAC6G,OAAO,CAAC,GAAG,CAAC;IACrD7G,EAAE,CAACgiB,OAAO,GAAGpiB,IAAI,CAACgE,KAAK,CAAC5D,EAAE,CAAC0Y,KAAK,GAAG,CAAC,CAAC;IACrC1Y,EAAE,CAACiiB,OAAO,GAAGriB,IAAI,CAACgE,KAAK,CAAC,CAAC5D,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,IAAI,CAAC,CAAC;IACxD11B,EAAE,CAACupD,WAAW,GAAG3pD,IAAI,CAACC,GAAG,CAACG,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,EAAE11B,EAAE,CAAC0Y,KAAK,CAAC,GAAG,CAAC;EACpE;EACA6e,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEkC;IAAG,CAAC,GAAG/B,EAAE,CAACmR,SAAS,CAAC,KAAK,CAAC;IACtCnR,EAAE,CAACH,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,IAAI,CAACiZ,KAAK,CAACjZ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACrDG,EAAE,CAAC+B,GAAG,GAAG5N,cAAc,CAAC4N,GAAG,CAAC,IAAI,CAAC+W,KAAK,CAAC/W,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACrD/B,EAAE,CAAC0nD,sBAAsB,CAAC,CAAC;EAC7B;EACAO,gBAAgBA,CAAA,EAAG;IACjB,OAAOroD,IAAI,CAAC6zB,IAAI,CAAC,IAAI,CAAC81B,WAAW,GAAGT,qBAAqB,CAAC,IAAI,CAACjiD,OAAO,CAAC,CAAC;EAC1E;EACAiyB,kBAAkBA,CAAChjB,KAAK,EAAE;IACxB,MAAM9V,EAAE,GAAG,IAAI;IACfwnD,eAAe,CAACxyC,SAAS,CAAC8jB,kBAAkB,CAAC74B,IAAI,CAACD,EAAE,EAAE8V,KAAK,CAAC;IAC5D9V,EAAE,CAACypD,YAAY,GAAGzpD,EAAE,CAACyQ,SAAS,CAAC,CAAC,CAACuO,GAAG,CAAC,CAAC1X,KAAK,EAAEwB,KAAK,KAAK;MACrD,MAAM8I,KAAK,GAAG3Z,QAAQ,CAAC+H,EAAE,CAAC6G,OAAO,CAAC8b,WAAW,CAAC1qB,QAAQ,EAAE,CAACqP,KAAK,EAAEwB,KAAK,CAAC,EAAE9I,EAAE,CAAC;MAC3E,OAAO4R,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE;IAC1C,CAAC,CAAC;EACJ;EACAumB,GAAGA,CAAA,EAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAI;IACf,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,IAAIiB,IAAI,CAAC2a,OAAO,IAAI3a,IAAI,CAAC6a,WAAW,CAACF,OAAO,EAAE;MAC5CymC,kBAAkB,CAAClpD,EAAE,CAAC;IACxB,CAAC,MAAM;MACLA,EAAE,CAAC4qD,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B;EACF;EACAhB,cAAcA,CAACiB,qBAAqB,EAAE1B,cAAc,EAAEC,cAAc,EAAE;IACpE,MAAMppD,EAAE,GAAG,IAAI;IACf,IAAI8qD,mBAAmB,GAAG3B,cAAc,CAACr1D,CAAC,GAAG8L,IAAI,CAACic,GAAG,CAACutC,cAAc,CAACt1D,CAAC,CAAC;IACvE,IAAIi3D,oBAAoB,GAAGnrD,IAAI,CAACmC,GAAG,CAAConD,cAAc,CAACv2D,CAAC,GAAGoN,EAAE,CAAC0Y,KAAK,EAAE,CAAC,CAAC,GAAG9Y,IAAI,CAACic,GAAG,CAACutC,cAAc,CAACx2D,CAAC,CAAC;IAChG,IAAIo4D,kBAAkB,GAAG,CAAC7B,cAAc,CAACn0D,CAAC,GAAG4K,IAAI,CAAC+b,GAAG,CAACytC,cAAc,CAACp0D,CAAC,CAAC;IACvE,IAAIi2D,qBAAqB,GAAG,CAACrrD,IAAI,CAACmC,GAAG,CAAConD,cAAc,CAAC71D,CAAC,IAAI0M,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG91B,IAAI,CAAC+b,GAAG,CAACytC,cAAc,CAAC91D,CAAC,CAAC;IACrHw3D,mBAAmB,GAAGL,YAAY,CAACK,mBAAmB,CAAC;IACvDC,oBAAoB,GAAGN,YAAY,CAACM,oBAAoB,CAAC;IACzDC,kBAAkB,GAAGP,YAAY,CAACO,kBAAkB,CAAC;IACrDC,qBAAqB,GAAGR,YAAY,CAACQ,qBAAqB,CAAC;IAC3DjrD,EAAE,CAACupD,WAAW,GAAG3pD,IAAI,CAACmC,GAAG,CAAC8oD,qBAAqB,GAAG,CAAC,EAAEjrD,IAAI,CAACC,GAAG,CAC3DD,IAAI,CAACgE,KAAK,CAACinD,qBAAqB,GAAG,CAACC,mBAAmB,GAAGC,oBAAoB,IAAI,CAAC,CAAC,EACpFnrD,IAAI,CAACgE,KAAK,CAACinD,qBAAqB,GAAG,CAACG,kBAAkB,GAAGC,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC;IACxFjrD,EAAE,CAAC4qD,cAAc,CAACE,mBAAmB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,qBAAqB,CAAC;EACzG;EACAL,cAAcA,CAACM,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAE;IACvE,MAAMrrD,EAAE,GAAG,IAAI;IACf,MAAMsrD,QAAQ,GAAGtrD,EAAE,CAAC0Y,KAAK,GAAGyyC,aAAa,GAAGnrD,EAAE,CAACupD,WAAW;IAC1D,MAAMgC,OAAO,GAAGL,YAAY,GAAGlrD,EAAE,CAACupD,WAAW;IAC7C,MAAMiC,MAAM,GAAGJ,WAAW,GAAGprD,EAAE,CAACupD,WAAW;IAC3C,MAAMkC,SAAS,GAAIzrD,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,GAAI21B,cAAc,GAAGrrD,EAAE,CAACupD,WAAW;IAC/EvpD,EAAE,CAACgiB,OAAO,GAAGpiB,IAAI,CAACgE,KAAK,CAAE,CAAC2nD,OAAO,GAAGD,QAAQ,IAAI,CAAC,GAAItrD,EAAE,CAACuI,IAAI,CAAC;IAC7DvI,EAAE,CAACiiB,OAAO,GAAGriB,IAAI,CAACgE,KAAK,CAAE,CAAC4nD,MAAM,GAAGC,SAAS,IAAI,CAAC,GAAIzrD,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAAC01B,UAAU,CAAC;EAC9E;EACAvT,aAAaA,CAACrZ,KAAK,EAAE;IACnB,MAAM4iD,eAAe,GAAGn2D,GAAG,GAAG,IAAI,CAACkb,SAAS,CAAC,CAAC,CAAChQ,MAAM;IACrD,MAAM+a,UAAU,GAAG,IAAI,CAAC3U,OAAO,CAAC2U,UAAU,IAAI,CAAC;IAC/C,OAAO/e,eAAe,CAACqM,KAAK,GAAG4iD,eAAe,GAAGz2D,SAAS,CAACumB,UAAU,CAAC,CAAC;EACzE;EACA+G,6BAA6BA,CAACjb,KAAK,EAAE;IACnC,MAAMtH,EAAE,GAAG,IAAI;IACf,IAAIvL,aAAa,CAAC6S,KAAK,CAAC,EAAE;MACxB,OAAO4J,GAAG;IACZ;IACA,MAAMy6C,aAAa,GAAG3rD,EAAE,CAACupD,WAAW,IAAIvpD,EAAE,CAAC+B,GAAG,GAAG/B,EAAE,CAACH,GAAG,CAAC;IACxD,IAAIG,EAAE,CAAC6G,OAAO,CAACkB,OAAO,EAAE;MACtB,OAAO,CAAC/H,EAAE,CAAC+B,GAAG,GAAGuF,KAAK,IAAIqkD,aAAa;IACzC;IACA,OAAO,CAACrkD,KAAK,GAAGtH,EAAE,CAACH,GAAG,IAAI8rD,aAAa;EACzC;EACAC,6BAA6BA,CAACvlC,QAAQ,EAAE;IACtC,IAAI5xB,aAAa,CAAC4xB,QAAQ,CAAC,EAAE;MAC3B,OAAOnV,GAAG;IACZ;IACA,MAAMlR,EAAE,GAAG,IAAI;IACf,MAAM6rD,cAAc,GAAGxlC,QAAQ,IAAIrmB,EAAE,CAACupD,WAAW,IAAIvpD,EAAE,CAAC+B,GAAG,GAAG/B,EAAE,CAACH,GAAG,CAAC,CAAC;IACtE,OAAOG,EAAE,CAAC6G,OAAO,CAACkB,OAAO,GAAG/H,EAAE,CAAC+B,GAAG,GAAG8pD,cAAc,GAAG7rD,EAAE,CAACH,GAAG,GAAGgsD,cAAc;EAC/E;EACAvC,gBAAgBA,CAACxgD,KAAK,EAAEgjD,kBAAkB,EAAE;IAC1C,MAAM9rD,EAAE,GAAG,IAAI;IACf,MAAMic,KAAK,GAAGjc,EAAE,CAACmiB,aAAa,CAACrZ,KAAK,CAAC,GAAGjT,OAAO;IAC/C,OAAO;MACLK,CAAC,EAAE0J,IAAI,CAAC+b,GAAG,CAACM,KAAK,CAAC,GAAG6vC,kBAAkB,GAAG9rD,EAAE,CAACgiB,OAAO;MACpD5rB,CAAC,EAAEwJ,IAAI,CAACic,GAAG,CAACI,KAAK,CAAC,GAAG6vC,kBAAkB,GAAG9rD,EAAE,CAACiiB,OAAO;MACpDhG;IACF,CAAC;EACH;EACA+G,wBAAwBA,CAACla,KAAK,EAAExB,KAAK,EAAE;IACrC,OAAO,IAAI,CAACgiD,gBAAgB,CAACxgD,KAAK,EAAE,IAAI,CAACyZ,6BAA6B,CAACjb,KAAK,CAAC,CAAC;EAChF;EACAykD,eAAeA,CAACjjD,KAAK,EAAE;IACrB,OAAO,IAAI,CAACka,wBAAwB,CAACla,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC0yB,YAAY,CAAC,CAAC,CAAC;EACvE;EACAwwB,qBAAqBA,CAACljD,KAAK,EAAE;IAC3B,MAAM;MAACP,IAAI;MAAEH,GAAG;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACuhD,gBAAgB,CAAC/gD,KAAK,CAAC;IAC/D,OAAO;MACLP,IAAI;MACJH,GAAG;MACHC,KAAK;MACLC;IACF,CAAC;EACH;EACAy1B,cAAcA,CAAA,EAAG;IACf,MAAM/9B,EAAE,GAAG,IAAI;IACf,MAAM;MAACof,eAAe;MAAEhF,IAAI,EAAE;QAACsI;MAAQ;IAAC,CAAC,GAAG1iB,EAAE,CAAC6G,OAAO;IACtD,IAAIuY,eAAe,EAAE;MACnB,MAAMzS,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;MAClBA,GAAG,CAACqxB,IAAI,CAAC,CAAC;MACVrxB,GAAG,CAAC+xB,SAAS,CAAC,CAAC;MACf4rB,cAAc,CAACtqD,EAAE,EAAEA,EAAE,CAACuiB,6BAA6B,CAACviB,EAAE,CAACynD,SAAS,CAAC,EAAE/kC,QAAQ,EAAE1iB,EAAE,CAACyQ,SAAS,CAAC,CAAC,CAAChQ,MAAM,CAAC;MACnGkM,GAAG,CAAC6gC,SAAS,CAAC,CAAC;MACf7gC,GAAG,CAACwS,SAAS,GAAGC,eAAe;MAC/BzS,GAAG,CAACsW,IAAI,CAAC,CAAC;MACVtW,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACf;EACF;EACAE,QAAQA,CAAA,EAAG;IACT,MAAMp+B,EAAE,GAAG,IAAI;IACf,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;IAClB,MAAM7E,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAM;MAAC2b,UAAU;MAAEpI;IAAI,CAAC,GAAGtS,IAAI;IAC/B,MAAMk+C,UAAU,GAAGhmD,EAAE,CAACyQ,SAAS,CAAC,CAAC,CAAChQ,MAAM;IACxC,IAAIrN,CAAC,EAAE+mB,MAAM,EAAE+K,QAAQ;IACvB,IAAIpd,IAAI,CAAC6a,WAAW,CAACF,OAAO,EAAE;MAC5B2nC,eAAe,CAACpqD,EAAE,EAAEgmD,UAAU,CAAC;IACjC;IACA,IAAI5rC,IAAI,CAACqI,OAAO,EAAE;MAChBziB,EAAE,CAAC8V,KAAK,CAACrW,OAAO,CAAC,CAACqB,IAAI,EAAEgI,KAAK,KAAK;QAChC,IAAIA,KAAK,KAAK,CAAC,EAAE;UACfqR,MAAM,GAAGna,EAAE,CAACuiB,6BAA6B,CAACzhB,IAAI,CAACwG,KAAK,CAAC;UACrD,MAAMw1B,WAAW,GAAG1iB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC/G,KAAK,GAAG,CAAC,CAAC,CAAC;UAC7DyhD,cAAc,CAACvqD,EAAE,EAAE88B,WAAW,EAAE3iB,MAAM,EAAE6rC,UAAU,CAAC;QACrD;MACF,CAAC,CAAC;IACJ;IACA,IAAIxjC,UAAU,CAACC,OAAO,EAAE;MACtB9V,GAAG,CAACqxB,IAAI,CAAC,CAAC;MACV,KAAK5qC,CAAC,GAAG4M,EAAE,CAACyQ,SAAS,CAAC,CAAC,CAAChQ,MAAM,GAAG,CAAC,EAAErN,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC/C,MAAM0pC,WAAW,GAAGta,UAAU,CAACuZ,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAACzc,CAAC,CAAC,CAAC;QAC3D,MAAM;UAACD,KAAK;UAAEosB;QAAS,CAAC,GAAGud,WAAW;QACtC,IAAI,CAACvd,SAAS,IAAI,CAACpsB,KAAK,EAAE;UACxB;QACF;QACAwZ,GAAG,CAAC4S,SAAS,GAAGA,SAAS;QACzB5S,GAAG,CAAC0S,WAAW,GAAGlsB,KAAK;QACvBwZ,GAAG,CAAC6xB,WAAW,CAAC1B,WAAW,CAAC3L,UAAU,CAAC;QACvCxkB,GAAG,CAAC8xB,cAAc,GAAG3B,WAAW,CAAC1L,gBAAgB;QACjDjX,MAAM,GAAGna,EAAE,CAACuiB,6BAA6B,CAACza,IAAI,CAACgO,KAAK,CAAC/N,OAAO,GAAG/H,EAAE,CAACH,GAAG,GAAGG,EAAE,CAAC+B,GAAG,CAAC;QAC/EmjB,QAAQ,GAAGllB,EAAE,CAACspD,gBAAgB,CAACl2D,CAAC,EAAE+mB,MAAM,CAAC;QACzCxN,GAAG,CAAC+xB,SAAS,CAAC,CAAC;QACf/xB,GAAG,CAACgyB,MAAM,CAAC3+B,EAAE,CAACgiB,OAAO,EAAEhiB,EAAE,CAACiiB,OAAO,CAAC;QAClCtV,GAAG,CAACiyB,MAAM,CAAC1Z,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,CAAC;QAClCuW,GAAG,CAACkyB,MAAM,CAAC,CAAC;MACd;MACAlyB,GAAG,CAACuxB,OAAO,CAAC,CAAC;IACf;EACF;EACAc,UAAUA,CAAA,EAAG;IACX,MAAMh/B,EAAE,GAAG,IAAI;IACf,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAG;IAClB,MAAM7E,IAAI,GAAG9H,EAAE,CAAC6G,OAAO;IACvB,MAAMsrB,QAAQ,GAAGrqB,IAAI,CAACgO,KAAK;IAC3B,IAAI,CAACqc,QAAQ,CAAC1P,OAAO,EAAE;MACrB;IACF;IACA,MAAMjH,UAAU,GAAGxb,EAAE,CAACmiB,aAAa,CAAC,CAAC,CAAC;IACtC,IAAIhI,MAAM,EAAEzB,KAAK;IACjB/L,GAAG,CAACqxB,IAAI,CAAC,CAAC;IACVrxB,GAAG,CAAC2hC,SAAS,CAACtuC,EAAE,CAACgiB,OAAO,EAAEhiB,EAAE,CAACiiB,OAAO,CAAC;IACrCtV,GAAG,CAACs/C,MAAM,CAACzwC,UAAU,CAAC;IACtB7O,GAAG,CAACywB,SAAS,GAAG,QAAQ;IACxBzwB,GAAG,CAAC4wB,YAAY,GAAG,QAAQ;IAC3Bv9B,EAAE,CAAC8V,KAAK,CAACrW,OAAO,CAAC,CAACqB,IAAI,EAAEgI,KAAK,KAAK;MAChC,IAAIA,KAAK,KAAK,CAAC,IAAI,CAAChB,IAAI,CAACC,OAAO,EAAE;QAChC;MACF;MACA,MAAM+0B,WAAW,GAAG3K,QAAQ,CAAC4J,UAAU,CAAC/7B,EAAE,CAAC6P,UAAU,CAAC/G,KAAK,CAAC,CAAC;MAC7D,MAAM+xB,QAAQ,GAAGhiC,MAAM,CAACikC,WAAW,CAAC/H,IAAI,CAAC;MACzC5a,MAAM,GAAGna,EAAE,CAACuiB,6BAA6B,CAACviB,EAAE,CAAC8V,KAAK,CAAChN,KAAK,CAAC,CAACxB,KAAK,CAAC;MAChE,IAAIw1B,WAAW,CAACovB,iBAAiB,EAAE;QACjCxzC,KAAK,GAAG/L,GAAG,CAACiuC,WAAW,CAAC95C,IAAI,CAAC8Q,KAAK,CAAC,CAAC8G,KAAK;QACzC/L,GAAG,CAACwS,SAAS,GAAG2d,WAAW,CAACutB,aAAa;QACzC,MAAMngC,OAAO,GAAGrzB,SAAS,CAACimC,WAAW,CAACisB,eAAe,CAAC;QACtDp8C,GAAG,CAACsxB,QAAQ,CACV,CAACvlB,KAAK,GAAG,CAAC,GAAGwR,OAAO,CAAC3hB,IAAI,EACzB,CAAC4R,MAAM,GAAG0gB,QAAQ,CAACtzB,IAAI,GAAG,CAAC,GAAG2iB,OAAO,CAAC9hB,GAAG,EACzCsQ,KAAK,GAAGwR,OAAO,CAACxR,KAAK,EACrBmiB,QAAQ,CAACtzB,IAAI,GAAG2iB,OAAO,CAACzR,MAC1B,CAAC;MACH;MACA9f,UAAU,CAACgU,GAAG,EAAE7L,IAAI,CAAC8Q,KAAK,EAAE,CAAC,EAAE,CAACuI,MAAM,EAAE0gB,QAAQ,EAAE;QAChD1nC,KAAK,EAAE2pC,WAAW,CAAC3pC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;IACFwZ,GAAG,CAACuxB,OAAO,CAAC,CAAC;EACf;EACAe,SAASA,CAAA,EAAG,CAAC;AACf;AACA0rB,iBAAiB,CAAC3gD,EAAE,GAAG,cAAc;AACrC2gD,iBAAiB,CAACl3D,QAAQ,GAAG;EAC3BgvB,OAAO,EAAE,IAAI;EACb0pC,OAAO,EAAE,IAAI;EACbjnC,QAAQ,EAAE,WAAW;EACrB1C,UAAU,EAAE;IACVC,OAAO,EAAE,IAAI;IACblD,SAAS,EAAE,CAAC;IACZ4R,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE;EACpB,CAAC;EACDhX,IAAI,EAAE;IACJsI,QAAQ,EAAE;EACZ,CAAC;EACDlH,UAAU,EAAE,CAAC;EACb1F,KAAK,EAAE;IACLo2C,iBAAiB,EAAE,IAAI;IACvB7B,aAAa,EAAE,wBAAwB;IACvCtB,eAAe,EAAE,CAAC;IAClB9wD,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAACC;EAC7B,CAAC;EACDpN,WAAW,EAAE;IACX0nC,aAAa,EAAEtrD,SAAS;IACxBgqD,eAAe,EAAE,CAAC;IAClBtmC,OAAO,EAAE,IAAI;IACbsS,IAAI,EAAE;MACJxtB,IAAI,EAAE;IACR,CAAC;IACDtP,QAAQA,CAAC2Z,KAAK,EAAE;MACd,OAAOA,KAAK;IACd,CAAC;IACDsY,OAAO,EAAE;EACX;AACF,CAAC;AACDygC,iBAAiB,CAAC96B,aAAa,GAAG;EAChC,kBAAkB,EAAE,aAAa;EACjC,mBAAmB,EAAE,OAAO;EAC5B,aAAa,EAAE;AACjB,CAAC;AACD86B,iBAAiB,CAAClxD,WAAW,GAAG;EAC9B+oB,UAAU,EAAE;IACVjd,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAM6mD,SAAS,GAAG;EAChBC,WAAW,EAAE;IAACC,MAAM,EAAE,IAAI;IAAE/kD,IAAI,EAAE,CAAC;IAAEglD,KAAK,EAAE;EAAI,CAAC;EACjDC,MAAM,EAAE;IAACF,MAAM,EAAE,IAAI;IAAE/kD,IAAI,EAAE,IAAI;IAAEglD,KAAK,EAAE;EAAE,CAAC;EAC7CE,MAAM,EAAE;IAACH,MAAM,EAAE,IAAI;IAAE/kD,IAAI,EAAE,KAAK;IAAEglD,KAAK,EAAE;EAAE,CAAC;EAC9CG,IAAI,EAAE;IAACJ,MAAM,EAAE,IAAI;IAAE/kD,IAAI,EAAE,OAAO;IAAEglD,KAAK,EAAE;EAAE,CAAC;EAC9CI,GAAG,EAAE;IAACL,MAAM,EAAE,IAAI;IAAE/kD,IAAI,EAAE,QAAQ;IAAEglD,KAAK,EAAE;EAAE,CAAC;EAC9CK,IAAI,EAAE;IAACN,MAAM,EAAE,KAAK;IAAE/kD,IAAI,EAAE,SAAS;IAAEglD,KAAK,EAAE;EAAC,CAAC;EAChDM,KAAK,EAAE;IAACP,MAAM,EAAE,IAAI;IAAE/kD,IAAI,EAAE,OAAO;IAAEglD,KAAK,EAAE;EAAE,CAAC;EAC/CO,OAAO,EAAE;IAACR,MAAM,EAAE,KAAK;IAAE/kD,IAAI,EAAE,OAAO;IAAEglD,KAAK,EAAE;EAAC,CAAC;EACjDQ,IAAI,EAAE;IAACT,MAAM,EAAE,IAAI;IAAE/kD,IAAI,EAAE;EAAQ;AACrC,CAAC;AACD,MAAMylD,KAAK,GAAI7nD,MAAM,CAACC,IAAI,CAACgnD,SAAS,CAAE;AACtC,SAASa,MAAMA,CAACn6D,CAAC,EAAEQ,CAAC,EAAE;EACpB,OAAOR,CAAC,GAAGQ,CAAC;AACd;AACA,SAASyc,KAAKA,CAACnI,KAAK,EAAEslD,KAAK,EAAE;EAC3B,IAAIz4D,aAAa,CAACy4D,KAAK,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,MAAMC,OAAO,GAAGvlD,KAAK,CAACwlD,QAAQ;EAC9B,MAAMvmD,OAAO,GAAGe,KAAK,CAACf,OAAO,CAACwmD,IAAI;EAClC,MAAM;IAACC,MAAM;IAAEt6B,KAAK;IAAEu6B;EAAU,CAAC,GAAG1mD,OAAO;EAC3C,IAAIS,KAAK,GAAG4lD,KAAK;EACjB,IAAI,OAAOI,MAAM,KAAK,UAAU,EAAE;IAChChmD,KAAK,GAAGgmD,MAAM,CAAChmD,KAAK,CAAC;EACvB;EACA,IAAI,CAACnT,cAAc,CAACmT,KAAK,CAAC,EAAE;IAC1BA,KAAK,GAAG,OAAOgmD,MAAM,KAAK,QAAQ,GAC9BH,OAAO,CAACp9C,KAAK,CAACzI,KAAK,EAAEgmD,MAAM,CAAC,GAC5BH,OAAO,CAACp9C,KAAK,CAACzI,KAAK,CAAC;EAC1B;EACA,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAI0rB,KAAK,EAAE;IACT1rB,KAAK,GAAG0rB,KAAK,KAAK,MAAM,KAAK/8B,QAAQ,CAACs3D,UAAU,CAAC,IAAIA,UAAU,KAAK,IAAI,CAAC,GACrEJ,OAAO,CAACrpC,OAAO,CAACxc,KAAK,EAAE,SAAS,EAAEimD,UAAU,CAAC,GAC7CJ,OAAO,CAACrpC,OAAO,CAACxc,KAAK,EAAE0rB,KAAK,CAAC;EACnC;EACA,OAAO,CAAC1rB,KAAK;AACf;AACA,SAASkmD,yBAAyBA,CAACC,OAAO,EAAE5tD,GAAG,EAAEkC,GAAG,EAAE2rD,QAAQ,EAAE;EAC9D,MAAM7kD,IAAI,GAAGmkD,KAAK,CAACvsD,MAAM;EACzB,KAAK,IAAIrN,CAAC,GAAG45D,KAAK,CAACj0C,OAAO,CAAC00C,OAAO,CAAC,EAAEr6D,CAAC,GAAGyV,IAAI,GAAG,CAAC,EAAE,EAAEzV,CAAC,EAAE;IACtD,MAAMu6D,QAAQ,GAAGvB,SAAS,CAACY,KAAK,CAAC55D,CAAC,CAAC,CAAC;IACpC,MAAMuP,MAAM,GAAGgrD,QAAQ,CAACpB,KAAK,GAAGoB,QAAQ,CAACpB,KAAK,GAAGniD,MAAM,CAACwjD,gBAAgB;IACxE,IAAID,QAAQ,CAACrB,MAAM,IAAI1sD,IAAI,CAAC6zB,IAAI,CAAC,CAAC1xB,GAAG,GAAGlC,GAAG,KAAK8C,MAAM,GAAGgrD,QAAQ,CAACpmD,IAAI,CAAC,CAAC,IAAImmD,QAAQ,EAAE;MACpF,OAAOV,KAAK,CAAC55D,CAAC,CAAC;IACjB;EACF;EACA,OAAO45D,KAAK,CAACnkD,IAAI,GAAG,CAAC,CAAC;AACxB;AACA,SAASglD,0BAA0BA,CAACjmD,KAAK,EAAEoxB,QAAQ,EAAEy0B,OAAO,EAAE5tD,GAAG,EAAEkC,GAAG,EAAE;EACtE,KAAK,IAAI3O,CAAC,GAAG45D,KAAK,CAACvsD,MAAM,GAAG,CAAC,EAAErN,CAAC,IAAI45D,KAAK,CAACj0C,OAAO,CAAC00C,OAAO,CAAC,EAAEr6D,CAAC,EAAE,EAAE;IAC/D,MAAMwwB,IAAI,GAAGopC,KAAK,CAAC55D,CAAC,CAAC;IACrB,IAAIg5D,SAAS,CAACxoC,IAAI,CAAC,CAAC0oC,MAAM,IAAI1kD,KAAK,CAACwlD,QAAQ,CAACvpC,IAAI,CAAC9hB,GAAG,EAAElC,GAAG,EAAE+jB,IAAI,CAAC,IAAIoV,QAAQ,GAAG,CAAC,EAAE;MACjF,OAAOpV,IAAI;IACb;EACF;EACA,OAAOopC,KAAK,CAACS,OAAO,GAAGT,KAAK,CAACj0C,OAAO,CAAC00C,OAAO,CAAC,GAAG,CAAC,CAAC;AACpD;AACA,SAASK,kBAAkBA,CAAClqC,IAAI,EAAE;EAChC,KAAK,IAAIxwB,CAAC,GAAG45D,KAAK,CAACj0C,OAAO,CAAC6K,IAAI,CAAC,GAAG,CAAC,EAAE/a,IAAI,GAAGmkD,KAAK,CAACvsD,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACxE,IAAIg5D,SAAS,CAACY,KAAK,CAAC55D,CAAC,CAAC,CAAC,CAACk5D,MAAM,EAAE;MAC9B,OAAOU,KAAK,CAAC55D,CAAC,CAAC;IACjB;EACF;AACF;AACA,SAAS26D,OAAOA,CAACj4C,KAAK,EAAEu3C,IAAI,EAAEW,UAAU,EAAE;EACxC,IAAI,CAACA,UAAU,EAAE;IACfl4C,KAAK,CAACu3C,IAAI,CAAC,GAAG,IAAI;EACpB,CAAC,MAAM,IAAIW,UAAU,CAACvtD,MAAM,EAAE;IAC5B,MAAM;MAACygB,EAAE;MAAEC;IAAE,CAAC,GAAG5iB,OAAO,CAACyvD,UAAU,EAAEX,IAAI,CAAC;IAC1C,MAAM3pC,SAAS,GAAGsqC,UAAU,CAAC9sC,EAAE,CAAC,IAAImsC,IAAI,GAAGW,UAAU,CAAC9sC,EAAE,CAAC,GAAG8sC,UAAU,CAAC7sC,EAAE,CAAC;IAC1ErL,KAAK,CAAC4N,SAAS,CAAC,GAAG,IAAI;EACzB;AACF;AACA,SAASuqC,aAAaA,CAACrmD,KAAK,EAAEkO,KAAK,EAAEkJ,GAAG,EAAEkvC,SAAS,EAAE;EACnD,MAAMf,OAAO,GAAGvlD,KAAK,CAACwlD,QAAQ;EAC9B,MAAMz6B,KAAK,GAAG,CAACw6B,OAAO,CAACrpC,OAAO,CAAChO,KAAK,CAAC,CAAC,CAAC,CAACxO,KAAK,EAAE4mD,SAAS,CAAC;EACzD,MAAMt1C,IAAI,GAAG9C,KAAK,CAACA,KAAK,CAACrV,MAAM,GAAG,CAAC,CAAC,CAAC6G,KAAK;EAC1C,IAAIwqB,KAAK,EAAEhpB,KAAK;EAChB,KAAKgpB,KAAK,GAAGa,KAAK,EAAEb,KAAK,IAAIlZ,IAAI,EAAEkZ,KAAK,GAAG,CAACq7B,OAAO,CAACzrD,GAAG,CAACowB,KAAK,EAAE,CAAC,EAAEo8B,SAAS,CAAC,EAAE;IAC5EplD,KAAK,GAAGkW,GAAG,CAAC8S,KAAK,CAAC;IAClB,IAAIhpB,KAAK,IAAI,CAAC,EAAE;MACdgN,KAAK,CAAChN,KAAK,CAAC,CAACgpB,KAAK,GAAG,IAAI;IAC3B;EACF;EACA,OAAOhc,KAAK;AACd;AACA,SAASq4C,mBAAmBA,CAACvmD,KAAK,EAAEjB,MAAM,EAAEunD,SAAS,EAAE;EACrD,MAAMp4C,KAAK,GAAG,EAAE;EAChB,MAAMkJ,GAAG,GAAG,CAAC,CAAC;EACd,MAAMnW,IAAI,GAAGlC,MAAM,CAAClG,MAAM;EAC1B,IAAIrN,CAAC,EAAEkU,KAAK;EACZ,KAAKlU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;IACzBkU,KAAK,GAAGX,MAAM,CAACvT,CAAC,CAAC;IACjB4rB,GAAG,CAAC1X,KAAK,CAAC,GAAGlU,CAAC;IACd0iB,KAAK,CAACrU,IAAI,CAAC;MACT6F,KAAK;MACLwqB,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EACA,OAAQjpB,IAAI,KAAK,CAAC,IAAI,CAACqlD,SAAS,GAAIp4C,KAAK,GAAGm4C,aAAa,CAACrmD,KAAK,EAAEkO,KAAK,EAAEkJ,GAAG,EAAEkvC,SAAS,CAAC;AACzF;AACA,MAAME,SAAS,SAAS54B,KAAK,CAAC;EAC5B/2B,WAAWA,CAAC2I,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC8N,MAAM,GAAG;MACZ3L,IAAI,EAAE,EAAE;MACRiH,MAAM,EAAE,EAAE;MACV9I,GAAG,EAAE;IACP,CAAC;IACD,IAAI,CAAC2mD,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,UAAU,GAAGvvD,SAAS;IAC3B,IAAI,CAACwvD,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EACA93B,IAAIA,CAACkT,SAAS,EAAE9hC,IAAI,EAAE;IACpB,MAAMulD,IAAI,GAAGzjB,SAAS,CAACyjB,IAAI,KAAKzjB,SAAS,CAACyjB,IAAI,GAAG,CAAC,CAAC,CAAC;IACpD,MAAMF,OAAO,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAIjpC,QAAQ,CAACC,KAAK,CAACwlB,SAAS,CAACzlB,QAAQ,CAAChlB,IAAI,CAAC;IAC3EhF,OAAO,CAACkzD,IAAI,CAACoB,cAAc,EAAEtB,OAAO,CAAC3pC,OAAO,CAAC,CAAC,CAAC;IAC/C,KAAK,CAACkT,IAAI,CAACkT,SAAS,CAAC;IACrB,IAAI,CAAC4kB,WAAW,GAAG1mD,IAAI,CAAC4mD,UAAU;EACpC;EACA3+C,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,IAAIoD,GAAG,KAAKnN,SAAS,EAAE;MACrB,OAAO,IAAI;IACb;IACA,OAAOgR,KAAK,CAAC,IAAI,EAAE7D,GAAG,CAAC;EACzB;EACAwe,YAAYA,CAAA,EAAG;IACb,KAAK,CAACA,YAAY,CAAC,CAAC;IACpB,IAAI,CAACxV,MAAM,GAAG;MACZ3L,IAAI,EAAE,EAAE;MACRiH,MAAM,EAAE,EAAE;MACV9I,GAAG,EAAE;IACP,CAAC;EACH;EACA6vB,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAMsmD,OAAO,GAAGntD,EAAE,CAACotD,QAAQ;IAC3B,MAAMxpC,IAAI,GAAG/c,OAAO,CAACwmD,IAAI,CAACzpC,IAAI,IAAI,KAAK;IACvC,IAAI;MAAC/jB,GAAG;MAAEkC,GAAG;MAAEmI,UAAU;MAAEC;IAAU,CAAC,GAAGnK,EAAE,CAACiK,aAAa,CAAC,CAAC;IAC3D,SAAS0kD,YAAYA,CAACh+B,MAAM,EAAE;MAC5B,IAAI,CAACzmB,UAAU,IAAI,CAAC4O,KAAK,CAAC6X,MAAM,CAAC9wB,GAAG,CAAC,EAAE;QACrCA,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAE8wB,MAAM,CAAC9wB,GAAG,CAAC;MACjC;MACA,IAAI,CAACsK,UAAU,IAAI,CAAC2O,KAAK,CAAC6X,MAAM,CAAC5uB,GAAG,CAAC,EAAE;QACrCA,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAACA,GAAG,EAAE4uB,MAAM,CAAC5uB,GAAG,CAAC;MACjC;IACF;IACA,IAAI,CAACmI,UAAU,IAAI,CAACC,UAAU,EAAE;MAC9BwkD,YAAY,CAAC3uD,EAAE,CAAC4uD,eAAe,CAAC,CAAC,CAAC;MAClC,IAAI/nD,OAAO,CAAC8pB,MAAM,KAAK,OAAO,IAAI9pB,OAAO,CAACiP,KAAK,CAACmiB,MAAM,KAAK,QAAQ,EAAE;QACnE02B,YAAY,CAAC3uD,EAAE,CAACmR,SAAS,CAAC,KAAK,CAAC,CAAC;MACnC;IACF;IACAtR,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,IAAI,CAACiZ,KAAK,CAACjZ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACstD,OAAO,CAACrpC,OAAO,CAAC1jB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEujB,IAAI,CAAC;IACnF7hB,GAAG,GAAG5N,cAAc,CAAC4N,GAAG,CAAC,IAAI,CAAC+W,KAAK,CAAC/W,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACorD,OAAO,CAACnpC,KAAK,CAAC5jB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEujB,IAAI,CAAC,GAAG,CAAC;IACrF5jB,EAAE,CAACH,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEkC,GAAG,GAAG,CAAC,CAAC;IAC/B/B,EAAE,CAAC+B,GAAG,GAAGnC,IAAI,CAACmC,GAAG,CAAClC,GAAG,GAAG,CAAC,EAAEkC,GAAG,CAAC;EACjC;EACA6sD,eAAeA,CAAA,EAAG;IAChB,MAAMt6C,GAAG,GAAG,IAAI,CAACu6C,kBAAkB,CAAC,CAAC;IACrC,IAAIhvD,GAAG,GAAGuK,MAAM,CAACE,iBAAiB;IAClC,IAAIvI,GAAG,GAAGqI,MAAM,CAACC,iBAAiB;IAClC,IAAIiK,GAAG,CAAC7T,MAAM,EAAE;MACdZ,GAAG,GAAGyU,GAAG,CAAC,CAAC,CAAC;MACZvS,GAAG,GAAGuS,GAAG,CAACA,GAAG,CAAC7T,MAAM,GAAG,CAAC,CAAC;IAC3B;IACA,OAAO;MAACZ,GAAG;MAAEkC;IAAG,CAAC;EACnB;EACA21B,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAMioD,QAAQ,GAAGjoD,OAAO,CAACwmD,IAAI;IAC7B,MAAMl7B,QAAQ,GAAGtrB,OAAO,CAACiP,KAAK;IAC9B,MAAMk4C,UAAU,GAAG77B,QAAQ,CAAC8F,MAAM,KAAK,QAAQ,GAAGj4B,EAAE,CAAC6uD,kBAAkB,CAAC,CAAC,GAAG7uD,EAAE,CAAC+uD,SAAS,CAAC,CAAC;IAC1F,IAAIloD,OAAO,CAAC8pB,MAAM,KAAK,OAAO,IAAIq9B,UAAU,CAACvtD,MAAM,EAAE;MACnDT,EAAE,CAACH,GAAG,GAAGG,EAAE,CAACo2B,QAAQ,IAAI43B,UAAU,CAAC,CAAC,CAAC;MACrChuD,EAAE,CAAC+B,GAAG,GAAG/B,EAAE,CAACm2B,QAAQ,IAAI63B,UAAU,CAACA,UAAU,CAACvtD,MAAM,GAAG,CAAC,CAAC;IAC3D;IACA,MAAMZ,GAAG,GAAGG,EAAE,CAACH,GAAG;IAClB,MAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAG;IAClB,MAAM+T,KAAK,GAAGzX,cAAc,CAAC2vD,UAAU,EAAEnuD,GAAG,EAAEkC,GAAG,CAAC;IAClD/B,EAAE,CAACquD,KAAK,GAAGS,QAAQ,CAAClrC,IAAI,KAAKuO,QAAQ,CAACT,QAAQ,GAC1C87B,yBAAyB,CAACsB,QAAQ,CAACrB,OAAO,EAAEztD,EAAE,CAACH,GAAG,EAAEG,EAAE,CAAC+B,GAAG,EAAE/B,EAAE,CAACgvD,iBAAiB,CAACnvD,GAAG,CAAC,CAAC,GACtFguD,0BAA0B,CAAC7tD,EAAE,EAAE8V,KAAK,CAACrV,MAAM,EAAEquD,QAAQ,CAACrB,OAAO,EAAEztD,EAAE,CAACH,GAAG,EAAEG,EAAE,CAAC+B,GAAG,CAAC,CAAC;IACnF/B,EAAE,CAACsuD,UAAU,GAAG,CAACn8B,QAAQ,CAACL,KAAK,CAACU,OAAO,IAAIxyB,EAAE,CAACquD,KAAK,KAAK,MAAM,GAAGtvD,SAAS,GACtE+uD,kBAAkB,CAAC9tD,EAAE,CAACquD,KAAK,CAAC;IAChCruD,EAAE,CAACivD,WAAW,CAACjB,UAAU,CAAC;IAC1B,IAAInnD,OAAO,CAACkB,OAAO,EAAE;MACnB+N,KAAK,CAAC/N,OAAO,CAAC,CAAC;IACjB;IACA,OAAOomD,mBAAmB,CAACnuD,EAAE,EAAE8V,KAAK,EAAE9V,EAAE,CAACsuD,UAAU,CAAC;EACtD;EACAW,WAAWA,CAACjB,UAAU,EAAE;IACtB,MAAMhuD,EAAE,GAAG,IAAI;IACf,IAAIF,KAAK,GAAG,CAAC;IACb,IAAIkI,GAAG,GAAG,CAAC;IACX,IAAI2qB,KAAK,EAAE/Z,IAAI;IACf,IAAI5Y,EAAE,CAAC6G,OAAO,CAACsT,MAAM,IAAI6zC,UAAU,CAACvtD,MAAM,EAAE;MAC1CkyB,KAAK,GAAG3yB,EAAE,CAACkvD,kBAAkB,CAAClB,UAAU,CAAC,CAAC,CAAC,CAAC;MAC5C,IAAIA,UAAU,CAACvtD,MAAM,KAAK,CAAC,EAAE;QAC3BX,KAAK,GAAG,CAAC,GAAG6yB,KAAK;MACnB,CAAC,MAAM;QACL7yB,KAAK,GAAG,CAACE,EAAE,CAACkvD,kBAAkB,CAAClB,UAAU,CAAC,CAAC,CAAC,CAAC,GAAGr7B,KAAK,IAAI,CAAC;MAC5D;MACA/Z,IAAI,GAAG5Y,EAAE,CAACkvD,kBAAkB,CAAClB,UAAU,CAACA,UAAU,CAACvtD,MAAM,GAAG,CAAC,CAAC,CAAC;MAC/D,IAAIutD,UAAU,CAACvtD,MAAM,KAAK,CAAC,EAAE;QAC3BuH,GAAG,GAAG4Q,IAAI;MACZ,CAAC,MAAM;QACL5Q,GAAG,GAAG,CAAC4Q,IAAI,GAAG5Y,EAAE,CAACkvD,kBAAkB,CAAClB,UAAU,CAACA,UAAU,CAACvtD,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;MAC7E;IACF;IACA,MAAM0uD,KAAK,GAAGnB,UAAU,CAACvtD,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI;IAChDX,KAAK,GAAG3J,WAAW,CAAC2J,KAAK,EAAE,CAAC,EAAEqvD,KAAK,CAAC;IACpCnnD,GAAG,GAAG7R,WAAW,CAAC6R,GAAG,EAAE,CAAC,EAAEmnD,KAAK,CAAC;IAChCnvD,EAAE,CAACuuD,QAAQ,GAAG;MAACzuD,KAAK;MAAEkI,GAAG;MAAErF,MAAM,EAAE,CAAC,IAAI7C,KAAK,GAAG,CAAC,GAAGkI,GAAG;IAAC,CAAC;EAC3D;EACA+mD,SAASA,CAAA,EAAG;IACV,MAAM/uD,EAAE,GAAG,IAAI;IACf,MAAMmtD,OAAO,GAAGntD,EAAE,CAACotD,QAAQ;IAC3B,MAAMvtD,GAAG,GAAGG,EAAE,CAACH,GAAG;IAClB,MAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAG;IAClB,MAAM8E,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAMioD,QAAQ,GAAGjoD,OAAO,CAACwmD,IAAI;IAC7B,MAAMx7B,KAAK,GAAGi9B,QAAQ,CAAClrC,IAAI,IAAI4pC,yBAAyB,CAACsB,QAAQ,CAACrB,OAAO,EAAE5tD,GAAG,EAAEkC,GAAG,EAAE/B,EAAE,CAACgvD,iBAAiB,CAACnvD,GAAG,CAAC,CAAC;IAC/G,MAAMmoD,QAAQ,GAAGr0D,cAAc,CAACm7D,QAAQ,CAAC9G,QAAQ,EAAE,CAAC,CAAC;IACrD,MAAMjkC,OAAO,GAAG8N,KAAK,KAAK,MAAM,GAAGi9B,QAAQ,CAACvB,UAAU,GAAG,KAAK;IAC9D,MAAM6B,UAAU,GAAGn5D,QAAQ,CAAC8tB,OAAO,CAAC,IAAIA,OAAO,KAAK,IAAI;IACxD,MAAMjO,KAAK,GAAG,CAAC,CAAC;IAChB,IAAI6c,KAAK,GAAG9yB,GAAG;IACf,IAAIwtD,IAAI,EAAEr9C,KAAK;IACf,IAAIo/C,UAAU,EAAE;MACdz8B,KAAK,GAAG,CAACw6B,OAAO,CAACrpC,OAAO,CAAC6O,KAAK,EAAE,SAAS,EAAE5O,OAAO,CAAC;IACrD;IACA4O,KAAK,GAAG,CAACw6B,OAAO,CAACrpC,OAAO,CAAC6O,KAAK,EAAEy8B,UAAU,GAAG,KAAK,GAAGv9B,KAAK,CAAC;IAC3D,IAAIs7B,OAAO,CAACtpC,IAAI,CAAC9hB,GAAG,EAAElC,GAAG,EAAEgyB,KAAK,CAAC,GAAG,MAAM,GAAGm2B,QAAQ,EAAE;MACrD,MAAM,IAAI1kC,KAAK,CAACzjB,GAAG,GAAG,OAAO,GAAGkC,GAAG,GAAG,sCAAsC,GAAGimD,QAAQ,GAAG,GAAG,GAAGn2B,KAAK,CAAC;IACxG;IACA,MAAMm8B,UAAU,GAAGnnD,OAAO,CAACiP,KAAK,CAACmiB,MAAM,KAAK,MAAM,IAAIj4B,EAAE,CAACqvD,iBAAiB,CAAC,CAAC;IAC5E,KAAKhC,IAAI,GAAG16B,KAAK,EAAE3iB,KAAK,GAAG,CAAC,EAAEq9C,IAAI,GAAGtrD,GAAG,EAAEsrD,IAAI,GAAG,CAACF,OAAO,CAACzrD,GAAG,CAAC2rD,IAAI,EAAErF,QAAQ,EAAEn2B,KAAK,CAAC,EAAE7hB,KAAK,EAAE,EAAE;MAC7F+9C,OAAO,CAACj4C,KAAK,EAAEu3C,IAAI,EAAEW,UAAU,CAAC;IAClC;IACA,IAAIX,IAAI,KAAKtrD,GAAG,IAAI8E,OAAO,CAAC8pB,MAAM,KAAK,OAAO,IAAI3gB,KAAK,KAAK,CAAC,EAAE;MAC7D+9C,OAAO,CAACj4C,KAAK,EAAEu3C,IAAI,EAAEW,UAAU,CAAC;IAClC;IACA,OAAO7oD,MAAM,CAACC,IAAI,CAAC0Q,KAAK,CAAC,CAACP,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,GAAGQ,CAAC,CAAC,CAAC0rB,GAAG,CAAC9oB,CAAC,IAAI,CAACA,CAAC,CAAC;EAC9D;EACA2b,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,MAAMtH,EAAE,GAAG,IAAI;IACf,MAAMmtD,OAAO,GAAGntD,EAAE,CAACotD,QAAQ;IAC3B,MAAM0B,QAAQ,GAAG9uD,EAAE,CAAC6G,OAAO,CAACwmD,IAAI;IAChC,IAAIyB,QAAQ,CAACQ,aAAa,EAAE;MAC1B,OAAOnC,OAAO,CAAC1pC,MAAM,CAACnc,KAAK,EAAEwnD,QAAQ,CAACQ,aAAa,CAAC;IACtD;IACA,OAAOnC,OAAO,CAAC1pC,MAAM,CAACnc,KAAK,EAAEwnD,QAAQ,CAACL,cAAc,CAACc,QAAQ,CAAC;EAChE;EACAC,mBAAmBA,CAACnC,IAAI,EAAEvkD,KAAK,EAAEgN,KAAK,EAAE2N,MAAM,EAAE;IAC9C,MAAMzjB,EAAE,GAAG,IAAI;IACf,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAO;IAC1B,MAAM2c,OAAO,GAAG3c,OAAO,CAACwmD,IAAI,CAACoB,cAAc;IAC3C,MAAM7qC,IAAI,GAAG5jB,EAAE,CAACquD,KAAK;IACrB,MAAMH,SAAS,GAAGluD,EAAE,CAACsuD,UAAU;IAC/B,MAAMmB,WAAW,GAAG7rC,IAAI,IAAIJ,OAAO,CAACI,IAAI,CAAC;IACzC,MAAM8rC,WAAW,GAAGxB,SAAS,IAAI1qC,OAAO,CAAC0qC,SAAS,CAAC;IACnD,MAAMptD,IAAI,GAAGgV,KAAK,CAAChN,KAAK,CAAC;IACzB,MAAMgpB,KAAK,GAAGo8B,SAAS,IAAIwB,WAAW,IAAI5uD,IAAI,IAAIA,IAAI,CAACgxB,KAAK;IAC5D,MAAMlgB,KAAK,GAAG5R,EAAE,CAACotD,QAAQ,CAAC3pC,MAAM,CAAC4pC,IAAI,EAAE5pC,MAAM,KAAKqO,KAAK,GAAG49B,WAAW,GAAGD,WAAW,CAAC,CAAC;IACrF,MAAME,SAAS,GAAG9oD,OAAO,CAACiP,KAAK,CAAC7d,QAAQ;IACxC,OAAO03D,SAAS,GAAGA,SAAS,CAAC/9C,KAAK,EAAE9I,KAAK,EAAEgN,KAAK,CAAC,GAAGlE,KAAK;EAC3D;EACAknB,kBAAkBA,CAAChjB,KAAK,EAAE;IACxB,IAAI1iB,CAAC,EAAEyV,IAAI,EAAE/H,IAAI;IACjB,KAAK1N,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGiN,KAAK,CAACrV,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC9C0N,IAAI,GAAGgV,KAAK,CAAC1iB,CAAC,CAAC;MACf0N,IAAI,CAAC8Q,KAAK,GAAG,IAAI,CAAC49C,mBAAmB,CAAC1uD,IAAI,CAACwG,KAAK,EAAElU,CAAC,EAAE0iB,KAAK,CAAC;IAC7D;EACF;EACAo5C,kBAAkBA,CAAC5nD,KAAK,EAAE;IACxB,MAAMtH,EAAE,GAAG,IAAI;IACf,OAAOsH,KAAK,KAAK,IAAI,GAAG4J,GAAG,GAAG,CAAC5J,KAAK,GAAGtH,EAAE,CAACH,GAAG,KAAKG,EAAE,CAAC+B,GAAG,GAAG/B,EAAE,CAACH,GAAG,CAAC;EACpE;EACAgW,gBAAgBA,CAACvO,KAAK,EAAE;IACtB,MAAMtH,EAAE,GAAG,IAAI;IACf,MAAM4vD,OAAO,GAAG5vD,EAAE,CAACuuD,QAAQ;IAC3B,MAAMxnC,GAAG,GAAG/mB,EAAE,CAACkvD,kBAAkB,CAAC5nD,KAAK,CAAC;IACxC,OAAOtH,EAAE,CAAC0a,kBAAkB,CAAC,CAACk1C,OAAO,CAAC9vD,KAAK,GAAGinB,GAAG,IAAI6oC,OAAO,CAACjtD,MAAM,CAAC;EACtE;EACAy4B,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,MAAM4vD,OAAO,GAAG5vD,EAAE,CAACuuD,QAAQ;IAC3B,MAAMxnC,GAAG,GAAG/mB,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC,GAAGu0B,OAAO,CAACjtD,MAAM,GAAGitD,OAAO,CAAC5nD,GAAG;IACvE,OAAOhI,EAAE,CAACH,GAAG,GAAGknB,GAAG,IAAI/mB,EAAE,CAAC+B,GAAG,GAAG/B,EAAE,CAACH,GAAG,CAAC;EACzC;EACAgwD,aAAaA,CAACj+C,KAAK,EAAE;IACnB,MAAM5R,EAAE,GAAG,IAAI;IACf,MAAM8vD,SAAS,GAAG9vD,EAAE,CAAC6G,OAAO,CAACiP,KAAK;IAClC,MAAMi6C,cAAc,GAAG/vD,EAAE,CAAC2M,GAAG,CAACiuC,WAAW,CAAChpC,KAAK,CAAC,CAAC8G,KAAK;IACtD,MAAMuD,KAAK,GAAGhnB,SAAS,CAAC+K,EAAE,CAACgY,YAAY,CAAC,CAAC,GAAG83C,SAAS,CAACx+B,WAAW,GAAGw+B,SAAS,CAACz+B,WAAW,CAAC;IAC1F,MAAM2+B,WAAW,GAAGpwD,IAAI,CAAC+b,GAAG,CAACM,KAAK,CAAC;IACnC,MAAMg0C,WAAW,GAAGrwD,IAAI,CAACic,GAAG,CAACI,KAAK,CAAC;IACnC,MAAMi0C,YAAY,GAAGlwD,EAAE,CAACg7B,uBAAuB,CAAC,CAAC,CAAC,CAACzzB,IAAI;IACvD,OAAO;MACLvR,CAAC,EAAG+5D,cAAc,GAAGC,WAAW,GAAKE,YAAY,GAAGD,WAAY;MAChE77D,CAAC,EAAG27D,cAAc,GAAGE,WAAW,GAAKC,YAAY,GAAGF;IACtD,CAAC;EACH;EACAhB,iBAAiBA,CAACmB,WAAW,EAAE;IAC7B,MAAMnwD,EAAE,GAAG,IAAI;IACf,MAAM8uD,QAAQ,GAAG9uD,EAAE,CAAC6G,OAAO,CAACwmD,IAAI;IAChC,MAAMoB,cAAc,GAAGK,QAAQ,CAACL,cAAc;IAC9C,MAAMhrC,MAAM,GAAGgrC,cAAc,CAACK,QAAQ,CAAClrC,IAAI,CAAC,IAAI6qC,cAAc,CAACpC,WAAW;IAC1E,MAAM+D,YAAY,GAAGpwD,EAAE,CAACwvD,mBAAmB,CAACW,WAAW,EAAE,CAAC,EAAEhC,mBAAmB,CAACnuD,EAAE,EAAE,CAACmwD,WAAW,CAAC,EAAEnwD,EAAE,CAACsuD,UAAU,CAAC,EAAE7qC,MAAM,CAAC;IAC1H,MAAMlc,IAAI,GAAGvH,EAAE,CAAC6vD,aAAa,CAACO,YAAY,CAAC;IAC3C,MAAM1C,QAAQ,GAAG9tD,IAAI,CAACgE,KAAK,CAAC5D,EAAE,CAACgY,YAAY,CAAC,CAAC,GAAGhY,EAAE,CAAC0Y,KAAK,GAAGnR,IAAI,CAACvR,CAAC,GAAGgK,EAAE,CAACyY,MAAM,GAAGlR,IAAI,CAACnT,CAAC,CAAC,GAAG,CAAC;IAC3F,OAAOs5D,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC;EACpC;EACA2B,iBAAiBA,CAAA,EAAG;IAClB,MAAMrvD,EAAE,GAAG,IAAI;IACf,IAAIguD,UAAU,GAAGhuD,EAAE,CAACkV,MAAM,CAAC3L,IAAI,IAAI,EAAE;IACrC,IAAInW,CAAC,EAAEyV,IAAI;IACX,IAAImlD,UAAU,CAACvtD,MAAM,EAAE;MACrB,OAAOutD,UAAU;IACnB;IACA,MAAM54C,KAAK,GAAGpV,EAAE,CAACqV,uBAAuB,CAAC,CAAC;IAC1C,IAAIrV,EAAE,CAACwuD,WAAW,IAAIp5C,KAAK,CAAC3U,MAAM,EAAE;MAClC,OAAQT,EAAE,CAACkV,MAAM,CAAC3L,IAAI,GAAG6L,KAAK,CAAC,CAAC,CAAC,CAACvK,UAAU,CAAC4G,kBAAkB,CAACzR,EAAE,CAAC;IACrE;IACA,KAAK5M,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGuM,KAAK,CAAC3U,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC9C46D,UAAU,GAAGA,UAAU,CAAC14C,MAAM,CAACF,KAAK,CAAChiB,CAAC,CAAC,CAACyX,UAAU,CAAC4G,kBAAkB,CAACzR,EAAE,CAAC,CAAC;IAC5E;IACA,OAAQA,EAAE,CAACkV,MAAM,CAAC3L,IAAI,GAAGvJ,EAAE,CAACqwD,SAAS,CAACrC,UAAU,CAAC;EACnD;EACAa,kBAAkBA,CAAA,EAAG;IACnB,MAAM7uD,EAAE,GAAG,IAAI;IACf,MAAMguD,UAAU,GAAGhuD,EAAE,CAACkV,MAAM,CAAC1E,MAAM,IAAI,EAAE;IACzC,IAAIpd,CAAC,EAAEyV,IAAI;IACX,IAAImlD,UAAU,CAACvtD,MAAM,EAAE;MACrB,OAAOutD,UAAU;IACnB;IACA,MAAMx9C,MAAM,GAAGxQ,EAAE,CAACyQ,SAAS,CAAC,CAAC;IAC7B,KAAKrd,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAG2H,MAAM,CAAC/P,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MAC/C46D,UAAU,CAACvsD,IAAI,CAACsO,KAAK,CAAC/P,EAAE,EAAEwQ,MAAM,CAACpd,CAAC,CAAC,CAAC,CAAC;IACvC;IACA,OAAQ4M,EAAE,CAACkV,MAAM,CAAC1E,MAAM,GAAGxQ,EAAE,CAACwuD,WAAW,GAAGR,UAAU,GAAGhuD,EAAE,CAACqwD,SAAS,CAACrC,UAAU,CAAC;EACnF;EACAqC,SAASA,CAAC1pD,MAAM,EAAE;IAChB,OAAO5R,YAAY,CAAC4R,MAAM,CAAC4O,IAAI,CAAC03C,MAAM,CAAC,CAAC;EAC1C;AACF;AACAmB,SAAS,CAACpkD,EAAE,GAAG,MAAM;AACrBokD,SAAS,CAAC36D,QAAQ,GAAG;EACnBk9B,MAAM,EAAE,MAAM;EACdxM,QAAQ,EAAE,CAAC,CAAC;EACZkpC,IAAI,EAAE;IACJC,MAAM,EAAE,KAAK;IACb1pC,IAAI,EAAE,KAAK;IACXoP,KAAK,EAAE,KAAK;IACZu6B,UAAU,EAAE,KAAK;IACjBE,OAAO,EAAE,aAAa;IACtBgB,cAAc,EAAE,CAAC;EACnB,CAAC;EACD34C,KAAK,EAAE;IACLmiB,MAAM,EAAE,MAAM;IACdnG,KAAK,EAAE;MACLU,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAASme,WAAWA,CAAC2f,KAAK,EAAEz3C,GAAG,EAAE9Q,OAAO,EAAE;EACxC,IAAIwoD,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU;EAClD,IAAI3oD,OAAO,EAAE;IACXwoD,UAAU,GAAG3wD,IAAI,CAACgE,KAAK,CAACiV,GAAG,CAAC;IAC5B23C,UAAU,GAAG5wD,IAAI,CAAC6zB,IAAI,CAAC5a,GAAG,CAAC;IAC3B43C,UAAU,GAAGH,KAAK,CAACC,UAAU,CAAC;IAC9BG,UAAU,GAAGJ,KAAK,CAACE,UAAU,CAAC;EAChC,CAAC,MAAM;IACL,MAAMh9B,MAAM,GAAGj1B,OAAO,CAAC+xD,KAAK,EAAEz3C,GAAG,CAAC;IAClC43C,UAAU,GAAGj9B,MAAM,CAACtS,EAAE;IACtBwvC,UAAU,GAAGl9B,MAAM,CAACrS,EAAE;IACtBovC,UAAU,GAAGD,KAAK,CAACG,UAAU,CAAC;IAC9BD,UAAU,GAAGF,KAAK,CAACI,UAAU,CAAC;EAChC;EACA,MAAMC,IAAI,GAAGH,UAAU,GAAGD,UAAU;EACpC,OAAOI,IAAI,GAAGF,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAU,KAAK53C,GAAG,GAAG03C,UAAU,CAAC,GAAGI,IAAI,GAAGF,UAAU;AAC/F;AACA,MAAMG,eAAe,SAASxC,SAAS,CAAC;EACtC3vD,WAAWA,CAAC2I,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACypD,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,SAAS,GAAG/xD,SAAS;EAC5B;EACAkwD,WAAWA,CAAA,EAAG;IACZ,MAAMjvD,EAAE,GAAG,IAAI;IACf,MAAMguD,UAAU,GAAGhuD,EAAE,CAAC+wD,sBAAsB,CAAC,CAAC;IAC9C/wD,EAAE,CAAC6wD,MAAM,GAAG7wD,EAAE,CAACgxD,gBAAgB,CAAChD,UAAU,CAAC;IAC3ChuD,EAAE,CAAC8wD,SAAS,GAAG9wD,EAAE,CAAC6wD,MAAM,CAACpwD,MAAM,GAAG,CAAC;IACnC,KAAK,CAACwuD,WAAW,CAACjB,UAAU,CAAC;EAC/B;EACAgD,gBAAgBA,CAAChD,UAAU,EAAE;IAC3B,MAAMhuD,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEkC;IAAG,CAAC,GAAG/B,EAAE;IACrB,IAAI,CAACguD,UAAU,CAACvtD,MAAM,EAAE;MACtB,OAAO,CACL;QAAC4sD,IAAI,EAAExtD,GAAG;QAAEknB,GAAG,EAAE;MAAC,CAAC,EACnB;QAACsmC,IAAI,EAAEtrD,GAAG;QAAEglB,GAAG,EAAE;MAAC,CAAC,CACpB;IACH;IACA,MAAMvmB,KAAK,GAAG,CAACX,GAAG,CAAC;IACnB,IAAIzM,CAAC,EAAEyV,IAAI,EAAE6M,IAAI;IACjB,KAAKtiB,CAAC,GAAG,CAAC,EAAEyV,IAAI,GAAGmlD,UAAU,CAACvtD,MAAM,EAAErN,CAAC,GAAGyV,IAAI,EAAE,EAAEzV,CAAC,EAAE;MACnDsiB,IAAI,GAAGs4C,UAAU,CAAC56D,CAAC,CAAC;MACpB,IAAIsiB,IAAI,GAAG7V,GAAG,IAAI6V,IAAI,GAAG3T,GAAG,EAAE;QAC5BvB,KAAK,CAACiB,IAAI,CAACiU,IAAI,CAAC;MAClB;IACF;IACAlV,KAAK,CAACiB,IAAI,CAACM,GAAG,CAAC;IACf,OAAOvB,KAAK;EACd;EACAuwD,sBAAsBA,CAAA,EAAG;IACvB,MAAM/wD,EAAE,GAAG,IAAI;IACf,IAAIguD,UAAU,GAAGhuD,EAAE,CAACkV,MAAM,CAACxN,GAAG,IAAI,EAAE;IACpC,IAAIsmD,UAAU,CAACvtD,MAAM,EAAE;MACrB,OAAOutD,UAAU;IACnB;IACA,MAAMzkD,IAAI,GAAGvJ,EAAE,CAACqvD,iBAAiB,CAAC,CAAC;IACnC,MAAMz9C,KAAK,GAAG5R,EAAE,CAAC6uD,kBAAkB,CAAC,CAAC;IACrC,IAAItlD,IAAI,CAAC9I,MAAM,IAAImR,KAAK,CAACnR,MAAM,EAAE;MAC/ButD,UAAU,GAAGhuD,EAAE,CAACqwD,SAAS,CAAC9mD,IAAI,CAAC+L,MAAM,CAAC1D,KAAK,CAAC,CAAC;IAC/C,CAAC,MAAM;MACLo8C,UAAU,GAAGzkD,IAAI,CAAC9I,MAAM,GAAG8I,IAAI,GAAGqI,KAAK;IACzC;IACAo8C,UAAU,GAAGhuD,EAAE,CAACkV,MAAM,CAACxN,GAAG,GAAGsmD,UAAU;IACvC,OAAOA,UAAU;EACnB;EACAn4C,gBAAgBA,CAACvO,KAAK,EAAEwB,KAAK,EAAE;IAC7B,MAAM9I,EAAE,GAAG,IAAI;IACf,MAAM4vD,OAAO,GAAG5vD,EAAE,CAACuuD,QAAQ;IAC3B,MAAMxnC,GAAG,GAAG/mB,EAAE,CAACwuD,WAAW,IAAIxuD,EAAE,CAAC8wD,SAAS,GAAG,CAAC,IAAI,CAACr8D,aAAa,CAACqU,KAAK,CAAC,GACnEA,KAAK,GAAG9I,EAAE,CAAC8wD,SAAS,GAAG9wD,EAAE,CAACkvD,kBAAkB,CAAC5nD,KAAK,CAAC;IACvD,OAAOtH,EAAE,CAAC0a,kBAAkB,CAAC,CAACk1C,OAAO,CAAC9vD,KAAK,GAAGinB,GAAG,IAAI6oC,OAAO,CAACjtD,MAAM,CAAC;EACtE;EACAusD,kBAAkBA,CAAC5nD,KAAK,EAAE;IACxB,OAAOqpC,WAAW,CAAC,IAAI,CAACkgB,MAAM,EAAEvpD,KAAK,CAAC,GAAG,IAAI,CAACwpD,SAAS;EACzD;EACA11B,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,MAAM4vD,OAAO,GAAG5vD,EAAE,CAACuuD,QAAQ;IAC3B,MAAMjzB,OAAO,GAAGt7B,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC,GAAGu0B,OAAO,CAACjtD,MAAM,GAAGitD,OAAO,CAAC5nD,GAAG;IAC3E,OAAO2oC,WAAW,CAAC3wC,EAAE,CAAC6wD,MAAM,EAAEv1B,OAAO,GAAG,IAAI,CAACw1B,SAAS,EAAE,IAAI,CAAC;EAC/D;AACF;AACAF,eAAe,CAAC5mD,EAAE,GAAG,YAAY;AACjC4mD,eAAe,CAACn9D,QAAQ,GAAG26D,SAAS,CAAC36D,QAAQ;AAE7C,IAAI+X,MAAM,GAAG,aAAarG,MAAM,CAAC8N,MAAM,CAAC;EACxCmQ,SAAS,EAAE,IAAI;EACfkjC,aAAa,EAAEA,aAAa;EAC5B6B,WAAW,EAAEA,WAAW;EACxBS,gBAAgB,EAAEA,gBAAgB;EAClC+B,iBAAiB,EAAEA,iBAAiB;EACpCyD,SAAS,EAAEA,SAAS;EACpBwC,eAAe,EAAEA;AACjB,CAAC,CAAC;AAEF,MAAMK,aAAa,GAAG,CACpB9tC,WAAW,EACXnR,QAAQ,EACR6I,OAAO,EACPrP,MAAM,CACP;AAED,SAAStI,SAAS,EAAE+C,UAAU,EAAE8nC,UAAU,EAAEv2B,aAAa,EAAEg8B,UAAU,EAAE5oB,YAAY,EAAES,aAAa,EAAE9Q,gBAAgB,EAAE+rC,aAAa,EAAE5e,KAAK,EAAEj7B,iBAAiB,EAAE2oC,iBAAiB,IAAI6Q,UAAU,EAAEl3B,WAAW,EAAExS,kBAAkB,EAAEgT,OAAO,EAAEqpB,aAAa,IAAIsN,MAAM,EAAEz/B,WAAW,EAAE22B,aAAa,IAAIzD,MAAM,EAAE35B,cAAc,EAAEswB,WAAW,EAAE6X,WAAW,EAAES,gBAAgB,EAAEhmC,aAAa,EAAEuuB,YAAY,EAAExvB,mBAAmB,EAAEkB,eAAe,EAAE8nC,iBAAiB,EAAEn1B,KAAK,EAAEtS,iBAAiB,EAAEwN,KAAK,EAAE09B,SAAS,EAAEwC,eAAe,EAAE7S,YAAY,IAAIP,KAAK,EAAEqI,cAAc,IAAIpE,OAAO,EAAEt9B,QAAQ,IAAI+sC,SAAS,EAAE7uD,QAAQ,EAAE8gB,WAAW,EAAEnR,QAAQ,EAAEyV,OAAO,EAAE5M,OAAO,EAAEo2C,aAAa,EAAEhvB,QAAQ,EAAEz2B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}